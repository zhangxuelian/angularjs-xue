{"banner":"/**\n * angularjs-xue\n * Homepage: https://github.com/zhangxuelian/angularjs-xue\n * \n * Version: 1.0.0 - 2020-03-17\n * Require angularjs version: 1.2.32\n * License: ISC\n */\n","cssBanner":"/* Include this file in your html if you are using the CSP mode. */\n\n","files":{"misc/tool/jquery-1.10.2.min.js":"/*! jQuery v1.10.2 | (c) 2005, 2013 jQuery Foundation, Inc. | jquery.org/license\n//@ sourceMappingURL=jquery-1.10.2.min.map\n*/\n(function(e,t){var n,r,i=typeof t,o=e.location,a=e.document,s=a.documentElement,l=e.jQuery,u=e.$,c={},p=[],f=\"1.10.2\",d=p.concat,h=p.push,g=p.slice,m=p.indexOf,y=c.toString,v=c.hasOwnProperty,b=f.trim,x=function(e,t){return new x.fn.init(e,t,r)},w=/[+-]?(?:\\d*\\.|)\\d+(?:[eE][+-]?\\d+|)/.source,T=/\\S+/g,C=/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g,N=/^(?:\\s*(<[\\w\\W]+>)[^>]*|#([\\w-]*))$/,k=/^<(\\w+)\\s*\\/?>(?:<\\/\\1>|)$/,E=/^[\\],:{}\\s]*$/,S=/(?:^|:|,)(?:\\s*\\[)+/g,A=/\\\\(?:[\"\\\\\\/bfnrt]|u[\\da-fA-F]{4})/g,j=/\"[^\"\\\\\\r\\n]*\"|true|false|null|-?(?:\\d+\\.|)\\d+(?:[eE][+-]?\\d+|)/g,D=/^-ms-/,L=/-([\\da-z])/gi,H=function(e,t){return t.toUpperCase()},q=function(e){(a.addEventListener||\"load\"===e.type||\"complete\"===a.readyState)&&(_(),x.ready())},_=function(){a.addEventListener?(a.removeEventListener(\"DOMContentLoaded\",q,!1),e.removeEventListener(\"load\",q,!1)):(a.detachEvent(\"onreadystatechange\",q),e.detachEvent(\"onload\",q))};x.fn=x.prototype={jquery:f,constructor:x,init:function(e,n,r){var i,o;if(!e)return this;if(\"string\"==typeof e){if(i=\"<\"===e.charAt(0)&&\">\"===e.charAt(e.length-1)&&e.length>=3?[null,e,null]:N.exec(e),!i||!i[1]&&n)return!n||n.jquery?(n||r).find(e):this.constructor(n).find(e);if(i[1]){if(n=n instanceof x?n[0]:n,x.merge(this,x.parseHTML(i[1],n&&n.nodeType?n.ownerDocument||n:a,!0)),k.test(i[1])&&x.isPlainObject(n))for(i in n)x.isFunction(this[i])?this[i](n[i]):this.attr(i,n[i]);return this}if(o=a.getElementById(i[2]),o&&o.parentNode){if(o.id!==i[2])return r.find(e);this.length=1,this[0]=o}return this.context=a,this.selector=e,this}return e.nodeType?(this.context=this[0]=e,this.length=1,this):x.isFunction(e)?r.ready(e):(e.selector!==t&&(this.selector=e.selector,this.context=e.context),x.makeArray(e,this))},selector:\"\",length:0,toArray:function(){return g.call(this)},get:function(e){return null==e?this.toArray():0>e?this[this.length+e]:this[e]},pushStack:function(e){var t=x.merge(this.constructor(),e);return t.prevObject=this,t.context=this.context,t},each:function(e,t){return x.each(this,e,t)},ready:function(e){return x.ready.promise().done(e),this},slice:function(){return this.pushStack(g.apply(this,arguments))},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},eq:function(e){var t=this.length,n=+e+(0>e?t:0);return this.pushStack(n>=0&&t>n?[this[n]]:[])},map:function(e){return this.pushStack(x.map(this,function(t,n){return e.call(t,n,t)}))},end:function(){return this.prevObject||this.constructor(null)},push:h,sort:[].sort,splice:[].splice},x.fn.init.prototype=x.fn,x.extend=x.fn.extend=function(){var e,n,r,i,o,a,s=arguments[0]||{},l=1,u=arguments.length,c=!1;for(\"boolean\"==typeof s&&(c=s,s=arguments[1]||{},l=2),\"object\"==typeof s||x.isFunction(s)||(s={}),u===l&&(s=this,--l);u>l;l++)if(null!=(o=arguments[l]))for(i in o)e=s[i],r=o[i],s!==r&&(c&&r&&(x.isPlainObject(r)||(n=x.isArray(r)))?(n?(n=!1,a=e&&x.isArray(e)?e:[]):a=e&&x.isPlainObject(e)?e:{},s[i]=x.extend(c,a,r)):r!==t&&(s[i]=r));return s},x.extend({expando:\"jQuery\"+(f+Math.random()).replace(/\\D/g,\"\"),noConflict:function(t){return e.$===x&&(e.$=u),t&&e.jQuery===x&&(e.jQuery=l),x},isReady:!1,readyWait:1,holdReady:function(e){e?x.readyWait++:x.ready(!0)},ready:function(e){if(e===!0?!--x.readyWait:!x.isReady){if(!a.body)return setTimeout(x.ready);x.isReady=!0,e!==!0&&--x.readyWait>0||(n.resolveWith(a,[x]),x.fn.trigger&&x(a).trigger(\"ready\").off(\"ready\"))}},isFunction:function(e){return\"function\"===x.type(e)},isArray:Array.isArray||function(e){return\"array\"===x.type(e)},isWindow:function(e){return null!=e&&e==e.window},isNumeric:function(e){return!isNaN(parseFloat(e))&&isFinite(e)},type:function(e){return null==e?e+\"\":\"object\"==typeof e||\"function\"==typeof e?c[y.call(e)]||\"object\":typeof e},isPlainObject:function(e){var n;if(!e||\"object\"!==x.type(e)||e.nodeType||x.isWindow(e))return!1;try{if(e.constructor&&!v.call(e,\"constructor\")&&!v.call(e.constructor.prototype,\"isPrototypeOf\"))return!1}catch(r){return!1}if(x.support.ownLast)for(n in e)return v.call(e,n);for(n in e);return n===t||v.call(e,n)},isEmptyObject:function(e){var t;for(t in e)return!1;return!0},error:function(e){throw Error(e)},parseHTML:function(e,t,n){if(!e||\"string\"!=typeof e)return null;\"boolean\"==typeof t&&(n=t,t=!1),t=t||a;var r=k.exec(e),i=!n&&[];return r?[t.createElement(r[1])]:(r=x.buildFragment([e],t,i),i&&x(i).remove(),x.merge([],r.childNodes))},parseJSON:function(n){return e.JSON&&e.JSON.parse?e.JSON.parse(n):null===n?n:\"string\"==typeof n&&(n=x.trim(n),n&&E.test(n.replace(A,\"@\").replace(j,\"]\").replace(S,\"\")))?Function(\"return \"+n)():(x.error(\"Invalid JSON: \"+n),t)},parseXML:function(n){var r,i;if(!n||\"string\"!=typeof n)return null;try{e.DOMParser?(i=new DOMParser,r=i.parseFromString(n,\"text/xml\")):(r=new ActiveXObject(\"Microsoft.XMLDOM\"),r.async=\"false\",r.loadXML(n))}catch(o){r=t}return r&&r.documentElement&&!r.getElementsByTagName(\"parsererror\").length||x.error(\"Invalid XML: \"+n),r},noop:function(){},globalEval:function(t){t&&x.trim(t)&&(e.execScript||function(t){e.eval.call(e,t)})(t)},camelCase:function(e){return e.replace(D,\"ms-\").replace(L,H)},nodeName:function(e,t){return e.nodeName&&e.nodeName.toLowerCase()===t.toLowerCase()},each:function(e,t,n){var r,i=0,o=e.length,a=M(e);if(n){if(a){for(;o>i;i++)if(r=t.apply(e[i],n),r===!1)break}else for(i in e)if(r=t.apply(e[i],n),r===!1)break}else if(a){for(;o>i;i++)if(r=t.call(e[i],i,e[i]),r===!1)break}else for(i in e)if(r=t.call(e[i],i,e[i]),r===!1)break;return e},trim:b&&!b.call(\"\\ufeff\\u00a0\")?function(e){return null==e?\"\":b.call(e)}:function(e){return null==e?\"\":(e+\"\").replace(C,\"\")},makeArray:function(e,t){var n=t||[];return null!=e&&(M(Object(e))?x.merge(n,\"string\"==typeof e?[e]:e):h.call(n,e)),n},inArray:function(e,t,n){var r;if(t){if(m)return m.call(t,e,n);for(r=t.length,n=n?0>n?Math.max(0,r+n):n:0;r>n;n++)if(n in t&&t[n]===e)return n}return-1},merge:function(e,n){var r=n.length,i=e.length,o=0;if(\"number\"==typeof r)for(;r>o;o++)e[i++]=n[o];else while(n[o]!==t)e[i++]=n[o++];return e.length=i,e},grep:function(e,t,n){var r,i=[],o=0,a=e.length;for(n=!!n;a>o;o++)r=!!t(e[o],o),n!==r&&i.push(e[o]);return i},map:function(e,t,n){var r,i=0,o=e.length,a=M(e),s=[];if(a)for(;o>i;i++)r=t(e[i],i,n),null!=r&&(s[s.length]=r);else for(i in e)r=t(e[i],i,n),null!=r&&(s[s.length]=r);return d.apply([],s)},guid:1,proxy:function(e,n){var r,i,o;return\"string\"==typeof n&&(o=e[n],n=e,e=o),x.isFunction(e)?(r=g.call(arguments,2),i=function(){return e.apply(n||this,r.concat(g.call(arguments)))},i.guid=e.guid=e.guid||x.guid++,i):t},access:function(e,n,r,i,o,a,s){var l=0,u=e.length,c=null==r;if(\"object\"===x.type(r)){o=!0;for(l in r)x.access(e,n,l,r[l],!0,a,s)}else if(i!==t&&(o=!0,x.isFunction(i)||(s=!0),c&&(s?(n.call(e,i),n=null):(c=n,n=function(e,t,n){return c.call(x(e),n)})),n))for(;u>l;l++)n(e[l],r,s?i:i.call(e[l],l,n(e[l],r)));return o?e:c?n.call(e):u?n(e[0],r):a},now:function(){return(new Date).getTime()},swap:function(e,t,n,r){var i,o,a={};for(o in t)a[o]=e.style[o],e.style[o]=t[o];i=n.apply(e,r||[]);for(o in t)e.style[o]=a[o];return i}}),x.ready.promise=function(t){if(!n)if(n=x.Deferred(),\"complete\"===a.readyState)setTimeout(x.ready);else if(a.addEventListener)a.addEventListener(\"DOMContentLoaded\",q,!1),e.addEventListener(\"load\",q,!1);else{a.attachEvent(\"onreadystatechange\",q),e.attachEvent(\"onload\",q);var r=!1;try{r=null==e.frameElement&&a.documentElement}catch(i){}r&&r.doScroll&&function o(){if(!x.isReady){try{r.doScroll(\"left\")}catch(e){return setTimeout(o,50)}_(),x.ready()}}()}return n.promise(t)},x.each(\"Boolean Number String Function Array Date RegExp Object Error\".split(\" \"),function(e,t){c[\"[object \"+t+\"]\"]=t.toLowerCase()});function M(e){var t=e.length,n=x.type(e);return x.isWindow(e)?!1:1===e.nodeType&&t?!0:\"array\"===n||\"function\"!==n&&(0===t||\"number\"==typeof t&&t>0&&t-1 in e)}r=x(a),function(e,t){var n,r,i,o,a,s,l,u,c,p,f,d,h,g,m,y,v,b=\"sizzle\"+-new Date,w=e.document,T=0,C=0,N=st(),k=st(),E=st(),S=!1,A=function(e,t){return e===t?(S=!0,0):0},j=typeof t,D=1<<31,L={}.hasOwnProperty,H=[],q=H.pop,_=H.push,M=H.push,O=H.slice,F=H.indexOf||function(e){var t=0,n=this.length;for(;n>t;t++)if(this[t]===e)return t;return-1},B=\"checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped\",P=\"[\\\\x20\\\\t\\\\r\\\\n\\\\f]\",R=\"(?:\\\\\\\\.|[\\\\w-]|[^\\\\x00-\\\\xa0])+\",W=R.replace(\"w\",\"w#\"),$=\"\\\\[\"+P+\"*(\"+R+\")\"+P+\"*(?:([*^$|!~]?=)\"+P+\"*(?:(['\\\"])((?:\\\\\\\\.|[^\\\\\\\\])*?)\\\\3|(\"+W+\")|)|)\"+P+\"*\\\\]\",I=\":(\"+R+\")(?:\\\\(((['\\\"])((?:\\\\\\\\.|[^\\\\\\\\])*?)\\\\3|((?:\\\\\\\\.|[^\\\\\\\\()[\\\\]]|\"+$.replace(3,8)+\")*)|.*)\\\\)|)\",z=RegExp(\"^\"+P+\"+|((?:^|[^\\\\\\\\])(?:\\\\\\\\.)*)\"+P+\"+$\",\"g\"),X=RegExp(\"^\"+P+\"*,\"+P+\"*\"),U=RegExp(\"^\"+P+\"*([>+~]|\"+P+\")\"+P+\"*\"),V=RegExp(P+\"*[+~]\"),Y=RegExp(\"=\"+P+\"*([^\\\\]'\\\"]*)\"+P+\"*\\\\]\",\"g\"),J=RegExp(I),G=RegExp(\"^\"+W+\"$\"),Q={ID:RegExp(\"^#(\"+R+\")\"),CLASS:RegExp(\"^\\\\.(\"+R+\")\"),TAG:RegExp(\"^(\"+R.replace(\"w\",\"w*\")+\")\"),ATTR:RegExp(\"^\"+$),PSEUDO:RegExp(\"^\"+I),CHILD:RegExp(\"^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\\\(\"+P+\"*(even|odd|(([+-]|)(\\\\d*)n|)\"+P+\"*(?:([+-]|)\"+P+\"*(\\\\d+)|))\"+P+\"*\\\\)|)\",\"i\"),bool:RegExp(\"^(?:\"+B+\")$\",\"i\"),needsContext:RegExp(\"^\"+P+\"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\\\(\"+P+\"*((?:-\\\\d)?\\\\d*)\"+P+\"*\\\\)|)(?=[^-]|$)\",\"i\")},K=/^[^{]+\\{\\s*\\[native \\w/,Z=/^(?:#([\\w-]+)|(\\w+)|\\.([\\w-]+))$/,et=/^(?:input|select|textarea|button)$/i,tt=/^h\\d$/i,nt=/'|\\\\/g,rt=RegExp(\"\\\\\\\\([\\\\da-f]{1,6}\"+P+\"?|(\"+P+\")|.)\",\"ig\"),it=function(e,t,n){var r=\"0x\"+t-65536;return r!==r||n?t:0>r?String.fromCharCode(r+65536):String.fromCharCode(55296|r>>10,56320|1023&r)};try{M.apply(H=O.call(w.childNodes),w.childNodes),H[w.childNodes.length].nodeType}catch(ot){M={apply:H.length?function(e,t){_.apply(e,O.call(t))}:function(e,t){var n=e.length,r=0;while(e[n++]=t[r++]);e.length=n-1}}}function at(e,t,n,i){var o,a,s,l,u,c,d,m,y,x;if((t?t.ownerDocument||t:w)!==f&&p(t),t=t||f,n=n||[],!e||\"string\"!=typeof e)return n;if(1!==(l=t.nodeType)&&9!==l)return[];if(h&&!i){if(o=Z.exec(e))if(s=o[1]){if(9===l){if(a=t.getElementById(s),!a||!a.parentNode)return n;if(a.id===s)return n.push(a),n}else if(t.ownerDocument&&(a=t.ownerDocument.getElementById(s))&&v(t,a)&&a.id===s)return n.push(a),n}else{if(o[2])return M.apply(n,t.getElementsByTagName(e)),n;if((s=o[3])&&r.getElementsByClassName&&t.getElementsByClassName)return M.apply(n,t.getElementsByClassName(s)),n}if(r.qsa&&(!g||!g.test(e))){if(m=d=b,y=t,x=9===l&&e,1===l&&\"object\"!==t.nodeName.toLowerCase()){c=mt(e),(d=t.getAttribute(\"id\"))?m=d.replace(nt,\"\\\\$&\"):t.setAttribute(\"id\",m),m=\"[id='\"+m+\"'] \",u=c.length;while(u--)c[u]=m+yt(c[u]);y=V.test(e)&&t.parentNode||t,x=c.join(\",\")}if(x)try{return M.apply(n,y.querySelectorAll(x)),n}catch(T){}finally{d||t.removeAttribute(\"id\")}}}return kt(e.replace(z,\"$1\"),t,n,i)}function st(){var e=[];function t(n,r){return e.push(n+=\" \")>o.cacheLength&&delete t[e.shift()],t[n]=r}return t}function lt(e){return e[b]=!0,e}function ut(e){var t=f.createElement(\"div\");try{return!!e(t)}catch(n){return!1}finally{t.parentNode&&t.parentNode.removeChild(t),t=null}}function ct(e,t){var n=e.split(\"|\"),r=e.length;while(r--)o.attrHandle[n[r]]=t}function pt(e,t){var n=t&&e,r=n&&1===e.nodeType&&1===t.nodeType&&(~t.sourceIndex||D)-(~e.sourceIndex||D);if(r)return r;if(n)while(n=n.nextSibling)if(n===t)return-1;return e?1:-1}function ft(e){return function(t){var n=t.nodeName.toLowerCase();return\"input\"===n&&t.type===e}}function dt(e){return function(t){var n=t.nodeName.toLowerCase();return(\"input\"===n||\"button\"===n)&&t.type===e}}function ht(e){return lt(function(t){return t=+t,lt(function(n,r){var i,o=e([],n.length,t),a=o.length;while(a--)n[i=o[a]]&&(n[i]=!(r[i]=n[i]))})})}s=at.isXML=function(e){var t=e&&(e.ownerDocument||e).documentElement;return t?\"HTML\"!==t.nodeName:!1},r=at.support={},p=at.setDocument=function(e){var n=e?e.ownerDocument||e:w,i=n.defaultView;return n!==f&&9===n.nodeType&&n.documentElement?(f=n,d=n.documentElement,h=!s(n),i&&i.attachEvent&&i!==i.top&&i.attachEvent(\"onbeforeunload\",function(){p()}),r.attributes=ut(function(e){return e.className=\"i\",!e.getAttribute(\"className\")}),r.getElementsByTagName=ut(function(e){return e.appendChild(n.createComment(\"\")),!e.getElementsByTagName(\"*\").length}),r.getElementsByClassName=ut(function(e){return e.innerHTML=\"<div class='a'></div><div class='a i'></div>\",e.firstChild.className=\"i\",2===e.getElementsByClassName(\"i\").length}),r.getById=ut(function(e){return d.appendChild(e).id=b,!n.getElementsByName||!n.getElementsByName(b).length}),r.getById?(o.find.ID=function(e,t){if(typeof t.getElementById!==j&&h){var n=t.getElementById(e);return n&&n.parentNode?[n]:[]}},o.filter.ID=function(e){var t=e.replace(rt,it);return function(e){return e.getAttribute(\"id\")===t}}):(delete o.find.ID,o.filter.ID=function(e){var t=e.replace(rt,it);return function(e){var n=typeof e.getAttributeNode!==j&&e.getAttributeNode(\"id\");return n&&n.value===t}}),o.find.TAG=r.getElementsByTagName?function(e,n){return typeof n.getElementsByTagName!==j?n.getElementsByTagName(e):t}:function(e,t){var n,r=[],i=0,o=t.getElementsByTagName(e);if(\"*\"===e){while(n=o[i++])1===n.nodeType&&r.push(n);return r}return o},o.find.CLASS=r.getElementsByClassName&&function(e,n){return typeof n.getElementsByClassName!==j&&h?n.getElementsByClassName(e):t},m=[],g=[],(r.qsa=K.test(n.querySelectorAll))&&(ut(function(e){e.innerHTML=\"<select><option selected=''></option></select>\",e.querySelectorAll(\"[selected]\").length||g.push(\"\\\\[\"+P+\"*(?:value|\"+B+\")\"),e.querySelectorAll(\":checked\").length||g.push(\":checked\")}),ut(function(e){var t=n.createElement(\"input\");t.setAttribute(\"type\",\"hidden\"),e.appendChild(t).setAttribute(\"t\",\"\"),e.querySelectorAll(\"[t^='']\").length&&g.push(\"[*^$]=\"+P+\"*(?:''|\\\"\\\")\"),e.querySelectorAll(\":enabled\").length||g.push(\":enabled\",\":disabled\"),e.querySelectorAll(\"*,:x\"),g.push(\",.*:\")})),(r.matchesSelector=K.test(y=d.webkitMatchesSelector||d.mozMatchesSelector||d.oMatchesSelector||d.msMatchesSelector))&&ut(function(e){r.disconnectedMatch=y.call(e,\"div\"),y.call(e,\"[s!='']:x\"),m.push(\"!=\",I)}),g=g.length&&RegExp(g.join(\"|\")),m=m.length&&RegExp(m.join(\"|\")),v=K.test(d.contains)||d.compareDocumentPosition?function(e,t){var n=9===e.nodeType?e.documentElement:e,r=t&&t.parentNode;return e===r||!(!r||1!==r.nodeType||!(n.contains?n.contains(r):e.compareDocumentPosition&&16&e.compareDocumentPosition(r)))}:function(e,t){if(t)while(t=t.parentNode)if(t===e)return!0;return!1},A=d.compareDocumentPosition?function(e,t){if(e===t)return S=!0,0;var i=t.compareDocumentPosition&&e.compareDocumentPosition&&e.compareDocumentPosition(t);return i?1&i||!r.sortDetached&&t.compareDocumentPosition(e)===i?e===n||v(w,e)?-1:t===n||v(w,t)?1:c?F.call(c,e)-F.call(c,t):0:4&i?-1:1:e.compareDocumentPosition?-1:1}:function(e,t){var r,i=0,o=e.parentNode,a=t.parentNode,s=[e],l=[t];if(e===t)return S=!0,0;if(!o||!a)return e===n?-1:t===n?1:o?-1:a?1:c?F.call(c,e)-F.call(c,t):0;if(o===a)return pt(e,t);r=e;while(r=r.parentNode)s.unshift(r);r=t;while(r=r.parentNode)l.unshift(r);while(s[i]===l[i])i++;return i?pt(s[i],l[i]):s[i]===w?-1:l[i]===w?1:0},n):f},at.matches=function(e,t){return at(e,null,null,t)},at.matchesSelector=function(e,t){if((e.ownerDocument||e)!==f&&p(e),t=t.replace(Y,\"='$1']\"),!(!r.matchesSelector||!h||m&&m.test(t)||g&&g.test(t)))try{var n=y.call(e,t);if(n||r.disconnectedMatch||e.document&&11!==e.document.nodeType)return n}catch(i){}return at(t,f,null,[e]).length>0},at.contains=function(e,t){return(e.ownerDocument||e)!==f&&p(e),v(e,t)},at.attr=function(e,n){(e.ownerDocument||e)!==f&&p(e);var i=o.attrHandle[n.toLowerCase()],a=i&&L.call(o.attrHandle,n.toLowerCase())?i(e,n,!h):t;return a===t?r.attributes||!h?e.getAttribute(n):(a=e.getAttributeNode(n))&&a.specified?a.value:null:a},at.error=function(e){throw Error(\"Syntax error, unrecognized expression: \"+e)},at.uniqueSort=function(e){var t,n=[],i=0,o=0;if(S=!r.detectDuplicates,c=!r.sortStable&&e.slice(0),e.sort(A),S){while(t=e[o++])t===e[o]&&(i=n.push(o));while(i--)e.splice(n[i],1)}return e},a=at.getText=function(e){var t,n=\"\",r=0,i=e.nodeType;if(i){if(1===i||9===i||11===i){if(\"string\"==typeof e.textContent)return e.textContent;for(e=e.firstChild;e;e=e.nextSibling)n+=a(e)}else if(3===i||4===i)return e.nodeValue}else for(;t=e[r];r++)n+=a(t);return n},o=at.selectors={cacheLength:50,createPseudo:lt,match:Q,attrHandle:{},find:{},relative:{\">\":{dir:\"parentNode\",first:!0},\" \":{dir:\"parentNode\"},\"+\":{dir:\"previousSibling\",first:!0},\"~\":{dir:\"previousSibling\"}},preFilter:{ATTR:function(e){return e[1]=e[1].replace(rt,it),e[3]=(e[4]||e[5]||\"\").replace(rt,it),\"~=\"===e[2]&&(e[3]=\" \"+e[3]+\" \"),e.slice(0,4)},CHILD:function(e){return e[1]=e[1].toLowerCase(),\"nth\"===e[1].slice(0,3)?(e[3]||at.error(e[0]),e[4]=+(e[4]?e[5]+(e[6]||1):2*(\"even\"===e[3]||\"odd\"===e[3])),e[5]=+(e[7]+e[8]||\"odd\"===e[3])):e[3]&&at.error(e[0]),e},PSEUDO:function(e){var n,r=!e[5]&&e[2];return Q.CHILD.test(e[0])?null:(e[3]&&e[4]!==t?e[2]=e[4]:r&&J.test(r)&&(n=mt(r,!0))&&(n=r.indexOf(\")\",r.length-n)-r.length)&&(e[0]=e[0].slice(0,n),e[2]=r.slice(0,n)),e.slice(0,3))}},filter:{TAG:function(e){var t=e.replace(rt,it).toLowerCase();return\"*\"===e?function(){return!0}:function(e){return e.nodeName&&e.nodeName.toLowerCase()===t}},CLASS:function(e){var t=N[e+\" \"];return t||(t=RegExp(\"(^|\"+P+\")\"+e+\"(\"+P+\"|$)\"))&&N(e,function(e){return t.test(\"string\"==typeof e.className&&e.className||typeof e.getAttribute!==j&&e.getAttribute(\"class\")||\"\")})},ATTR:function(e,t,n){return function(r){var i=at.attr(r,e);return null==i?\"!=\"===t:t?(i+=\"\",\"=\"===t?i===n:\"!=\"===t?i!==n:\"^=\"===t?n&&0===i.indexOf(n):\"*=\"===t?n&&i.indexOf(n)>-1:\"$=\"===t?n&&i.slice(-n.length)===n:\"~=\"===t?(\" \"+i+\" \").indexOf(n)>-1:\"|=\"===t?i===n||i.slice(0,n.length+1)===n+\"-\":!1):!0}},CHILD:function(e,t,n,r,i){var o=\"nth\"!==e.slice(0,3),a=\"last\"!==e.slice(-4),s=\"of-type\"===t;return 1===r&&0===i?function(e){return!!e.parentNode}:function(t,n,l){var u,c,p,f,d,h,g=o!==a?\"nextSibling\":\"previousSibling\",m=t.parentNode,y=s&&t.nodeName.toLowerCase(),v=!l&&!s;if(m){if(o){while(g){p=t;while(p=p[g])if(s?p.nodeName.toLowerCase()===y:1===p.nodeType)return!1;h=g=\"only\"===e&&!h&&\"nextSibling\"}return!0}if(h=[a?m.firstChild:m.lastChild],a&&v){c=m[b]||(m[b]={}),u=c[e]||[],d=u[0]===T&&u[1],f=u[0]===T&&u[2],p=d&&m.childNodes[d];while(p=++d&&p&&p[g]||(f=d=0)||h.pop())if(1===p.nodeType&&++f&&p===t){c[e]=[T,d,f];break}}else if(v&&(u=(t[b]||(t[b]={}))[e])&&u[0]===T)f=u[1];else while(p=++d&&p&&p[g]||(f=d=0)||h.pop())if((s?p.nodeName.toLowerCase()===y:1===p.nodeType)&&++f&&(v&&((p[b]||(p[b]={}))[e]=[T,f]),p===t))break;return f-=i,f===r||0===f%r&&f/r>=0}}},PSEUDO:function(e,t){var n,r=o.pseudos[e]||o.setFilters[e.toLowerCase()]||at.error(\"unsupported pseudo: \"+e);return r[b]?r(t):r.length>1?(n=[e,e,\"\",t],o.setFilters.hasOwnProperty(e.toLowerCase())?lt(function(e,n){var i,o=r(e,t),a=o.length;while(a--)i=F.call(e,o[a]),e[i]=!(n[i]=o[a])}):function(e){return r(e,0,n)}):r}},pseudos:{not:lt(function(e){var t=[],n=[],r=l(e.replace(z,\"$1\"));return r[b]?lt(function(e,t,n,i){var o,a=r(e,null,i,[]),s=e.length;while(s--)(o=a[s])&&(e[s]=!(t[s]=o))}):function(e,i,o){return t[0]=e,r(t,null,o,n),!n.pop()}}),has:lt(function(e){return function(t){return at(e,t).length>0}}),contains:lt(function(e){return function(t){return(t.textContent||t.innerText||a(t)).indexOf(e)>-1}}),lang:lt(function(e){return G.test(e||\"\")||at.error(\"unsupported lang: \"+e),e=e.replace(rt,it).toLowerCase(),function(t){var n;do if(n=h?t.lang:t.getAttribute(\"xml:lang\")||t.getAttribute(\"lang\"))return n=n.toLowerCase(),n===e||0===n.indexOf(e+\"-\");while((t=t.parentNode)&&1===t.nodeType);return!1}}),target:function(t){var n=e.location&&e.location.hash;return n&&n.slice(1)===t.id},root:function(e){return e===d},focus:function(e){return e===f.activeElement&&(!f.hasFocus||f.hasFocus())&&!!(e.type||e.href||~e.tabIndex)},enabled:function(e){return e.disabled===!1},disabled:function(e){return e.disabled===!0},checked:function(e){var t=e.nodeName.toLowerCase();return\"input\"===t&&!!e.checked||\"option\"===t&&!!e.selected},selected:function(e){return e.parentNode&&e.parentNode.selectedIndex,e.selected===!0},empty:function(e){for(e=e.firstChild;e;e=e.nextSibling)if(e.nodeName>\"@\"||3===e.nodeType||4===e.nodeType)return!1;return!0},parent:function(e){return!o.pseudos.empty(e)},header:function(e){return tt.test(e.nodeName)},input:function(e){return et.test(e.nodeName)},button:function(e){var t=e.nodeName.toLowerCase();return\"input\"===t&&\"button\"===e.type||\"button\"===t},text:function(e){var t;return\"input\"===e.nodeName.toLowerCase()&&\"text\"===e.type&&(null==(t=e.getAttribute(\"type\"))||t.toLowerCase()===e.type)},first:ht(function(){return[0]}),last:ht(function(e,t){return[t-1]}),eq:ht(function(e,t,n){return[0>n?n+t:n]}),even:ht(function(e,t){var n=0;for(;t>n;n+=2)e.push(n);return e}),odd:ht(function(e,t){var n=1;for(;t>n;n+=2)e.push(n);return e}),lt:ht(function(e,t,n){var r=0>n?n+t:n;for(;--r>=0;)e.push(r);return e}),gt:ht(function(e,t,n){var r=0>n?n+t:n;for(;t>++r;)e.push(r);return e})}},o.pseudos.nth=o.pseudos.eq;for(n in{radio:!0,checkbox:!0,file:!0,password:!0,image:!0})o.pseudos[n]=ft(n);for(n in{submit:!0,reset:!0})o.pseudos[n]=dt(n);function gt(){}gt.prototype=o.filters=o.pseudos,o.setFilters=new gt;function mt(e,t){var n,r,i,a,s,l,u,c=k[e+\" \"];if(c)return t?0:c.slice(0);s=e,l=[],u=o.preFilter;while(s){(!n||(r=X.exec(s)))&&(r&&(s=s.slice(r[0].length)||s),l.push(i=[])),n=!1,(r=U.exec(s))&&(n=r.shift(),i.push({value:n,type:r[0].replace(z,\" \")}),s=s.slice(n.length));for(a in o.filter)!(r=Q[a].exec(s))||u[a]&&!(r=u[a](r))||(n=r.shift(),i.push({value:n,type:a,matches:r}),s=s.slice(n.length));if(!n)break}return t?s.length:s?at.error(e):k(e,l).slice(0)}function yt(e){var t=0,n=e.length,r=\"\";for(;n>t;t++)r+=e[t].value;return r}function vt(e,t,n){var r=t.dir,o=n&&\"parentNode\"===r,a=C++;return t.first?function(t,n,i){while(t=t[r])if(1===t.nodeType||o)return e(t,n,i)}:function(t,n,s){var l,u,c,p=T+\" \"+a;if(s){while(t=t[r])if((1===t.nodeType||o)&&e(t,n,s))return!0}else while(t=t[r])if(1===t.nodeType||o)if(c=t[b]||(t[b]={}),(u=c[r])&&u[0]===p){if((l=u[1])===!0||l===i)return l===!0}else if(u=c[r]=[p],u[1]=e(t,n,s)||i,u[1]===!0)return!0}}function bt(e){return e.length>1?function(t,n,r){var i=e.length;while(i--)if(!e[i](t,n,r))return!1;return!0}:e[0]}function xt(e,t,n,r,i){var o,a=[],s=0,l=e.length,u=null!=t;for(;l>s;s++)(o=e[s])&&(!n||n(o,r,i))&&(a.push(o),u&&t.push(s));return a}function wt(e,t,n,r,i,o){return r&&!r[b]&&(r=wt(r)),i&&!i[b]&&(i=wt(i,o)),lt(function(o,a,s,l){var u,c,p,f=[],d=[],h=a.length,g=o||Nt(t||\"*\",s.nodeType?[s]:s,[]),m=!e||!o&&t?g:xt(g,f,e,s,l),y=n?i||(o?e:h||r)?[]:a:m;if(n&&n(m,y,s,l),r){u=xt(y,d),r(u,[],s,l),c=u.length;while(c--)(p=u[c])&&(y[d[c]]=!(m[d[c]]=p))}if(o){if(i||e){if(i){u=[],c=y.length;while(c--)(p=y[c])&&u.push(m[c]=p);i(null,y=[],u,l)}c=y.length;while(c--)(p=y[c])&&(u=i?F.call(o,p):f[c])>-1&&(o[u]=!(a[u]=p))}}else y=xt(y===a?y.splice(h,y.length):y),i?i(null,a,y,l):M.apply(a,y)})}function Tt(e){var t,n,r,i=e.length,a=o.relative[e[0].type],s=a||o.relative[\" \"],l=a?1:0,c=vt(function(e){return e===t},s,!0),p=vt(function(e){return F.call(t,e)>-1},s,!0),f=[function(e,n,r){return!a&&(r||n!==u)||((t=n).nodeType?c(e,n,r):p(e,n,r))}];for(;i>l;l++)if(n=o.relative[e[l].type])f=[vt(bt(f),n)];else{if(n=o.filter[e[l].type].apply(null,e[l].matches),n[b]){for(r=++l;i>r;r++)if(o.relative[e[r].type])break;return wt(l>1&&bt(f),l>1&&yt(e.slice(0,l-1).concat({value:\" \"===e[l-2].type?\"*\":\"\"})).replace(z,\"$1\"),n,r>l&&Tt(e.slice(l,r)),i>r&&Tt(e=e.slice(r)),i>r&&yt(e))}f.push(n)}return bt(f)}function Ct(e,t){var n=0,r=t.length>0,a=e.length>0,s=function(s,l,c,p,d){var h,g,m,y=[],v=0,b=\"0\",x=s&&[],w=null!=d,C=u,N=s||a&&o.find.TAG(\"*\",d&&l.parentNode||l),k=T+=null==C?1:Math.random()||.1;for(w&&(u=l!==f&&l,i=n);null!=(h=N[b]);b++){if(a&&h){g=0;while(m=e[g++])if(m(h,l,c)){p.push(h);break}w&&(T=k,i=++n)}r&&((h=!m&&h)&&v--,s&&x.push(h))}if(v+=b,r&&b!==v){g=0;while(m=t[g++])m(x,y,l,c);if(s){if(v>0)while(b--)x[b]||y[b]||(y[b]=q.call(p));y=xt(y)}M.apply(p,y),w&&!s&&y.length>0&&v+t.length>1&&at.uniqueSort(p)}return w&&(T=k,u=C),x};return r?lt(s):s}l=at.compile=function(e,t){var n,r=[],i=[],o=E[e+\" \"];if(!o){t||(t=mt(e)),n=t.length;while(n--)o=Tt(t[n]),o[b]?r.push(o):i.push(o);o=E(e,Ct(i,r))}return o};function Nt(e,t,n){var r=0,i=t.length;for(;i>r;r++)at(e,t[r],n);return n}function kt(e,t,n,i){var a,s,u,c,p,f=mt(e);if(!i&&1===f.length){if(s=f[0]=f[0].slice(0),s.length>2&&\"ID\"===(u=s[0]).type&&r.getById&&9===t.nodeType&&h&&o.relative[s[1].type]){if(t=(o.find.ID(u.matches[0].replace(rt,it),t)||[])[0],!t)return n;e=e.slice(s.shift().value.length)}a=Q.needsContext.test(e)?0:s.length;while(a--){if(u=s[a],o.relative[c=u.type])break;if((p=o.find[c])&&(i=p(u.matches[0].replace(rt,it),V.test(s[0].type)&&t.parentNode||t))){if(s.splice(a,1),e=i.length&&yt(s),!e)return M.apply(n,i),n;break}}}return l(e,f)(i,t,!h,n,V.test(e)),n}r.sortStable=b.split(\"\").sort(A).join(\"\")===b,r.detectDuplicates=S,p(),r.sortDetached=ut(function(e){return 1&e.compareDocumentPosition(f.createElement(\"div\"))}),ut(function(e){return e.innerHTML=\"<a href='#'></a>\",\"#\"===e.firstChild.getAttribute(\"href\")})||ct(\"type|href|height|width\",function(e,n,r){return r?t:e.getAttribute(n,\"type\"===n.toLowerCase()?1:2)}),r.attributes&&ut(function(e){return e.innerHTML=\"<input/>\",e.firstChild.setAttribute(\"value\",\"\"),\"\"===e.firstChild.getAttribute(\"value\")})||ct(\"value\",function(e,n,r){return r||\"input\"!==e.nodeName.toLowerCase()?t:e.defaultValue}),ut(function(e){return null==e.getAttribute(\"disabled\")})||ct(B,function(e,n,r){var i;return r?t:(i=e.getAttributeNode(n))&&i.specified?i.value:e[n]===!0?n.toLowerCase():null}),x.find=at,x.expr=at.selectors,x.expr[\":\"]=x.expr.pseudos,x.unique=at.uniqueSort,x.text=at.getText,x.isXMLDoc=at.isXML,x.contains=at.contains}(e);var O={};function F(e){var t=O[e]={};return x.each(e.match(T)||[],function(e,n){t[n]=!0}),t}x.Callbacks=function(e){e=\"string\"==typeof e?O[e]||F(e):x.extend({},e);var n,r,i,o,a,s,l=[],u=!e.once&&[],c=function(t){for(r=e.memory&&t,i=!0,a=s||0,s=0,o=l.length,n=!0;l&&o>a;a++)if(l[a].apply(t[0],t[1])===!1&&e.stopOnFalse){r=!1;break}n=!1,l&&(u?u.length&&c(u.shift()):r?l=[]:p.disable())},p={add:function(){if(l){var t=l.length;(function i(t){x.each(t,function(t,n){var r=x.type(n);\"function\"===r?e.unique&&p.has(n)||l.push(n):n&&n.length&&\"string\"!==r&&i(n)})})(arguments),n?o=l.length:r&&(s=t,c(r))}return this},remove:function(){return l&&x.each(arguments,function(e,t){var r;while((r=x.inArray(t,l,r))>-1)l.splice(r,1),n&&(o>=r&&o--,a>=r&&a--)}),this},has:function(e){return e?x.inArray(e,l)>-1:!(!l||!l.length)},empty:function(){return l=[],o=0,this},disable:function(){return l=u=r=t,this},disabled:function(){return!l},lock:function(){return u=t,r||p.disable(),this},locked:function(){return!u},fireWith:function(e,t){return!l||i&&!u||(t=t||[],t=[e,t.slice?t.slice():t],n?u.push(t):c(t)),this},fire:function(){return p.fireWith(this,arguments),this},fired:function(){return!!i}};return p},x.extend({Deferred:function(e){var t=[[\"resolve\",\"done\",x.Callbacks(\"once memory\"),\"resolved\"],[\"reject\",\"fail\",x.Callbacks(\"once memory\"),\"rejected\"],[\"notify\",\"progress\",x.Callbacks(\"memory\")]],n=\"pending\",r={state:function(){return n},always:function(){return i.done(arguments).fail(arguments),this},then:function(){var e=arguments;return x.Deferred(function(n){x.each(t,function(t,o){var a=o[0],s=x.isFunction(e[t])&&e[t];i[o[1]](function(){var e=s&&s.apply(this,arguments);e&&x.isFunction(e.promise)?e.promise().done(n.resolve).fail(n.reject).progress(n.notify):n[a+\"With\"](this===r?n.promise():this,s?[e]:arguments)})}),e=null}).promise()},promise:function(e){return null!=e?x.extend(e,r):r}},i={};return r.pipe=r.then,x.each(t,function(e,o){var a=o[2],s=o[3];r[o[1]]=a.add,s&&a.add(function(){n=s},t[1^e][2].disable,t[2][2].lock),i[o[0]]=function(){return i[o[0]+\"With\"](this===i?r:this,arguments),this},i[o[0]+\"With\"]=a.fireWith}),r.promise(i),e&&e.call(i,i),i},when:function(e){var t=0,n=g.call(arguments),r=n.length,i=1!==r||e&&x.isFunction(e.promise)?r:0,o=1===i?e:x.Deferred(),a=function(e,t,n){return function(r){t[e]=this,n[e]=arguments.length>1?g.call(arguments):r,n===s?o.notifyWith(t,n):--i||o.resolveWith(t,n)}},s,l,u;if(r>1)for(s=Array(r),l=Array(r),u=Array(r);r>t;t++)n[t]&&x.isFunction(n[t].promise)?n[t].promise().done(a(t,u,n)).fail(o.reject).progress(a(t,l,s)):--i;return i||o.resolveWith(u,n),o.promise()}}),x.support=function(t){var n,r,o,s,l,u,c,p,f,d=a.createElement(\"div\");if(d.setAttribute(\"className\",\"t\"),d.innerHTML=\"  <link/><table></table><a href='/a'>a</a><input type='checkbox'/>\",n=d.getElementsByTagName(\"*\")||[],r=d.getElementsByTagName(\"a\")[0],!r||!r.style||!n.length)return t;s=a.createElement(\"select\"),u=s.appendChild(a.createElement(\"option\")),o=d.getElementsByTagName(\"input\")[0],r.style.cssText=\"top:1px;float:left;opacity:.5\",t.getSetAttribute=\"t\"!==d.className,t.leadingWhitespace=3===d.firstChild.nodeType,t.tbody=!d.getElementsByTagName(\"tbody\").length,t.htmlSerialize=!!d.getElementsByTagName(\"link\").length,t.style=/top/.test(r.getAttribute(\"style\")),t.hrefNormalized=\"/a\"===r.getAttribute(\"href\"),t.opacity=/^0.5/.test(r.style.opacity),t.cssFloat=!!r.style.cssFloat,t.checkOn=!!o.value,t.optSelected=u.selected,t.enctype=!!a.createElement(\"form\").enctype,t.html5Clone=\"<:nav></:nav>\"!==a.createElement(\"nav\").cloneNode(!0).outerHTML,t.inlineBlockNeedsLayout=!1,t.shrinkWrapBlocks=!1,t.pixelPosition=!1,t.deleteExpando=!0,t.noCloneEvent=!0,t.reliableMarginRight=!0,t.boxSizingReliable=!0,o.checked=!0,t.noCloneChecked=o.cloneNode(!0).checked,s.disabled=!0,t.optDisabled=!u.disabled;try{delete d.test}catch(h){t.deleteExpando=!1}o=a.createElement(\"input\"),o.setAttribute(\"value\",\"\"),t.input=\"\"===o.getAttribute(\"value\"),o.value=\"t\",o.setAttribute(\"type\",\"radio\"),t.radioValue=\"t\"===o.value,o.setAttribute(\"checked\",\"t\"),o.setAttribute(\"name\",\"t\"),l=a.createDocumentFragment(),l.appendChild(o),t.appendChecked=o.checked,t.checkClone=l.cloneNode(!0).cloneNode(!0).lastChild.checked,d.attachEvent&&(d.attachEvent(\"onclick\",function(){t.noCloneEvent=!1}),d.cloneNode(!0).click());for(f in{submit:!0,change:!0,focusin:!0})d.setAttribute(c=\"on\"+f,\"t\"),t[f+\"Bubbles\"]=c in e||d.attributes[c].expando===!1;d.style.backgroundClip=\"content-box\",d.cloneNode(!0).style.backgroundClip=\"\",t.clearCloneStyle=\"content-box\"===d.style.backgroundClip;for(f in x(t))break;return t.ownLast=\"0\"!==f,x(function(){var n,r,o,s=\"padding:0;margin:0;border:0;display:block;box-sizing:content-box;-moz-box-sizing:content-box;-webkit-box-sizing:content-box;\",l=a.getElementsByTagName(\"body\")[0];l&&(n=a.createElement(\"div\"),n.style.cssText=\"border:0;width:0;height:0;position:absolute;top:0;left:-9999px;margin-top:1px\",l.appendChild(n).appendChild(d),d.innerHTML=\"<table><tr><td></td><td>t</td></tr></table>\",o=d.getElementsByTagName(\"td\"),o[0].style.cssText=\"padding:0;margin:0;border:0;display:none\",p=0===o[0].offsetHeight,o[0].style.display=\"\",o[1].style.display=\"none\",t.reliableHiddenOffsets=p&&0===o[0].offsetHeight,d.innerHTML=\"\",d.style.cssText=\"box-sizing:border-box;-moz-box-sizing:border-box;-webkit-box-sizing:border-box;padding:1px;border:1px;display:block;width:4px;margin-top:1%;position:absolute;top:1%;\",x.swap(l,null!=l.style.zoom?{zoom:1}:{},function(){t.boxSizing=4===d.offsetWidth}),e.getComputedStyle&&(t.pixelPosition=\"1%\"!==(e.getComputedStyle(d,null)||{}).top,t.boxSizingReliable=\"4px\"===(e.getComputedStyle(d,null)||{width:\"4px\"}).width,r=d.appendChild(a.createElement(\"div\")),r.style.cssText=d.style.cssText=s,r.style.marginRight=r.style.width=\"0\",d.style.width=\"1px\",t.reliableMarginRight=!parseFloat((e.getComputedStyle(r,null)||{}).marginRight)),typeof d.style.zoom!==i&&(d.innerHTML=\"\",d.style.cssText=s+\"width:1px;padding:1px;display:inline;zoom:1\",t.inlineBlockNeedsLayout=3===d.offsetWidth,d.style.display=\"block\",d.innerHTML=\"<div></div>\",d.firstChild.style.width=\"5px\",t.shrinkWrapBlocks=3!==d.offsetWidth,t.inlineBlockNeedsLayout&&(l.style.zoom=1)),l.removeChild(n),n=d=o=r=null)}),n=s=l=u=r=o=null,t\n}({});var B=/(?:\\{[\\s\\S]*\\}|\\[[\\s\\S]*\\])$/,P=/([A-Z])/g;function R(e,n,r,i){if(x.acceptData(e)){var o,a,s=x.expando,l=e.nodeType,u=l?x.cache:e,c=l?e[s]:e[s]&&s;if(c&&u[c]&&(i||u[c].data)||r!==t||\"string\"!=typeof n)return c||(c=l?e[s]=p.pop()||x.guid++:s),u[c]||(u[c]=l?{}:{toJSON:x.noop}),(\"object\"==typeof n||\"function\"==typeof n)&&(i?u[c]=x.extend(u[c],n):u[c].data=x.extend(u[c].data,n)),a=u[c],i||(a.data||(a.data={}),a=a.data),r!==t&&(a[x.camelCase(n)]=r),\"string\"==typeof n?(o=a[n],null==o&&(o=a[x.camelCase(n)])):o=a,o}}function W(e,t,n){if(x.acceptData(e)){var r,i,o=e.nodeType,a=o?x.cache:e,s=o?e[x.expando]:x.expando;if(a[s]){if(t&&(r=n?a[s]:a[s].data)){x.isArray(t)?t=t.concat(x.map(t,x.camelCase)):t in r?t=[t]:(t=x.camelCase(t),t=t in r?[t]:t.split(\" \")),i=t.length;while(i--)delete r[t[i]];if(n?!I(r):!x.isEmptyObject(r))return}(n||(delete a[s].data,I(a[s])))&&(o?x.cleanData([e],!0):x.support.deleteExpando||a!=a.window?delete a[s]:a[s]=null)}}}x.extend({cache:{},noData:{applet:!0,embed:!0,object:\"clsid:D27CDB6E-AE6D-11cf-96B8-444553540000\"},hasData:function(e){return e=e.nodeType?x.cache[e[x.expando]]:e[x.expando],!!e&&!I(e)},data:function(e,t,n){return R(e,t,n)},removeData:function(e,t){return W(e,t)},_data:function(e,t,n){return R(e,t,n,!0)},_removeData:function(e,t){return W(e,t,!0)},acceptData:function(e){if(e.nodeType&&1!==e.nodeType&&9!==e.nodeType)return!1;var t=e.nodeName&&x.noData[e.nodeName.toLowerCase()];return!t||t!==!0&&e.getAttribute(\"classid\")===t}}),x.fn.extend({data:function(e,n){var r,i,o=null,a=0,s=this[0];if(e===t){if(this.length&&(o=x.data(s),1===s.nodeType&&!x._data(s,\"parsedAttrs\"))){for(r=s.attributes;r.length>a;a++)i=r[a].name,0===i.indexOf(\"data-\")&&(i=x.camelCase(i.slice(5)),$(s,i,o[i]));x._data(s,\"parsedAttrs\",!0)}return o}return\"object\"==typeof e?this.each(function(){x.data(this,e)}):arguments.length>1?this.each(function(){x.data(this,e,n)}):s?$(s,e,x.data(s,e)):null},removeData:function(e){return this.each(function(){x.removeData(this,e)})}});function $(e,n,r){if(r===t&&1===e.nodeType){var i=\"data-\"+n.replace(P,\"-$1\").toLowerCase();if(r=e.getAttribute(i),\"string\"==typeof r){try{r=\"true\"===r?!0:\"false\"===r?!1:\"null\"===r?null:+r+\"\"===r?+r:B.test(r)?x.parseJSON(r):r}catch(o){}x.data(e,n,r)}else r=t}return r}function I(e){var t;for(t in e)if((\"data\"!==t||!x.isEmptyObject(e[t]))&&\"toJSON\"!==t)return!1;return!0}x.extend({queue:function(e,n,r){var i;return e?(n=(n||\"fx\")+\"queue\",i=x._data(e,n),r&&(!i||x.isArray(r)?i=x._data(e,n,x.makeArray(r)):i.push(r)),i||[]):t},dequeue:function(e,t){t=t||\"fx\";var n=x.queue(e,t),r=n.length,i=n.shift(),o=x._queueHooks(e,t),a=function(){x.dequeue(e,t)};\"inprogress\"===i&&(i=n.shift(),r--),i&&(\"fx\"===t&&n.unshift(\"inprogress\"),delete o.stop,i.call(e,a,o)),!r&&o&&o.empty.fire()},_queueHooks:function(e,t){var n=t+\"queueHooks\";return x._data(e,n)||x._data(e,n,{empty:x.Callbacks(\"once memory\").add(function(){x._removeData(e,t+\"queue\"),x._removeData(e,n)})})}}),x.fn.extend({queue:function(e,n){var r=2;return\"string\"!=typeof e&&(n=e,e=\"fx\",r--),r>arguments.length?x.queue(this[0],e):n===t?this:this.each(function(){var t=x.queue(this,e,n);x._queueHooks(this,e),\"fx\"===e&&\"inprogress\"!==t[0]&&x.dequeue(this,e)})},dequeue:function(e){return this.each(function(){x.dequeue(this,e)})},delay:function(e,t){return e=x.fx?x.fx.speeds[e]||e:e,t=t||\"fx\",this.queue(t,function(t,n){var r=setTimeout(t,e);n.stop=function(){clearTimeout(r)}})},clearQueue:function(e){return this.queue(e||\"fx\",[])},promise:function(e,n){var r,i=1,o=x.Deferred(),a=this,s=this.length,l=function(){--i||o.resolveWith(a,[a])};\"string\"!=typeof e&&(n=e,e=t),e=e||\"fx\";while(s--)r=x._data(a[s],e+\"queueHooks\"),r&&r.empty&&(i++,r.empty.add(l));return l(),o.promise(n)}});var z,X,U=/[\\t\\r\\n\\f]/g,V=/\\r/g,Y=/^(?:input|select|textarea|button|object)$/i,J=/^(?:a|area)$/i,G=/^(?:checked|selected)$/i,Q=x.support.getSetAttribute,K=x.support.input;x.fn.extend({attr:function(e,t){return x.access(this,x.attr,e,t,arguments.length>1)},removeAttr:function(e){return this.each(function(){x.removeAttr(this,e)})},prop:function(e,t){return x.access(this,x.prop,e,t,arguments.length>1)},removeProp:function(e){return e=x.propFix[e]||e,this.each(function(){try{this[e]=t,delete this[e]}catch(n){}})},addClass:function(e){var t,n,r,i,o,a=0,s=this.length,l=\"string\"==typeof e&&e;if(x.isFunction(e))return this.each(function(t){x(this).addClass(e.call(this,t,this.className))});if(l)for(t=(e||\"\").match(T)||[];s>a;a++)if(n=this[a],r=1===n.nodeType&&(n.className?(\" \"+n.className+\" \").replace(U,\" \"):\" \")){o=0;while(i=t[o++])0>r.indexOf(\" \"+i+\" \")&&(r+=i+\" \");n.className=x.trim(r)}return this},removeClass:function(e){var t,n,r,i,o,a=0,s=this.length,l=0===arguments.length||\"string\"==typeof e&&e;if(x.isFunction(e))return this.each(function(t){x(this).removeClass(e.call(this,t,this.className))});if(l)for(t=(e||\"\").match(T)||[];s>a;a++)if(n=this[a],r=1===n.nodeType&&(n.className?(\" \"+n.className+\" \").replace(U,\" \"):\"\")){o=0;while(i=t[o++])while(r.indexOf(\" \"+i+\" \")>=0)r=r.replace(\" \"+i+\" \",\" \");n.className=e?x.trim(r):\"\"}return this},toggleClass:function(e,t){var n=typeof e;return\"boolean\"==typeof t&&\"string\"===n?t?this.addClass(e):this.removeClass(e):x.isFunction(e)?this.each(function(n){x(this).toggleClass(e.call(this,n,this.className,t),t)}):this.each(function(){if(\"string\"===n){var t,r=0,o=x(this),a=e.match(T)||[];while(t=a[r++])o.hasClass(t)?o.removeClass(t):o.addClass(t)}else(n===i||\"boolean\"===n)&&(this.className&&x._data(this,\"__className__\",this.className),this.className=this.className||e===!1?\"\":x._data(this,\"__className__\")||\"\")})},hasClass:function(e){var t=\" \"+e+\" \",n=0,r=this.length;for(;r>n;n++)if(1===this[n].nodeType&&(\" \"+this[n].className+\" \").replace(U,\" \").indexOf(t)>=0)return!0;return!1},val:function(e){var n,r,i,o=this[0];{if(arguments.length)return i=x.isFunction(e),this.each(function(n){var o;1===this.nodeType&&(o=i?e.call(this,n,x(this).val()):e,null==o?o=\"\":\"number\"==typeof o?o+=\"\":x.isArray(o)&&(o=x.map(o,function(e){return null==e?\"\":e+\"\"})),r=x.valHooks[this.type]||x.valHooks[this.nodeName.toLowerCase()],r&&\"set\"in r&&r.set(this,o,\"value\")!==t||(this.value=o))});if(o)return r=x.valHooks[o.type]||x.valHooks[o.nodeName.toLowerCase()],r&&\"get\"in r&&(n=r.get(o,\"value\"))!==t?n:(n=o.value,\"string\"==typeof n?n.replace(V,\"\"):null==n?\"\":n)}}}),x.extend({valHooks:{option:{get:function(e){var t=x.find.attr(e,\"value\");return null!=t?t:e.text}},select:{get:function(e){var t,n,r=e.options,i=e.selectedIndex,o=\"select-one\"===e.type||0>i,a=o?null:[],s=o?i+1:r.length,l=0>i?s:o?i:0;for(;s>l;l++)if(n=r[l],!(!n.selected&&l!==i||(x.support.optDisabled?n.disabled:null!==n.getAttribute(\"disabled\"))||n.parentNode.disabled&&x.nodeName(n.parentNode,\"optgroup\"))){if(t=x(n).val(),o)return t;a.push(t)}return a},set:function(e,t){var n,r,i=e.options,o=x.makeArray(t),a=i.length;while(a--)r=i[a],(r.selected=x.inArray(x(r).val(),o)>=0)&&(n=!0);return n||(e.selectedIndex=-1),o}}},attr:function(e,n,r){var o,a,s=e.nodeType;if(e&&3!==s&&8!==s&&2!==s)return typeof e.getAttribute===i?x.prop(e,n,r):(1===s&&x.isXMLDoc(e)||(n=n.toLowerCase(),o=x.attrHooks[n]||(x.expr.match.bool.test(n)?X:z)),r===t?o&&\"get\"in o&&null!==(a=o.get(e,n))?a:(a=x.find.attr(e,n),null==a?t:a):null!==r?o&&\"set\"in o&&(a=o.set(e,r,n))!==t?a:(e.setAttribute(n,r+\"\"),r):(x.removeAttr(e,n),t))},removeAttr:function(e,t){var n,r,i=0,o=t&&t.match(T);if(o&&1===e.nodeType)while(n=o[i++])r=x.propFix[n]||n,x.expr.match.bool.test(n)?K&&Q||!G.test(n)?e[r]=!1:e[x.camelCase(\"default-\"+n)]=e[r]=!1:x.attr(e,n,\"\"),e.removeAttribute(Q?n:r)},attrHooks:{type:{set:function(e,t){if(!x.support.radioValue&&\"radio\"===t&&x.nodeName(e,\"input\")){var n=e.value;return e.setAttribute(\"type\",t),n&&(e.value=n),t}}}},propFix:{\"for\":\"htmlFor\",\"class\":\"className\"},prop:function(e,n,r){var i,o,a,s=e.nodeType;if(e&&3!==s&&8!==s&&2!==s)return a=1!==s||!x.isXMLDoc(e),a&&(n=x.propFix[n]||n,o=x.propHooks[n]),r!==t?o&&\"set\"in o&&(i=o.set(e,r,n))!==t?i:e[n]=r:o&&\"get\"in o&&null!==(i=o.get(e,n))?i:e[n]},propHooks:{tabIndex:{get:function(e){var t=x.find.attr(e,\"tabindex\");return t?parseInt(t,10):Y.test(e.nodeName)||J.test(e.nodeName)&&e.href?0:-1}}}}),X={set:function(e,t,n){return t===!1?x.removeAttr(e,n):K&&Q||!G.test(n)?e.setAttribute(!Q&&x.propFix[n]||n,n):e[x.camelCase(\"default-\"+n)]=e[n]=!0,n}},x.each(x.expr.match.bool.source.match(/\\w+/g),function(e,n){var r=x.expr.attrHandle[n]||x.find.attr;x.expr.attrHandle[n]=K&&Q||!G.test(n)?function(e,n,i){var o=x.expr.attrHandle[n],a=i?t:(x.expr.attrHandle[n]=t)!=r(e,n,i)?n.toLowerCase():null;return x.expr.attrHandle[n]=o,a}:function(e,n,r){return r?t:e[x.camelCase(\"default-\"+n)]?n.toLowerCase():null}}),K&&Q||(x.attrHooks.value={set:function(e,n,r){return x.nodeName(e,\"input\")?(e.defaultValue=n,t):z&&z.set(e,n,r)}}),Q||(z={set:function(e,n,r){var i=e.getAttributeNode(r);return i||e.setAttributeNode(i=e.ownerDocument.createAttribute(r)),i.value=n+=\"\",\"value\"===r||n===e.getAttribute(r)?n:t}},x.expr.attrHandle.id=x.expr.attrHandle.name=x.expr.attrHandle.coords=function(e,n,r){var i;return r?t:(i=e.getAttributeNode(n))&&\"\"!==i.value?i.value:null},x.valHooks.button={get:function(e,n){var r=e.getAttributeNode(n);return r&&r.specified?r.value:t},set:z.set},x.attrHooks.contenteditable={set:function(e,t,n){z.set(e,\"\"===t?!1:t,n)}},x.each([\"width\",\"height\"],function(e,n){x.attrHooks[n]={set:function(e,r){return\"\"===r?(e.setAttribute(n,\"auto\"),r):t}}})),x.support.hrefNormalized||x.each([\"href\",\"src\"],function(e,t){x.propHooks[t]={get:function(e){return e.getAttribute(t,4)}}}),x.support.style||(x.attrHooks.style={get:function(e){return e.style.cssText||t},set:function(e,t){return e.style.cssText=t+\"\"}}),x.support.optSelected||(x.propHooks.selected={get:function(e){var t=e.parentNode;return t&&(t.selectedIndex,t.parentNode&&t.parentNode.selectedIndex),null}}),x.each([\"tabIndex\",\"readOnly\",\"maxLength\",\"cellSpacing\",\"cellPadding\",\"rowSpan\",\"colSpan\",\"useMap\",\"frameBorder\",\"contentEditable\"],function(){x.propFix[this.toLowerCase()]=this}),x.support.enctype||(x.propFix.enctype=\"encoding\"),x.each([\"radio\",\"checkbox\"],function(){x.valHooks[this]={set:function(e,n){return x.isArray(n)?e.checked=x.inArray(x(e).val(),n)>=0:t}},x.support.checkOn||(x.valHooks[this].get=function(e){return null===e.getAttribute(\"value\")?\"on\":e.value})});var Z=/^(?:input|select|textarea)$/i,et=/^key/,tt=/^(?:mouse|contextmenu)|click/,nt=/^(?:focusinfocus|focusoutblur)$/,rt=/^([^.]*)(?:\\.(.+)|)$/;function it(){return!0}function ot(){return!1}function at(){try{return a.activeElement}catch(e){}}x.event={global:{},add:function(e,n,r,o,a){var s,l,u,c,p,f,d,h,g,m,y,v=x._data(e);if(v){r.handler&&(c=r,r=c.handler,a=c.selector),r.guid||(r.guid=x.guid++),(l=v.events)||(l=v.events={}),(f=v.handle)||(f=v.handle=function(e){return typeof x===i||e&&x.event.triggered===e.type?t:x.event.dispatch.apply(f.elem,arguments)},f.elem=e),n=(n||\"\").match(T)||[\"\"],u=n.length;while(u--)s=rt.exec(n[u])||[],g=y=s[1],m=(s[2]||\"\").split(\".\").sort(),g&&(p=x.event.special[g]||{},g=(a?p.delegateType:p.bindType)||g,p=x.event.special[g]||{},d=x.extend({type:g,origType:y,data:o,handler:r,guid:r.guid,selector:a,needsContext:a&&x.expr.match.needsContext.test(a),namespace:m.join(\".\")},c),(h=l[g])||(h=l[g]=[],h.delegateCount=0,p.setup&&p.setup.call(e,o,m,f)!==!1||(e.addEventListener?e.addEventListener(g,f,!1):e.attachEvent&&e.attachEvent(\"on\"+g,f))),p.add&&(p.add.call(e,d),d.handler.guid||(d.handler.guid=r.guid)),a?h.splice(h.delegateCount++,0,d):h.push(d),x.event.global[g]=!0);e=null}},remove:function(e,t,n,r,i){var o,a,s,l,u,c,p,f,d,h,g,m=x.hasData(e)&&x._data(e);if(m&&(c=m.events)){t=(t||\"\").match(T)||[\"\"],u=t.length;while(u--)if(s=rt.exec(t[u])||[],d=g=s[1],h=(s[2]||\"\").split(\".\").sort(),d){p=x.event.special[d]||{},d=(r?p.delegateType:p.bindType)||d,f=c[d]||[],s=s[2]&&RegExp(\"(^|\\\\.)\"+h.join(\"\\\\.(?:.*\\\\.|)\")+\"(\\\\.|$)\"),l=o=f.length;while(o--)a=f[o],!i&&g!==a.origType||n&&n.guid!==a.guid||s&&!s.test(a.namespace)||r&&r!==a.selector&&(\"**\"!==r||!a.selector)||(f.splice(o,1),a.selector&&f.delegateCount--,p.remove&&p.remove.call(e,a));l&&!f.length&&(p.teardown&&p.teardown.call(e,h,m.handle)!==!1||x.removeEvent(e,d,m.handle),delete c[d])}else for(d in c)x.event.remove(e,d+t[u],n,r,!0);x.isEmptyObject(c)&&(delete m.handle,x._removeData(e,\"events\"))}},trigger:function(n,r,i,o){var s,l,u,c,p,f,d,h=[i||a],g=v.call(n,\"type\")?n.type:n,m=v.call(n,\"namespace\")?n.namespace.split(\".\"):[];if(u=f=i=i||a,3!==i.nodeType&&8!==i.nodeType&&!nt.test(g+x.event.triggered)&&(g.indexOf(\".\")>=0&&(m=g.split(\".\"),g=m.shift(),m.sort()),l=0>g.indexOf(\":\")&&\"on\"+g,n=n[x.expando]?n:new x.Event(g,\"object\"==typeof n&&n),n.isTrigger=o?2:3,n.namespace=m.join(\".\"),n.namespace_re=n.namespace?RegExp(\"(^|\\\\.)\"+m.join(\"\\\\.(?:.*\\\\.|)\")+\"(\\\\.|$)\"):null,n.result=t,n.target||(n.target=i),r=null==r?[n]:x.makeArray(r,[n]),p=x.event.special[g]||{},o||!p.trigger||p.trigger.apply(i,r)!==!1)){if(!o&&!p.noBubble&&!x.isWindow(i)){for(c=p.delegateType||g,nt.test(c+g)||(u=u.parentNode);u;u=u.parentNode)h.push(u),f=u;f===(i.ownerDocument||a)&&h.push(f.defaultView||f.parentWindow||e)}d=0;while((u=h[d++])&&!n.isPropagationStopped())n.type=d>1?c:p.bindType||g,s=(x._data(u,\"events\")||{})[n.type]&&x._data(u,\"handle\"),s&&s.apply(u,r),s=l&&u[l],s&&x.acceptData(u)&&s.apply&&s.apply(u,r)===!1&&n.preventDefault();if(n.type=g,!o&&!n.isDefaultPrevented()&&(!p._default||p._default.apply(h.pop(),r)===!1)&&x.acceptData(i)&&l&&i[g]&&!x.isWindow(i)){f=i[l],f&&(i[l]=null),x.event.triggered=g;try{i[g]()}catch(y){}x.event.triggered=t,f&&(i[l]=f)}return n.result}},dispatch:function(e){e=x.event.fix(e);var n,r,i,o,a,s=[],l=g.call(arguments),u=(x._data(this,\"events\")||{})[e.type]||[],c=x.event.special[e.type]||{};if(l[0]=e,e.delegateTarget=this,!c.preDispatch||c.preDispatch.call(this,e)!==!1){s=x.event.handlers.call(this,e,u),n=0;while((o=s[n++])&&!e.isPropagationStopped()){e.currentTarget=o.elem,a=0;while((i=o.handlers[a++])&&!e.isImmediatePropagationStopped())(!e.namespace_re||e.namespace_re.test(i.namespace))&&(e.handleObj=i,e.data=i.data,r=((x.event.special[i.origType]||{}).handle||i.handler).apply(o.elem,l),r!==t&&(e.result=r)===!1&&(e.preventDefault(),e.stopPropagation()))}return c.postDispatch&&c.postDispatch.call(this,e),e.result}},handlers:function(e,n){var r,i,o,a,s=[],l=n.delegateCount,u=e.target;if(l&&u.nodeType&&(!e.button||\"click\"!==e.type))for(;u!=this;u=u.parentNode||this)if(1===u.nodeType&&(u.disabled!==!0||\"click\"!==e.type)){for(o=[],a=0;l>a;a++)i=n[a],r=i.selector+\" \",o[r]===t&&(o[r]=i.needsContext?x(r,this).index(u)>=0:x.find(r,this,null,[u]).length),o[r]&&o.push(i);o.length&&s.push({elem:u,handlers:o})}return n.length>l&&s.push({elem:this,handlers:n.slice(l)}),s},fix:function(e){if(e[x.expando])return e;var t,n,r,i=e.type,o=e,s=this.fixHooks[i];s||(this.fixHooks[i]=s=tt.test(i)?this.mouseHooks:et.test(i)?this.keyHooks:{}),r=s.props?this.props.concat(s.props):this.props,e=new x.Event(o),t=r.length;while(t--)n=r[t],e[n]=o[n];return e.target||(e.target=o.srcElement||a),3===e.target.nodeType&&(e.target=e.target.parentNode),e.metaKey=!!e.metaKey,s.filter?s.filter(e,o):e},props:\"altKey bubbles cancelable ctrlKey currentTarget eventPhase metaKey relatedTarget shiftKey target timeStamp view which\".split(\" \"),fixHooks:{},keyHooks:{props:\"char charCode key keyCode\".split(\" \"),filter:function(e,t){return null==e.which&&(e.which=null!=t.charCode?t.charCode:t.keyCode),e}},mouseHooks:{props:\"button buttons clientX clientY fromElement offsetX offsetY pageX pageY screenX screenY toElement\".split(\" \"),filter:function(e,n){var r,i,o,s=n.button,l=n.fromElement;return null==e.pageX&&null!=n.clientX&&(i=e.target.ownerDocument||a,o=i.documentElement,r=i.body,e.pageX=n.clientX+(o&&o.scrollLeft||r&&r.scrollLeft||0)-(o&&o.clientLeft||r&&r.clientLeft||0),e.pageY=n.clientY+(o&&o.scrollTop||r&&r.scrollTop||0)-(o&&o.clientTop||r&&r.clientTop||0)),!e.relatedTarget&&l&&(e.relatedTarget=l===e.target?n.toElement:l),e.which||s===t||(e.which=1&s?1:2&s?3:4&s?2:0),e}},special:{load:{noBubble:!0},focus:{trigger:function(){if(this!==at()&&this.focus)try{return this.focus(),!1}catch(e){}},delegateType:\"focusin\"},blur:{trigger:function(){return this===at()&&this.blur?(this.blur(),!1):t},delegateType:\"focusout\"},click:{trigger:function(){return x.nodeName(this,\"input\")&&\"checkbox\"===this.type&&this.click?(this.click(),!1):t},_default:function(e){return x.nodeName(e.target,\"a\")}},beforeunload:{postDispatch:function(e){e.result!==t&&(e.originalEvent.returnValue=e.result)}}},simulate:function(e,t,n,r){var i=x.extend(new x.Event,n,{type:e,isSimulated:!0,originalEvent:{}});r?x.event.trigger(i,null,t):x.event.dispatch.call(t,i),i.isDefaultPrevented()&&n.preventDefault()}},x.removeEvent=a.removeEventListener?function(e,t,n){e.removeEventListener&&e.removeEventListener(t,n,!1)}:function(e,t,n){var r=\"on\"+t;e.detachEvent&&(typeof e[r]===i&&(e[r]=null),e.detachEvent(r,n))},x.Event=function(e,n){return this instanceof x.Event?(e&&e.type?(this.originalEvent=e,this.type=e.type,this.isDefaultPrevented=e.defaultPrevented||e.returnValue===!1||e.getPreventDefault&&e.getPreventDefault()?it:ot):this.type=e,n&&x.extend(this,n),this.timeStamp=e&&e.timeStamp||x.now(),this[x.expando]=!0,t):new x.Event(e,n)},x.Event.prototype={isDefaultPrevented:ot,isPropagationStopped:ot,isImmediatePropagationStopped:ot,preventDefault:function(){var e=this.originalEvent;this.isDefaultPrevented=it,e&&(e.preventDefault?e.preventDefault():e.returnValue=!1)},stopPropagation:function(){var e=this.originalEvent;this.isPropagationStopped=it,e&&(e.stopPropagation&&e.stopPropagation(),e.cancelBubble=!0)},stopImmediatePropagation:function(){this.isImmediatePropagationStopped=it,this.stopPropagation()}},x.each({mouseenter:\"mouseover\",mouseleave:\"mouseout\"},function(e,t){x.event.special[e]={delegateType:t,bindType:t,handle:function(e){var n,r=this,i=e.relatedTarget,o=e.handleObj;return(!i||i!==r&&!x.contains(r,i))&&(e.type=o.origType,n=o.handler.apply(this,arguments),e.type=t),n}}}),x.support.submitBubbles||(x.event.special.submit={setup:function(){return x.nodeName(this,\"form\")?!1:(x.event.add(this,\"click._submit keypress._submit\",function(e){var n=e.target,r=x.nodeName(n,\"input\")||x.nodeName(n,\"button\")?n.form:t;r&&!x._data(r,\"submitBubbles\")&&(x.event.add(r,\"submit._submit\",function(e){e._submit_bubble=!0}),x._data(r,\"submitBubbles\",!0))}),t)},postDispatch:function(e){e._submit_bubble&&(delete e._submit_bubble,this.parentNode&&!e.isTrigger&&x.event.simulate(\"submit\",this.parentNode,e,!0))},teardown:function(){return x.nodeName(this,\"form\")?!1:(x.event.remove(this,\"._submit\"),t)}}),x.support.changeBubbles||(x.event.special.change={setup:function(){return Z.test(this.nodeName)?((\"checkbox\"===this.type||\"radio\"===this.type)&&(x.event.add(this,\"propertychange._change\",function(e){\"checked\"===e.originalEvent.propertyName&&(this._just_changed=!0)}),x.event.add(this,\"click._change\",function(e){this._just_changed&&!e.isTrigger&&(this._just_changed=!1),x.event.simulate(\"change\",this,e,!0)})),!1):(x.event.add(this,\"beforeactivate._change\",function(e){var t=e.target;Z.test(t.nodeName)&&!x._data(t,\"changeBubbles\")&&(x.event.add(t,\"change._change\",function(e){!this.parentNode||e.isSimulated||e.isTrigger||x.event.simulate(\"change\",this.parentNode,e,!0)}),x._data(t,\"changeBubbles\",!0))}),t)},handle:function(e){var n=e.target;return this!==n||e.isSimulated||e.isTrigger||\"radio\"!==n.type&&\"checkbox\"!==n.type?e.handleObj.handler.apply(this,arguments):t},teardown:function(){return x.event.remove(this,\"._change\"),!Z.test(this.nodeName)}}),x.support.focusinBubbles||x.each({focus:\"focusin\",blur:\"focusout\"},function(e,t){var n=0,r=function(e){x.event.simulate(t,e.target,x.event.fix(e),!0)};x.event.special[t]={setup:function(){0===n++&&a.addEventListener(e,r,!0)},teardown:function(){0===--n&&a.removeEventListener(e,r,!0)}}}),x.fn.extend({on:function(e,n,r,i,o){var a,s;if(\"object\"==typeof e){\"string\"!=typeof n&&(r=r||n,n=t);for(a in e)this.on(a,n,r,e[a],o);return this}if(null==r&&null==i?(i=n,r=n=t):null==i&&(\"string\"==typeof n?(i=r,r=t):(i=r,r=n,n=t)),i===!1)i=ot;else if(!i)return this;return 1===o&&(s=i,i=function(e){return x().off(e),s.apply(this,arguments)},i.guid=s.guid||(s.guid=x.guid++)),this.each(function(){x.event.add(this,e,i,r,n)})},one:function(e,t,n,r){return this.on(e,t,n,r,1)},off:function(e,n,r){var i,o;if(e&&e.preventDefault&&e.handleObj)return i=e.handleObj,x(e.delegateTarget).off(i.namespace?i.origType+\".\"+i.namespace:i.origType,i.selector,i.handler),this;if(\"object\"==typeof e){for(o in e)this.off(o,n,e[o]);return this}return(n===!1||\"function\"==typeof n)&&(r=n,n=t),r===!1&&(r=ot),this.each(function(){x.event.remove(this,e,r,n)})},trigger:function(e,t){return this.each(function(){x.event.trigger(e,t,this)})},triggerHandler:function(e,n){var r=this[0];return r?x.event.trigger(e,n,r,!0):t}});var st=/^.[^:#\\[\\.,]*$/,lt=/^(?:parents|prev(?:Until|All))/,ut=x.expr.match.needsContext,ct={children:!0,contents:!0,next:!0,prev:!0};x.fn.extend({find:function(e){var t,n=[],r=this,i=r.length;if(\"string\"!=typeof e)return this.pushStack(x(e).filter(function(){for(t=0;i>t;t++)if(x.contains(r[t],this))return!0}));for(t=0;i>t;t++)x.find(e,r[t],n);return n=this.pushStack(i>1?x.unique(n):n),n.selector=this.selector?this.selector+\" \"+e:e,n},has:function(e){var t,n=x(e,this),r=n.length;return this.filter(function(){for(t=0;r>t;t++)if(x.contains(this,n[t]))return!0})},not:function(e){return this.pushStack(ft(this,e||[],!0))},filter:function(e){return this.pushStack(ft(this,e||[],!1))},is:function(e){return!!ft(this,\"string\"==typeof e&&ut.test(e)?x(e):e||[],!1).length},closest:function(e,t){var n,r=0,i=this.length,o=[],a=ut.test(e)||\"string\"!=typeof e?x(e,t||this.context):0;for(;i>r;r++)for(n=this[r];n&&n!==t;n=n.parentNode)if(11>n.nodeType&&(a?a.index(n)>-1:1===n.nodeType&&x.find.matchesSelector(n,e))){n=o.push(n);break}return this.pushStack(o.length>1?x.unique(o):o)},index:function(e){return e?\"string\"==typeof e?x.inArray(this[0],x(e)):x.inArray(e.jquery?e[0]:e,this):this[0]&&this[0].parentNode?this.first().prevAll().length:-1},add:function(e,t){var n=\"string\"==typeof e?x(e,t):x.makeArray(e&&e.nodeType?[e]:e),r=x.merge(this.get(),n);return this.pushStack(x.unique(r))},addBack:function(e){return this.add(null==e?this.prevObject:this.prevObject.filter(e))}});function pt(e,t){do e=e[t];while(e&&1!==e.nodeType);return e}x.each({parent:function(e){var t=e.parentNode;return t&&11!==t.nodeType?t:null},parents:function(e){return x.dir(e,\"parentNode\")},parentsUntil:function(e,t,n){return x.dir(e,\"parentNode\",n)},next:function(e){return pt(e,\"nextSibling\")},prev:function(e){return pt(e,\"previousSibling\")},nextAll:function(e){return x.dir(e,\"nextSibling\")},prevAll:function(e){return x.dir(e,\"previousSibling\")},nextUntil:function(e,t,n){return x.dir(e,\"nextSibling\",n)},prevUntil:function(e,t,n){return x.dir(e,\"previousSibling\",n)},siblings:function(e){return x.sibling((e.parentNode||{}).firstChild,e)},children:function(e){return x.sibling(e.firstChild)},contents:function(e){return x.nodeName(e,\"iframe\")?e.contentDocument||e.contentWindow.document:x.merge([],e.childNodes)}},function(e,t){x.fn[e]=function(n,r){var i=x.map(this,t,n);return\"Until\"!==e.slice(-5)&&(r=n),r&&\"string\"==typeof r&&(i=x.filter(r,i)),this.length>1&&(ct[e]||(i=x.unique(i)),lt.test(e)&&(i=i.reverse())),this.pushStack(i)}}),x.extend({filter:function(e,t,n){var r=t[0];return n&&(e=\":not(\"+e+\")\"),1===t.length&&1===r.nodeType?x.find.matchesSelector(r,e)?[r]:[]:x.find.matches(e,x.grep(t,function(e){return 1===e.nodeType}))},dir:function(e,n,r){var i=[],o=e[n];while(o&&9!==o.nodeType&&(r===t||1!==o.nodeType||!x(o).is(r)))1===o.nodeType&&i.push(o),o=o[n];return i},sibling:function(e,t){var n=[];for(;e;e=e.nextSibling)1===e.nodeType&&e!==t&&n.push(e);return n}});function ft(e,t,n){if(x.isFunction(t))return x.grep(e,function(e,r){return!!t.call(e,r,e)!==n});if(t.nodeType)return x.grep(e,function(e){return e===t!==n});if(\"string\"==typeof t){if(st.test(t))return x.filter(t,e,n);t=x.filter(t,e)}return x.grep(e,function(e){return x.inArray(e,t)>=0!==n})}function dt(e){var t=ht.split(\"|\"),n=e.createDocumentFragment();if(n.createElement)while(t.length)n.createElement(t.pop());return n}var ht=\"abbr|article|aside|audio|bdi|canvas|data|datalist|details|figcaption|figure|footer|header|hgroup|mark|meter|nav|output|progress|section|summary|time|video\",gt=/ jQuery\\d+=\"(?:null|\\d+)\"/g,mt=RegExp(\"<(?:\"+ht+\")[\\\\s/>]\",\"i\"),yt=/^\\s+/,vt=/<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\\w:]+)[^>]*)\\/>/gi,bt=/<([\\w:]+)/,xt=/<tbody/i,wt=/<|&#?\\w+;/,Tt=/<(?:script|style|link)/i,Ct=/^(?:checkbox|radio)$/i,Nt=/checked\\s*(?:[^=]|=\\s*.checked.)/i,kt=/^$|\\/(?:java|ecma)script/i,Et=/^true\\/(.*)/,St=/^\\s*<!(?:\\[CDATA\\[|--)|(?:\\]\\]|--)>\\s*$/g,At={option:[1,\"<select multiple='multiple'>\",\"</select>\"],legend:[1,\"<fieldset>\",\"</fieldset>\"],area:[1,\"<map>\",\"</map>\"],param:[1,\"<object>\",\"</object>\"],thead:[1,\"<table>\",\"</table>\"],tr:[2,\"<table><tbody>\",\"</tbody></table>\"],col:[2,\"<table><tbody></tbody><colgroup>\",\"</colgroup></table>\"],td:[3,\"<table><tbody><tr>\",\"</tr></tbody></table>\"],_default:x.support.htmlSerialize?[0,\"\",\"\"]:[1,\"X<div>\",\"</div>\"]},jt=dt(a),Dt=jt.appendChild(a.createElement(\"div\"));At.optgroup=At.option,At.tbody=At.tfoot=At.colgroup=At.caption=At.thead,At.th=At.td,x.fn.extend({text:function(e){return x.access(this,function(e){return e===t?x.text(this):this.empty().append((this[0]&&this[0].ownerDocument||a).createTextNode(e))},null,e,arguments.length)},append:function(){return this.domManip(arguments,function(e){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var t=Lt(this,e);t.appendChild(e)}})},prepend:function(){return this.domManip(arguments,function(e){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var t=Lt(this,e);t.insertBefore(e,t.firstChild)}})},before:function(){return this.domManip(arguments,function(e){this.parentNode&&this.parentNode.insertBefore(e,this)})},after:function(){return this.domManip(arguments,function(e){this.parentNode&&this.parentNode.insertBefore(e,this.nextSibling)})},remove:function(e,t){var n,r=e?x.filter(e,this):this,i=0;for(;null!=(n=r[i]);i++)t||1!==n.nodeType||x.cleanData(Ft(n)),n.parentNode&&(t&&x.contains(n.ownerDocument,n)&&_t(Ft(n,\"script\")),n.parentNode.removeChild(n));return this},empty:function(){var e,t=0;for(;null!=(e=this[t]);t++){1===e.nodeType&&x.cleanData(Ft(e,!1));while(e.firstChild)e.removeChild(e.firstChild);e.options&&x.nodeName(e,\"select\")&&(e.options.length=0)}return this},clone:function(e,t){return e=null==e?!1:e,t=null==t?e:t,this.map(function(){return x.clone(this,e,t)})},html:function(e){return x.access(this,function(e){var n=this[0]||{},r=0,i=this.length;if(e===t)return 1===n.nodeType?n.innerHTML.replace(gt,\"\"):t;if(!(\"string\"!=typeof e||Tt.test(e)||!x.support.htmlSerialize&&mt.test(e)||!x.support.leadingWhitespace&&yt.test(e)||At[(bt.exec(e)||[\"\",\"\"])[1].toLowerCase()])){e=e.replace(vt,\"<$1></$2>\");try{for(;i>r;r++)n=this[r]||{},1===n.nodeType&&(x.cleanData(Ft(n,!1)),n.innerHTML=e);n=0}catch(o){}}n&&this.empty().append(e)},null,e,arguments.length)},replaceWith:function(){var e=x.map(this,function(e){return[e.nextSibling,e.parentNode]}),t=0;return this.domManip(arguments,function(n){var r=e[t++],i=e[t++];i&&(r&&r.parentNode!==i&&(r=this.nextSibling),x(this).remove(),i.insertBefore(n,r))},!0),t?this:this.remove()},detach:function(e){return this.remove(e,!0)},domManip:function(e,t,n){e=d.apply([],e);var r,i,o,a,s,l,u=0,c=this.length,p=this,f=c-1,h=e[0],g=x.isFunction(h);if(g||!(1>=c||\"string\"!=typeof h||x.support.checkClone)&&Nt.test(h))return this.each(function(r){var i=p.eq(r);g&&(e[0]=h.call(this,r,i.html())),i.domManip(e,t,n)});if(c&&(l=x.buildFragment(e,this[0].ownerDocument,!1,!n&&this),r=l.firstChild,1===l.childNodes.length&&(l=r),r)){for(a=x.map(Ft(l,\"script\"),Ht),o=a.length;c>u;u++)i=l,u!==f&&(i=x.clone(i,!0,!0),o&&x.merge(a,Ft(i,\"script\"))),t.call(this[u],i,u);if(o)for(s=a[a.length-1].ownerDocument,x.map(a,qt),u=0;o>u;u++)i=a[u],kt.test(i.type||\"\")&&!x._data(i,\"globalEval\")&&x.contains(s,i)&&(i.src?x._evalUrl(i.src):x.globalEval((i.text||i.textContent||i.innerHTML||\"\").replace(St,\"\")));l=r=null}return this}});function Lt(e,t){return x.nodeName(e,\"table\")&&x.nodeName(1===t.nodeType?t:t.firstChild,\"tr\")?e.getElementsByTagName(\"tbody\")[0]||e.appendChild(e.ownerDocument.createElement(\"tbody\")):e}function Ht(e){return e.type=(null!==x.find.attr(e,\"type\"))+\"/\"+e.type,e}function qt(e){var t=Et.exec(e.type);return t?e.type=t[1]:e.removeAttribute(\"type\"),e}function _t(e,t){var n,r=0;for(;null!=(n=e[r]);r++)x._data(n,\"globalEval\",!t||x._data(t[r],\"globalEval\"))}function Mt(e,t){if(1===t.nodeType&&x.hasData(e)){var n,r,i,o=x._data(e),a=x._data(t,o),s=o.events;if(s){delete a.handle,a.events={};for(n in s)for(r=0,i=s[n].length;i>r;r++)x.event.add(t,n,s[n][r])}a.data&&(a.data=x.extend({},a.data))}}function Ot(e,t){var n,r,i;if(1===t.nodeType){if(n=t.nodeName.toLowerCase(),!x.support.noCloneEvent&&t[x.expando]){i=x._data(t);for(r in i.events)x.removeEvent(t,r,i.handle);t.removeAttribute(x.expando)}\"script\"===n&&t.text!==e.text?(Ht(t).text=e.text,qt(t)):\"object\"===n?(t.parentNode&&(t.outerHTML=e.outerHTML),x.support.html5Clone&&e.innerHTML&&!x.trim(t.innerHTML)&&(t.innerHTML=e.innerHTML)):\"input\"===n&&Ct.test(e.type)?(t.defaultChecked=t.checked=e.checked,t.value!==e.value&&(t.value=e.value)):\"option\"===n?t.defaultSelected=t.selected=e.defaultSelected:(\"input\"===n||\"textarea\"===n)&&(t.defaultValue=e.defaultValue)}}x.each({appendTo:\"append\",prependTo:\"prepend\",insertBefore:\"before\",insertAfter:\"after\",replaceAll:\"replaceWith\"},function(e,t){x.fn[e]=function(e){var n,r=0,i=[],o=x(e),a=o.length-1;for(;a>=r;r++)n=r===a?this:this.clone(!0),x(o[r])[t](n),h.apply(i,n.get());return this.pushStack(i)}});function Ft(e,n){var r,o,a=0,s=typeof e.getElementsByTagName!==i?e.getElementsByTagName(n||\"*\"):typeof e.querySelectorAll!==i?e.querySelectorAll(n||\"*\"):t;if(!s)for(s=[],r=e.childNodes||e;null!=(o=r[a]);a++)!n||x.nodeName(o,n)?s.push(o):x.merge(s,Ft(o,n));return n===t||n&&x.nodeName(e,n)?x.merge([e],s):s}function Bt(e){Ct.test(e.type)&&(e.defaultChecked=e.checked)}x.extend({clone:function(e,t,n){var r,i,o,a,s,l=x.contains(e.ownerDocument,e);if(x.support.html5Clone||x.isXMLDoc(e)||!mt.test(\"<\"+e.nodeName+\">\")?o=e.cloneNode(!0):(Dt.innerHTML=e.outerHTML,Dt.removeChild(o=Dt.firstChild)),!(x.support.noCloneEvent&&x.support.noCloneChecked||1!==e.nodeType&&11!==e.nodeType||x.isXMLDoc(e)))for(r=Ft(o),s=Ft(e),a=0;null!=(i=s[a]);++a)r[a]&&Ot(i,r[a]);if(t)if(n)for(s=s||Ft(e),r=r||Ft(o),a=0;null!=(i=s[a]);a++)Mt(i,r[a]);else Mt(e,o);return r=Ft(o,\"script\"),r.length>0&&_t(r,!l&&Ft(e,\"script\")),r=s=i=null,o},buildFragment:function(e,t,n,r){var i,o,a,s,l,u,c,p=e.length,f=dt(t),d=[],h=0;for(;p>h;h++)if(o=e[h],o||0===o)if(\"object\"===x.type(o))x.merge(d,o.nodeType?[o]:o);else if(wt.test(o)){s=s||f.appendChild(t.createElement(\"div\")),l=(bt.exec(o)||[\"\",\"\"])[1].toLowerCase(),c=At[l]||At._default,s.innerHTML=c[1]+o.replace(vt,\"<$1></$2>\")+c[2],i=c[0];while(i--)s=s.lastChild;if(!x.support.leadingWhitespace&&yt.test(o)&&d.push(t.createTextNode(yt.exec(o)[0])),!x.support.tbody){o=\"table\"!==l||xt.test(o)?\"<table>\"!==c[1]||xt.test(o)?0:s:s.firstChild,i=o&&o.childNodes.length;while(i--)x.nodeName(u=o.childNodes[i],\"tbody\")&&!u.childNodes.length&&o.removeChild(u)}x.merge(d,s.childNodes),s.textContent=\"\";while(s.firstChild)s.removeChild(s.firstChild);s=f.lastChild}else d.push(t.createTextNode(o));s&&f.removeChild(s),x.support.appendChecked||x.grep(Ft(d,\"input\"),Bt),h=0;while(o=d[h++])if((!r||-1===x.inArray(o,r))&&(a=x.contains(o.ownerDocument,o),s=Ft(f.appendChild(o),\"script\"),a&&_t(s),n)){i=0;while(o=s[i++])kt.test(o.type||\"\")&&n.push(o)}return s=null,f},cleanData:function(e,t){var n,r,o,a,s=0,l=x.expando,u=x.cache,c=x.support.deleteExpando,f=x.event.special;for(;null!=(n=e[s]);s++)if((t||x.acceptData(n))&&(o=n[l],a=o&&u[o])){if(a.events)for(r in a.events)f[r]?x.event.remove(n,r):x.removeEvent(n,r,a.handle);\nu[o]&&(delete u[o],c?delete n[l]:typeof n.removeAttribute!==i?n.removeAttribute(l):n[l]=null,p.push(o))}},_evalUrl:function(e){return x.ajax({url:e,type:\"GET\",dataType:\"script\",async:!1,global:!1,\"throws\":!0})}}),x.fn.extend({wrapAll:function(e){if(x.isFunction(e))return this.each(function(t){x(this).wrapAll(e.call(this,t))});if(this[0]){var t=x(e,this[0].ownerDocument).eq(0).clone(!0);this[0].parentNode&&t.insertBefore(this[0]),t.map(function(){var e=this;while(e.firstChild&&1===e.firstChild.nodeType)e=e.firstChild;return e}).append(this)}return this},wrapInner:function(e){return x.isFunction(e)?this.each(function(t){x(this).wrapInner(e.call(this,t))}):this.each(function(){var t=x(this),n=t.contents();n.length?n.wrapAll(e):t.append(e)})},wrap:function(e){var t=x.isFunction(e);return this.each(function(n){x(this).wrapAll(t?e.call(this,n):e)})},unwrap:function(){return this.parent().each(function(){x.nodeName(this,\"body\")||x(this).replaceWith(this.childNodes)}).end()}});var Pt,Rt,Wt,$t=/alpha\\([^)]*\\)/i,It=/opacity\\s*=\\s*([^)]*)/,zt=/^(top|right|bottom|left)$/,Xt=/^(none|table(?!-c[ea]).+)/,Ut=/^margin/,Vt=RegExp(\"^(\"+w+\")(.*)$\",\"i\"),Yt=RegExp(\"^(\"+w+\")(?!px)[a-z%]+$\",\"i\"),Jt=RegExp(\"^([+-])=(\"+w+\")\",\"i\"),Gt={BODY:\"block\"},Qt={position:\"absolute\",visibility:\"hidden\",display:\"block\"},Kt={letterSpacing:0,fontWeight:400},Zt=[\"Top\",\"Right\",\"Bottom\",\"Left\"],en=[\"Webkit\",\"O\",\"Moz\",\"ms\"];function tn(e,t){if(t in e)return t;var n=t.charAt(0).toUpperCase()+t.slice(1),r=t,i=en.length;while(i--)if(t=en[i]+n,t in e)return t;return r}function nn(e,t){return e=t||e,\"none\"===x.css(e,\"display\")||!x.contains(e.ownerDocument,e)}function rn(e,t){var n,r,i,o=[],a=0,s=e.length;for(;s>a;a++)r=e[a],r.style&&(o[a]=x._data(r,\"olddisplay\"),n=r.style.display,t?(o[a]||\"none\"!==n||(r.style.display=\"\"),\"\"===r.style.display&&nn(r)&&(o[a]=x._data(r,\"olddisplay\",ln(r.nodeName)))):o[a]||(i=nn(r),(n&&\"none\"!==n||!i)&&x._data(r,\"olddisplay\",i?n:x.css(r,\"display\"))));for(a=0;s>a;a++)r=e[a],r.style&&(t&&\"none\"!==r.style.display&&\"\"!==r.style.display||(r.style.display=t?o[a]||\"\":\"none\"));return e}x.fn.extend({css:function(e,n){return x.access(this,function(e,n,r){var i,o,a={},s=0;if(x.isArray(n)){for(o=Rt(e),i=n.length;i>s;s++)a[n[s]]=x.css(e,n[s],!1,o);return a}return r!==t?x.style(e,n,r):x.css(e,n)},e,n,arguments.length>1)},show:function(){return rn(this,!0)},hide:function(){return rn(this)},toggle:function(e){return\"boolean\"==typeof e?e?this.show():this.hide():this.each(function(){nn(this)?x(this).show():x(this).hide()})}}),x.extend({cssHooks:{opacity:{get:function(e,t){if(t){var n=Wt(e,\"opacity\");return\"\"===n?\"1\":n}}}},cssNumber:{columnCount:!0,fillOpacity:!0,fontWeight:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,widows:!0,zIndex:!0,zoom:!0},cssProps:{\"float\":x.support.cssFloat?\"cssFloat\":\"styleFloat\"},style:function(e,n,r,i){if(e&&3!==e.nodeType&&8!==e.nodeType&&e.style){var o,a,s,l=x.camelCase(n),u=e.style;if(n=x.cssProps[l]||(x.cssProps[l]=tn(u,l)),s=x.cssHooks[n]||x.cssHooks[l],r===t)return s&&\"get\"in s&&(o=s.get(e,!1,i))!==t?o:u[n];if(a=typeof r,\"string\"===a&&(o=Jt.exec(r))&&(r=(o[1]+1)*o[2]+parseFloat(x.css(e,n)),a=\"number\"),!(null==r||\"number\"===a&&isNaN(r)||(\"number\"!==a||x.cssNumber[l]||(r+=\"px\"),x.support.clearCloneStyle||\"\"!==r||0!==n.indexOf(\"background\")||(u[n]=\"inherit\"),s&&\"set\"in s&&(r=s.set(e,r,i))===t)))try{u[n]=r}catch(c){}}},css:function(e,n,r,i){var o,a,s,l=x.camelCase(n);return n=x.cssProps[l]||(x.cssProps[l]=tn(e.style,l)),s=x.cssHooks[n]||x.cssHooks[l],s&&\"get\"in s&&(a=s.get(e,!0,r)),a===t&&(a=Wt(e,n,i)),\"normal\"===a&&n in Kt&&(a=Kt[n]),\"\"===r||r?(o=parseFloat(a),r===!0||x.isNumeric(o)?o||0:a):a}}),e.getComputedStyle?(Rt=function(t){return e.getComputedStyle(t,null)},Wt=function(e,n,r){var i,o,a,s=r||Rt(e),l=s?s.getPropertyValue(n)||s[n]:t,u=e.style;return s&&(\"\"!==l||x.contains(e.ownerDocument,e)||(l=x.style(e,n)),Yt.test(l)&&Ut.test(n)&&(i=u.width,o=u.minWidth,a=u.maxWidth,u.minWidth=u.maxWidth=u.width=l,l=s.width,u.width=i,u.minWidth=o,u.maxWidth=a)),l}):a.documentElement.currentStyle&&(Rt=function(e){return e.currentStyle},Wt=function(e,n,r){var i,o,a,s=r||Rt(e),l=s?s[n]:t,u=e.style;return null==l&&u&&u[n]&&(l=u[n]),Yt.test(l)&&!zt.test(n)&&(i=u.left,o=e.runtimeStyle,a=o&&o.left,a&&(o.left=e.currentStyle.left),u.left=\"fontSize\"===n?\"1em\":l,l=u.pixelLeft+\"px\",u.left=i,a&&(o.left=a)),\"\"===l?\"auto\":l});function on(e,t,n){var r=Vt.exec(t);return r?Math.max(0,r[1]-(n||0))+(r[2]||\"px\"):t}function an(e,t,n,r,i){var o=n===(r?\"border\":\"content\")?4:\"width\"===t?1:0,a=0;for(;4>o;o+=2)\"margin\"===n&&(a+=x.css(e,n+Zt[o],!0,i)),r?(\"content\"===n&&(a-=x.css(e,\"padding\"+Zt[o],!0,i)),\"margin\"!==n&&(a-=x.css(e,\"border\"+Zt[o]+\"Width\",!0,i))):(a+=x.css(e,\"padding\"+Zt[o],!0,i),\"padding\"!==n&&(a+=x.css(e,\"border\"+Zt[o]+\"Width\",!0,i)));return a}function sn(e,t,n){var r=!0,i=\"width\"===t?e.offsetWidth:e.offsetHeight,o=Rt(e),a=x.support.boxSizing&&\"border-box\"===x.css(e,\"boxSizing\",!1,o);if(0>=i||null==i){if(i=Wt(e,t,o),(0>i||null==i)&&(i=e.style[t]),Yt.test(i))return i;r=a&&(x.support.boxSizingReliable||i===e.style[t]),i=parseFloat(i)||0}return i+an(e,t,n||(a?\"border\":\"content\"),r,o)+\"px\"}function ln(e){var t=a,n=Gt[e];return n||(n=un(e,t),\"none\"!==n&&n||(Pt=(Pt||x(\"<iframe frameborder='0' width='0' height='0'/>\").css(\"cssText\",\"display:block !important\")).appendTo(t.documentElement),t=(Pt[0].contentWindow||Pt[0].contentDocument).document,t.write(\"<!doctype html><html><body>\"),t.close(),n=un(e,t),Pt.detach()),Gt[e]=n),n}function un(e,t){var n=x(t.createElement(e)).appendTo(t.body),r=x.css(n[0],\"display\");return n.remove(),r}x.each([\"height\",\"width\"],function(e,n){x.cssHooks[n]={get:function(e,r,i){return r?0===e.offsetWidth&&Xt.test(x.css(e,\"display\"))?x.swap(e,Qt,function(){return sn(e,n,i)}):sn(e,n,i):t},set:function(e,t,r){var i=r&&Rt(e);return on(e,t,r?an(e,n,r,x.support.boxSizing&&\"border-box\"===x.css(e,\"boxSizing\",!1,i),i):0)}}}),x.support.opacity||(x.cssHooks.opacity={get:function(e,t){return It.test((t&&e.currentStyle?e.currentStyle.filter:e.style.filter)||\"\")?.01*parseFloat(RegExp.$1)+\"\":t?\"1\":\"\"},set:function(e,t){var n=e.style,r=e.currentStyle,i=x.isNumeric(t)?\"alpha(opacity=\"+100*t+\")\":\"\",o=r&&r.filter||n.filter||\"\";n.zoom=1,(t>=1||\"\"===t)&&\"\"===x.trim(o.replace($t,\"\"))&&n.removeAttribute&&(n.removeAttribute(\"filter\"),\"\"===t||r&&!r.filter)||(n.filter=$t.test(o)?o.replace($t,i):o+\" \"+i)}}),x(function(){x.support.reliableMarginRight||(x.cssHooks.marginRight={get:function(e,n){return n?x.swap(e,{display:\"inline-block\"},Wt,[e,\"marginRight\"]):t}}),!x.support.pixelPosition&&x.fn.position&&x.each([\"top\",\"left\"],function(e,n){x.cssHooks[n]={get:function(e,r){return r?(r=Wt(e,n),Yt.test(r)?x(e).position()[n]+\"px\":r):t}}})}),x.expr&&x.expr.filters&&(x.expr.filters.hidden=function(e){return 0>=e.offsetWidth&&0>=e.offsetHeight||!x.support.reliableHiddenOffsets&&\"none\"===(e.style&&e.style.display||x.css(e,\"display\"))},x.expr.filters.visible=function(e){return!x.expr.filters.hidden(e)}),x.each({margin:\"\",padding:\"\",border:\"Width\"},function(e,t){x.cssHooks[e+t]={expand:function(n){var r=0,i={},o=\"string\"==typeof n?n.split(\" \"):[n];for(;4>r;r++)i[e+Zt[r]+t]=o[r]||o[r-2]||o[0];return i}},Ut.test(e)||(x.cssHooks[e+t].set=on)});var cn=/%20/g,pn=/\\[\\]$/,fn=/\\r?\\n/g,dn=/^(?:submit|button|image|reset|file)$/i,hn=/^(?:input|select|textarea|keygen)/i;x.fn.extend({serialize:function(){return x.param(this.serializeArray())},serializeArray:function(){return this.map(function(){var e=x.prop(this,\"elements\");return e?x.makeArray(e):this}).filter(function(){var e=this.type;return this.name&&!x(this).is(\":disabled\")&&hn.test(this.nodeName)&&!dn.test(e)&&(this.checked||!Ct.test(e))}).map(function(e,t){var n=x(this).val();return null==n?null:x.isArray(n)?x.map(n,function(e){return{name:t.name,value:e.replace(fn,\"\\r\\n\")}}):{name:t.name,value:n.replace(fn,\"\\r\\n\")}}).get()}}),x.param=function(e,n){var r,i=[],o=function(e,t){t=x.isFunction(t)?t():null==t?\"\":t,i[i.length]=encodeURIComponent(e)+\"=\"+encodeURIComponent(t)};if(n===t&&(n=x.ajaxSettings&&x.ajaxSettings.traditional),x.isArray(e)||e.jquery&&!x.isPlainObject(e))x.each(e,function(){o(this.name,this.value)});else for(r in e)gn(r,e[r],n,o);return i.join(\"&\").replace(cn,\"+\")};function gn(e,t,n,r){var i;if(x.isArray(t))x.each(t,function(t,i){n||pn.test(e)?r(e,i):gn(e+\"[\"+(\"object\"==typeof i?t:\"\")+\"]\",i,n,r)});else if(n||\"object\"!==x.type(t))r(e,t);else for(i in t)gn(e+\"[\"+i+\"]\",t[i],n,r)}x.each(\"blur focus focusin focusout load resize scroll unload click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup error contextmenu\".split(\" \"),function(e,t){x.fn[t]=function(e,n){return arguments.length>0?this.on(t,null,e,n):this.trigger(t)}}),x.fn.extend({hover:function(e,t){return this.mouseenter(e).mouseleave(t||e)},bind:function(e,t,n){return this.on(e,null,t,n)},unbind:function(e,t){return this.off(e,null,t)},delegate:function(e,t,n,r){return this.on(t,e,n,r)},undelegate:function(e,t,n){return 1===arguments.length?this.off(e,\"**\"):this.off(t,e||\"**\",n)}});var mn,yn,vn=x.now(),bn=/\\?/,xn=/#.*$/,wn=/([?&])_=[^&]*/,Tn=/^(.*?):[ \\t]*([^\\r\\n]*)\\r?$/gm,Cn=/^(?:about|app|app-storage|.+-extension|file|res|widget):$/,Nn=/^(?:GET|HEAD)$/,kn=/^\\/\\//,En=/^([\\w.+-]+:)(?:\\/\\/([^\\/?#:]*)(?::(\\d+)|)|)/,Sn=x.fn.load,An={},jn={},Dn=\"*/\".concat(\"*\");try{yn=o.href}catch(Ln){yn=a.createElement(\"a\"),yn.href=\"\",yn=yn.href}mn=En.exec(yn.toLowerCase())||[];function Hn(e){return function(t,n){\"string\"!=typeof t&&(n=t,t=\"*\");var r,i=0,o=t.toLowerCase().match(T)||[];if(x.isFunction(n))while(r=o[i++])\"+\"===r[0]?(r=r.slice(1)||\"*\",(e[r]=e[r]||[]).unshift(n)):(e[r]=e[r]||[]).push(n)}}function qn(e,n,r,i){var o={},a=e===jn;function s(l){var u;return o[l]=!0,x.each(e[l]||[],function(e,l){var c=l(n,r,i);return\"string\"!=typeof c||a||o[c]?a?!(u=c):t:(n.dataTypes.unshift(c),s(c),!1)}),u}return s(n.dataTypes[0])||!o[\"*\"]&&s(\"*\")}function _n(e,n){var r,i,o=x.ajaxSettings.flatOptions||{};for(i in n)n[i]!==t&&((o[i]?e:r||(r={}))[i]=n[i]);return r&&x.extend(!0,e,r),e}x.fn.load=function(e,n,r){if(\"string\"!=typeof e&&Sn)return Sn.apply(this,arguments);var i,o,a,s=this,l=e.indexOf(\" \");return l>=0&&(i=e.slice(l,e.length),e=e.slice(0,l)),x.isFunction(n)?(r=n,n=t):n&&\"object\"==typeof n&&(a=\"POST\"),s.length>0&&x.ajax({url:e,type:a,dataType:\"html\",data:n}).done(function(e){o=arguments,s.html(i?x(\"<div>\").append(x.parseHTML(e)).find(i):e)}).complete(r&&function(e,t){s.each(r,o||[e.responseText,t,e])}),this},x.each([\"ajaxStart\",\"ajaxStop\",\"ajaxComplete\",\"ajaxError\",\"ajaxSuccess\",\"ajaxSend\"],function(e,t){x.fn[t]=function(e){return this.on(t,e)}}),x.extend({active:0,lastModified:{},etag:{},ajaxSettings:{url:yn,type:\"GET\",isLocal:Cn.test(mn[1]),global:!0,processData:!0,async:!0,contentType:\"application/x-www-form-urlencoded; charset=UTF-8\",accepts:{\"*\":Dn,text:\"text/plain\",html:\"text/html\",xml:\"application/xml, text/xml\",json:\"application/json, text/javascript\"},contents:{xml:/xml/,html:/html/,json:/json/},responseFields:{xml:\"responseXML\",text:\"responseText\",json:\"responseJSON\"},converters:{\"* text\":String,\"text html\":!0,\"text json\":x.parseJSON,\"text xml\":x.parseXML},flatOptions:{url:!0,context:!0}},ajaxSetup:function(e,t){return t?_n(_n(e,x.ajaxSettings),t):_n(x.ajaxSettings,e)},ajaxPrefilter:Hn(An),ajaxTransport:Hn(jn),ajax:function(e,n){\"object\"==typeof e&&(n=e,e=t),n=n||{};var r,i,o,a,s,l,u,c,p=x.ajaxSetup({},n),f=p.context||p,d=p.context&&(f.nodeType||f.jquery)?x(f):x.event,h=x.Deferred(),g=x.Callbacks(\"once memory\"),m=p.statusCode||{},y={},v={},b=0,w=\"canceled\",C={readyState:0,getResponseHeader:function(e){var t;if(2===b){if(!c){c={};while(t=Tn.exec(a))c[t[1].toLowerCase()]=t[2]}t=c[e.toLowerCase()]}return null==t?null:t},getAllResponseHeaders:function(){return 2===b?a:null},setRequestHeader:function(e,t){var n=e.toLowerCase();return b||(e=v[n]=v[n]||e,y[e]=t),this},overrideMimeType:function(e){return b||(p.mimeType=e),this},statusCode:function(e){var t;if(e)if(2>b)for(t in e)m[t]=[m[t],e[t]];else C.always(e[C.status]);return this},abort:function(e){var t=e||w;return u&&u.abort(t),k(0,t),this}};if(h.promise(C).complete=g.add,C.success=C.done,C.error=C.fail,p.url=((e||p.url||yn)+\"\").replace(xn,\"\").replace(kn,mn[1]+\"//\"),p.type=n.method||n.type||p.method||p.type,p.dataTypes=x.trim(p.dataType||\"*\").toLowerCase().match(T)||[\"\"],null==p.crossDomain&&(r=En.exec(p.url.toLowerCase()),p.crossDomain=!(!r||r[1]===mn[1]&&r[2]===mn[2]&&(r[3]||(\"http:\"===r[1]?\"80\":\"443\"))===(mn[3]||(\"http:\"===mn[1]?\"80\":\"443\")))),p.data&&p.processData&&\"string\"!=typeof p.data&&(p.data=x.param(p.data,p.traditional)),qn(An,p,n,C),2===b)return C;l=p.global,l&&0===x.active++&&x.event.trigger(\"ajaxStart\"),p.type=p.type.toUpperCase(),p.hasContent=!Nn.test(p.type),o=p.url,p.hasContent||(p.data&&(o=p.url+=(bn.test(o)?\"&\":\"?\")+p.data,delete p.data),p.cache===!1&&(p.url=wn.test(o)?o.replace(wn,\"$1_=\"+vn++):o+(bn.test(o)?\"&\":\"?\")+\"_=\"+vn++)),p.ifModified&&(x.lastModified[o]&&C.setRequestHeader(\"If-Modified-Since\",x.lastModified[o]),x.etag[o]&&C.setRequestHeader(\"If-None-Match\",x.etag[o])),(p.data&&p.hasContent&&p.contentType!==!1||n.contentType)&&C.setRequestHeader(\"Content-Type\",p.contentType),C.setRequestHeader(\"Accept\",p.dataTypes[0]&&p.accepts[p.dataTypes[0]]?p.accepts[p.dataTypes[0]]+(\"*\"!==p.dataTypes[0]?\", \"+Dn+\"; q=0.01\":\"\"):p.accepts[\"*\"]);for(i in p.headers)C.setRequestHeader(i,p.headers[i]);if(p.beforeSend&&(p.beforeSend.call(f,C,p)===!1||2===b))return C.abort();w=\"abort\";for(i in{success:1,error:1,complete:1})C[i](p[i]);if(u=qn(jn,p,n,C)){C.readyState=1,l&&d.trigger(\"ajaxSend\",[C,p]),p.async&&p.timeout>0&&(s=setTimeout(function(){C.abort(\"timeout\")},p.timeout));try{b=1,u.send(y,k)}catch(N){if(!(2>b))throw N;k(-1,N)}}else k(-1,\"No Transport\");function k(e,n,r,i){var c,y,v,w,T,N=n;2!==b&&(b=2,s&&clearTimeout(s),u=t,a=i||\"\",C.readyState=e>0?4:0,c=e>=200&&300>e||304===e,r&&(w=Mn(p,C,r)),w=On(p,w,C,c),c?(p.ifModified&&(T=C.getResponseHeader(\"Last-Modified\"),T&&(x.lastModified[o]=T),T=C.getResponseHeader(\"etag\"),T&&(x.etag[o]=T)),204===e||\"HEAD\"===p.type?N=\"nocontent\":304===e?N=\"notmodified\":(N=w.state,y=w.data,v=w.error,c=!v)):(v=N,(e||!N)&&(N=\"error\",0>e&&(e=0))),C.status=e,C.statusText=(n||N)+\"\",c?h.resolveWith(f,[y,N,C]):h.rejectWith(f,[C,N,v]),C.statusCode(m),m=t,l&&d.trigger(c?\"ajaxSuccess\":\"ajaxError\",[C,p,c?y:v]),g.fireWith(f,[C,N]),l&&(d.trigger(\"ajaxComplete\",[C,p]),--x.active||x.event.trigger(\"ajaxStop\")))}return C},getJSON:function(e,t,n){return x.get(e,t,n,\"json\")},getScript:function(e,n){return x.get(e,t,n,\"script\")}}),x.each([\"get\",\"post\"],function(e,n){x[n]=function(e,r,i,o){return x.isFunction(r)&&(o=o||i,i=r,r=t),x.ajax({url:e,type:n,dataType:o,data:r,success:i})}});function Mn(e,n,r){var i,o,a,s,l=e.contents,u=e.dataTypes;while(\"*\"===u[0])u.shift(),o===t&&(o=e.mimeType||n.getResponseHeader(\"Content-Type\"));if(o)for(s in l)if(l[s]&&l[s].test(o)){u.unshift(s);break}if(u[0]in r)a=u[0];else{for(s in r){if(!u[0]||e.converters[s+\" \"+u[0]]){a=s;break}i||(i=s)}a=a||i}return a?(a!==u[0]&&u.unshift(a),r[a]):t}function On(e,t,n,r){var i,o,a,s,l,u={},c=e.dataTypes.slice();if(c[1])for(a in e.converters)u[a.toLowerCase()]=e.converters[a];o=c.shift();while(o)if(e.responseFields[o]&&(n[e.responseFields[o]]=t),!l&&r&&e.dataFilter&&(t=e.dataFilter(t,e.dataType)),l=o,o=c.shift())if(\"*\"===o)o=l;else if(\"*\"!==l&&l!==o){if(a=u[l+\" \"+o]||u[\"* \"+o],!a)for(i in u)if(s=i.split(\" \"),s[1]===o&&(a=u[l+\" \"+s[0]]||u[\"* \"+s[0]])){a===!0?a=u[i]:u[i]!==!0&&(o=s[0],c.unshift(s[1]));break}if(a!==!0)if(a&&e[\"throws\"])t=a(t);else try{t=a(t)}catch(p){return{state:\"parsererror\",error:a?p:\"No conversion from \"+l+\" to \"+o}}}return{state:\"success\",data:t}}x.ajaxSetup({accepts:{script:\"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript\"},contents:{script:/(?:java|ecma)script/},converters:{\"text script\":function(e){return x.globalEval(e),e}}}),x.ajaxPrefilter(\"script\",function(e){e.cache===t&&(e.cache=!1),e.crossDomain&&(e.type=\"GET\",e.global=!1)}),x.ajaxTransport(\"script\",function(e){if(e.crossDomain){var n,r=a.head||x(\"head\")[0]||a.documentElement;return{send:function(t,i){n=a.createElement(\"script\"),n.async=!0,e.scriptCharset&&(n.charset=e.scriptCharset),n.src=e.url,n.onload=n.onreadystatechange=function(e,t){(t||!n.readyState||/loaded|complete/.test(n.readyState))&&(n.onload=n.onreadystatechange=null,n.parentNode&&n.parentNode.removeChild(n),n=null,t||i(200,\"success\"))},r.insertBefore(n,r.firstChild)},abort:function(){n&&n.onload(t,!0)}}}});var Fn=[],Bn=/(=)\\?(?=&|$)|\\?\\?/;x.ajaxSetup({jsonp:\"callback\",jsonpCallback:function(){var e=Fn.pop()||x.expando+\"_\"+vn++;return this[e]=!0,e}}),x.ajaxPrefilter(\"json jsonp\",function(n,r,i){var o,a,s,l=n.jsonp!==!1&&(Bn.test(n.url)?\"url\":\"string\"==typeof n.data&&!(n.contentType||\"\").indexOf(\"application/x-www-form-urlencoded\")&&Bn.test(n.data)&&\"data\");return l||\"jsonp\"===n.dataTypes[0]?(o=n.jsonpCallback=x.isFunction(n.jsonpCallback)?n.jsonpCallback():n.jsonpCallback,l?n[l]=n[l].replace(Bn,\"$1\"+o):n.jsonp!==!1&&(n.url+=(bn.test(n.url)?\"&\":\"?\")+n.jsonp+\"=\"+o),n.converters[\"script json\"]=function(){return s||x.error(o+\" was not called\"),s[0]},n.dataTypes[0]=\"json\",a=e[o],e[o]=function(){s=arguments},i.always(function(){e[o]=a,n[o]&&(n.jsonpCallback=r.jsonpCallback,Fn.push(o)),s&&x.isFunction(a)&&a(s[0]),s=a=t}),\"script\"):t});var Pn,Rn,Wn=0,$n=e.ActiveXObject&&function(){var e;for(e in Pn)Pn[e](t,!0)};function In(){try{return new e.XMLHttpRequest}catch(t){}}function zn(){try{return new e.ActiveXObject(\"Microsoft.XMLHTTP\")}catch(t){}}x.ajaxSettings.xhr=e.ActiveXObject?function(){return!this.isLocal&&In()||zn()}:In,Rn=x.ajaxSettings.xhr(),x.support.cors=!!Rn&&\"withCredentials\"in Rn,Rn=x.support.ajax=!!Rn,Rn&&x.ajaxTransport(function(n){if(!n.crossDomain||x.support.cors){var r;return{send:function(i,o){var a,s,l=n.xhr();if(n.username?l.open(n.type,n.url,n.async,n.username,n.password):l.open(n.type,n.url,n.async),n.xhrFields)for(s in n.xhrFields)l[s]=n.xhrFields[s];n.mimeType&&l.overrideMimeType&&l.overrideMimeType(n.mimeType),n.crossDomain||i[\"X-Requested-With\"]||(i[\"X-Requested-With\"]=\"XMLHttpRequest\");try{for(s in i)l.setRequestHeader(s,i[s])}catch(u){}l.send(n.hasContent&&n.data||null),r=function(e,i){var s,u,c,p;try{if(r&&(i||4===l.readyState))if(r=t,a&&(l.onreadystatechange=x.noop,$n&&delete Pn[a]),i)4!==l.readyState&&l.abort();else{p={},s=l.status,u=l.getAllResponseHeaders(),\"string\"==typeof l.responseText&&(p.text=l.responseText);try{c=l.statusText}catch(f){c=\"\"}s||!n.isLocal||n.crossDomain?1223===s&&(s=204):s=p.text?200:404}}catch(d){i||o(-1,d)}p&&o(s,c,p,u)},n.async?4===l.readyState?setTimeout(r):(a=++Wn,$n&&(Pn||(Pn={},x(e).unload($n)),Pn[a]=r),l.onreadystatechange=r):r()},abort:function(){r&&r(t,!0)}}}});var Xn,Un,Vn=/^(?:toggle|show|hide)$/,Yn=RegExp(\"^(?:([+-])=|)(\"+w+\")([a-z%]*)$\",\"i\"),Jn=/queueHooks$/,Gn=[nr],Qn={\"*\":[function(e,t){var n=this.createTween(e,t),r=n.cur(),i=Yn.exec(t),o=i&&i[3]||(x.cssNumber[e]?\"\":\"px\"),a=(x.cssNumber[e]||\"px\"!==o&&+r)&&Yn.exec(x.css(n.elem,e)),s=1,l=20;if(a&&a[3]!==o){o=o||a[3],i=i||[],a=+r||1;do s=s||\".5\",a/=s,x.style(n.elem,e,a+o);while(s!==(s=n.cur()/r)&&1!==s&&--l)}return i&&(a=n.start=+a||+r||0,n.unit=o,n.end=i[1]?a+(i[1]+1)*i[2]:+i[2]),n}]};function Kn(){return setTimeout(function(){Xn=t}),Xn=x.now()}function Zn(e,t,n){var r,i=(Qn[t]||[]).concat(Qn[\"*\"]),o=0,a=i.length;for(;a>o;o++)if(r=i[o].call(n,t,e))return r}function er(e,t,n){var r,i,o=0,a=Gn.length,s=x.Deferred().always(function(){delete l.elem}),l=function(){if(i)return!1;var t=Xn||Kn(),n=Math.max(0,u.startTime+u.duration-t),r=n/u.duration||0,o=1-r,a=0,l=u.tweens.length;for(;l>a;a++)u.tweens[a].run(o);return s.notifyWith(e,[u,o,n]),1>o&&l?n:(s.resolveWith(e,[u]),!1)},u=s.promise({elem:e,props:x.extend({},t),opts:x.extend(!0,{specialEasing:{}},n),originalProperties:t,originalOptions:n,startTime:Xn||Kn(),duration:n.duration,tweens:[],createTween:function(t,n){var r=x.Tween(e,u.opts,t,n,u.opts.specialEasing[t]||u.opts.easing);return u.tweens.push(r),r},stop:function(t){var n=0,r=t?u.tweens.length:0;if(i)return this;for(i=!0;r>n;n++)u.tweens[n].run(1);return t?s.resolveWith(e,[u,t]):s.rejectWith(e,[u,t]),this}}),c=u.props;for(tr(c,u.opts.specialEasing);a>o;o++)if(r=Gn[o].call(u,e,c,u.opts))return r;return x.map(c,Zn,u),x.isFunction(u.opts.start)&&u.opts.start.call(e,u),x.fx.timer(x.extend(l,{elem:e,anim:u,queue:u.opts.queue})),u.progress(u.opts.progress).done(u.opts.done,u.opts.complete).fail(u.opts.fail).always(u.opts.always)}function tr(e,t){var n,r,i,o,a;for(n in e)if(r=x.camelCase(n),i=t[r],o=e[n],x.isArray(o)&&(i=o[1],o=e[n]=o[0]),n!==r&&(e[r]=o,delete e[n]),a=x.cssHooks[r],a&&\"expand\"in a){o=a.expand(o),delete e[r];for(n in o)n in e||(e[n]=o[n],t[n]=i)}else t[r]=i}x.Animation=x.extend(er,{tweener:function(e,t){x.isFunction(e)?(t=e,e=[\"*\"]):e=e.split(\" \");var n,r=0,i=e.length;for(;i>r;r++)n=e[r],Qn[n]=Qn[n]||[],Qn[n].unshift(t)},prefilter:function(e,t){t?Gn.unshift(e):Gn.push(e)}});function nr(e,t,n){var r,i,o,a,s,l,u=this,c={},p=e.style,f=e.nodeType&&nn(e),d=x._data(e,\"fxshow\");n.queue||(s=x._queueHooks(e,\"fx\"),null==s.unqueued&&(s.unqueued=0,l=s.empty.fire,s.empty.fire=function(){s.unqueued||l()}),s.unqueued++,u.always(function(){u.always(function(){s.unqueued--,x.queue(e,\"fx\").length||s.empty.fire()})})),1===e.nodeType&&(\"height\"in t||\"width\"in t)&&(n.overflow=[p.overflow,p.overflowX,p.overflowY],\"inline\"===x.css(e,\"display\")&&\"none\"===x.css(e,\"float\")&&(x.support.inlineBlockNeedsLayout&&\"inline\"!==ln(e.nodeName)?p.zoom=1:p.display=\"inline-block\")),n.overflow&&(p.overflow=\"hidden\",x.support.shrinkWrapBlocks||u.always(function(){p.overflow=n.overflow[0],p.overflowX=n.overflow[1],p.overflowY=n.overflow[2]}));for(r in t)if(i=t[r],Vn.exec(i)){if(delete t[r],o=o||\"toggle\"===i,i===(f?\"hide\":\"show\"))continue;c[r]=d&&d[r]||x.style(e,r)}if(!x.isEmptyObject(c)){d?\"hidden\"in d&&(f=d.hidden):d=x._data(e,\"fxshow\",{}),o&&(d.hidden=!f),f?x(e).show():u.done(function(){x(e).hide()}),u.done(function(){var t;x._removeData(e,\"fxshow\");for(t in c)x.style(e,t,c[t])});for(r in c)a=Zn(f?d[r]:0,r,u),r in d||(d[r]=a.start,f&&(a.end=a.start,a.start=\"width\"===r||\"height\"===r?1:0))}}function rr(e,t,n,r,i){return new rr.prototype.init(e,t,n,r,i)}x.Tween=rr,rr.prototype={constructor:rr,init:function(e,t,n,r,i,o){this.elem=e,this.prop=n,this.easing=i||\"swing\",this.options=t,this.start=this.now=this.cur(),this.end=r,this.unit=o||(x.cssNumber[n]?\"\":\"px\")},cur:function(){var e=rr.propHooks[this.prop];return e&&e.get?e.get(this):rr.propHooks._default.get(this)},run:function(e){var t,n=rr.propHooks[this.prop];return this.pos=t=this.options.duration?x.easing[this.easing](e,this.options.duration*e,0,1,this.options.duration):e,this.now=(this.end-this.start)*t+this.start,this.options.step&&this.options.step.call(this.elem,this.now,this),n&&n.set?n.set(this):rr.propHooks._default.set(this),this}},rr.prototype.init.prototype=rr.prototype,rr.propHooks={_default:{get:function(e){var t;return null==e.elem[e.prop]||e.elem.style&&null!=e.elem.style[e.prop]?(t=x.css(e.elem,e.prop,\"\"),t&&\"auto\"!==t?t:0):e.elem[e.prop]},set:function(e){x.fx.step[e.prop]?x.fx.step[e.prop](e):e.elem.style&&(null!=e.elem.style[x.cssProps[e.prop]]||x.cssHooks[e.prop])?x.style(e.elem,e.prop,e.now+e.unit):e.elem[e.prop]=e.now}}},rr.propHooks.scrollTop=rr.propHooks.scrollLeft={set:function(e){e.elem.nodeType&&e.elem.parentNode&&(e.elem[e.prop]=e.now)}},x.each([\"toggle\",\"show\",\"hide\"],function(e,t){var n=x.fn[t];x.fn[t]=function(e,r,i){return null==e||\"boolean\"==typeof e?n.apply(this,arguments):this.animate(ir(t,!0),e,r,i)}}),x.fn.extend({fadeTo:function(e,t,n,r){return this.filter(nn).css(\"opacity\",0).show().end().animate({opacity:t},e,n,r)},animate:function(e,t,n,r){var i=x.isEmptyObject(e),o=x.speed(t,n,r),a=function(){var t=er(this,x.extend({},e),o);(i||x._data(this,\"finish\"))&&t.stop(!0)};return a.finish=a,i||o.queue===!1?this.each(a):this.queue(o.queue,a)},stop:function(e,n,r){var i=function(e){var t=e.stop;delete e.stop,t(r)};return\"string\"!=typeof e&&(r=n,n=e,e=t),n&&e!==!1&&this.queue(e||\"fx\",[]),this.each(function(){var t=!0,n=null!=e&&e+\"queueHooks\",o=x.timers,a=x._data(this);if(n)a[n]&&a[n].stop&&i(a[n]);else for(n in a)a[n]&&a[n].stop&&Jn.test(n)&&i(a[n]);for(n=o.length;n--;)o[n].elem!==this||null!=e&&o[n].queue!==e||(o[n].anim.stop(r),t=!1,o.splice(n,1));(t||!r)&&x.dequeue(this,e)})},finish:function(e){return e!==!1&&(e=e||\"fx\"),this.each(function(){var t,n=x._data(this),r=n[e+\"queue\"],i=n[e+\"queueHooks\"],o=x.timers,a=r?r.length:0;for(n.finish=!0,x.queue(this,e,[]),i&&i.stop&&i.stop.call(this,!0),t=o.length;t--;)o[t].elem===this&&o[t].queue===e&&(o[t].anim.stop(!0),o.splice(t,1));for(t=0;a>t;t++)r[t]&&r[t].finish&&r[t].finish.call(this);delete n.finish})}});function ir(e,t){var n,r={height:e},i=0;for(t=t?1:0;4>i;i+=2-t)n=Zt[i],r[\"margin\"+n]=r[\"padding\"+n]=e;return t&&(r.opacity=r.width=e),r}x.each({slideDown:ir(\"show\"),slideUp:ir(\"hide\"),slideToggle:ir(\"toggle\"),fadeIn:{opacity:\"show\"},fadeOut:{opacity:\"hide\"},fadeToggle:{opacity:\"toggle\"}},function(e,t){x.fn[e]=function(e,n,r){return this.animate(t,e,n,r)}}),x.speed=function(e,t,n){var r=e&&\"object\"==typeof e?x.extend({},e):{complete:n||!n&&t||x.isFunction(e)&&e,duration:e,easing:n&&t||t&&!x.isFunction(t)&&t};return r.duration=x.fx.off?0:\"number\"==typeof r.duration?r.duration:r.duration in x.fx.speeds?x.fx.speeds[r.duration]:x.fx.speeds._default,(null==r.queue||r.queue===!0)&&(r.queue=\"fx\"),r.old=r.complete,r.complete=function(){x.isFunction(r.old)&&r.old.call(this),r.queue&&x.dequeue(this,r.queue)},r},x.easing={linear:function(e){return e},swing:function(e){return.5-Math.cos(e*Math.PI)/2}},x.timers=[],x.fx=rr.prototype.init,x.fx.tick=function(){var e,n=x.timers,r=0;for(Xn=x.now();n.length>r;r++)e=n[r],e()||n[r]!==e||n.splice(r--,1);n.length||x.fx.stop(),Xn=t},x.fx.timer=function(e){e()&&x.timers.push(e)&&x.fx.start()},x.fx.interval=13,x.fx.start=function(){Un||(Un=setInterval(x.fx.tick,x.fx.interval))},x.fx.stop=function(){clearInterval(Un),Un=null},x.fx.speeds={slow:600,fast:200,_default:400},x.fx.step={},x.expr&&x.expr.filters&&(x.expr.filters.animated=function(e){return x.grep(x.timers,function(t){return e===t.elem}).length}),x.fn.offset=function(e){if(arguments.length)return e===t?this:this.each(function(t){x.offset.setOffset(this,e,t)});var n,r,o={top:0,left:0},a=this[0],s=a&&a.ownerDocument;if(s)return n=s.documentElement,x.contains(n,a)?(typeof a.getBoundingClientRect!==i&&(o=a.getBoundingClientRect()),r=or(s),{top:o.top+(r.pageYOffset||n.scrollTop)-(n.clientTop||0),left:o.left+(r.pageXOffset||n.scrollLeft)-(n.clientLeft||0)}):o},x.offset={setOffset:function(e,t,n){var r=x.css(e,\"position\");\"static\"===r&&(e.style.position=\"relative\");var i=x(e),o=i.offset(),a=x.css(e,\"top\"),s=x.css(e,\"left\"),l=(\"absolute\"===r||\"fixed\"===r)&&x.inArray(\"auto\",[a,s])>-1,u={},c={},p,f;l?(c=i.position(),p=c.top,f=c.left):(p=parseFloat(a)||0,f=parseFloat(s)||0),x.isFunction(t)&&(t=t.call(e,n,o)),null!=t.top&&(u.top=t.top-o.top+p),null!=t.left&&(u.left=t.left-o.left+f),\"using\"in t?t.using.call(e,u):i.css(u)}},x.fn.extend({position:function(){if(this[0]){var e,t,n={top:0,left:0},r=this[0];return\"fixed\"===x.css(r,\"position\")?t=r.getBoundingClientRect():(e=this.offsetParent(),t=this.offset(),x.nodeName(e[0],\"html\")||(n=e.offset()),n.top+=x.css(e[0],\"borderTopWidth\",!0),n.left+=x.css(e[0],\"borderLeftWidth\",!0)),{top:t.top-n.top-x.css(r,\"marginTop\",!0),left:t.left-n.left-x.css(r,\"marginLeft\",!0)}}},offsetParent:function(){return this.map(function(){var e=this.offsetParent||s;while(e&&!x.nodeName(e,\"html\")&&\"static\"===x.css(e,\"position\"))e=e.offsetParent;return e||s})}}),x.each({scrollLeft:\"pageXOffset\",scrollTop:\"pageYOffset\"},function(e,n){var r=/Y/.test(n);x.fn[e]=function(i){return x.access(this,function(e,i,o){var a=or(e);return o===t?a?n in a?a[n]:a.document.documentElement[i]:e[i]:(a?a.scrollTo(r?x(a).scrollLeft():o,r?o:x(a).scrollTop()):e[i]=o,t)},e,i,arguments.length,null)}});function or(e){return x.isWindow(e)?e:9===e.nodeType?e.defaultView||e.parentWindow:!1}x.each({Height:\"height\",Width:\"width\"},function(e,n){x.each({padding:\"inner\"+e,content:n,\"\":\"outer\"+e},function(r,i){x.fn[i]=function(i,o){var a=arguments.length&&(r||\"boolean\"!=typeof i),s=r||(i===!0||o===!0?\"margin\":\"border\");return x.access(this,function(n,r,i){var o;return x.isWindow(n)?n.document.documentElement[\"client\"+e]:9===n.nodeType?(o=n.documentElement,Math.max(n.body[\"scroll\"+e],o[\"scroll\"+e],n.body[\"offset\"+e],o[\"offset\"+e],o[\"client\"+e])):i===t?x.css(n,r,s):x.style(n,r,i,s)},n,a?i:t,a,null)}})}),x.fn.size=function(){return this.length},x.fn.andSelf=x.fn.addBack,\"object\"==typeof module&&module&&\"object\"==typeof module.exports?module.exports=x:(e.jQuery=e.$=x,\"function\"==typeof define&&define.amd&&define(\"jquery\",[],function(){return x}))})(window);\n","src/autoselect/autoselect.js":"/**\r\n * 可更改内容的下拉选择框（仅限取明词，不适用取词选对象）\r\n */\r\nangular.module('xue.autoselect', ['xue.util.lang'])\r\n    .directive('xueAutoselect', ['xueUtilLang', function (xueUtilLang) {\r\n        return {\r\n            restrict: \"E\",\r\n            replace: true,\r\n            scope: {\r\n                selectConfig: '=',\r\n                ngDisabled: '=',\r\n                ngVal: '='\r\n            },\r\n            templateUrl: function (element, attrs) {\r\n                return attrs.templateUrl || \"xue/template/autoselect/autoselect.html\";\r\n            },\r\n            link: function (scope, ele, attrs) {\r\n                var selectCtrl = scope.selectCtrl = {\r\n                    selectClass: \"\",\r\n                    iptStyle: {},\r\n                    contentStyle: {},\r\n                    defaultConfig: {\r\n                        data: [],\r\n                        height: '28px', //输入框高度\r\n                        panelHeight: 'auto', //面板高度\r\n                        panelWidth: '180px', //面板以及输入框宽度\r\n                        showLimit: 50, //匹配前n条记录\r\n                        selectCallback: function () {}\r\n                    },\r\n                    watch: {\r\n                        init: function () {\r\n                            var self = this;\r\n                            $(\"body\")[0].addEventListener(\"click\", self.clickOtherArea);\r\n                        },\r\n                        clickOtherArea: function (e) {\r\n                            if ($(e.target).attr(\"class\") != \"xui-autoselect-wrap\" && $(e.target).parents(\".xui-autoselect-wrap\").length == 0 &&\r\n                                $(e.target).attr(\"id\") != scope.selectConfig.id && $(e.target).parents(\"#\" + scope.selectConfig.id).length == 0) {\r\n                                selectCtrl.hidePanel();\r\n                            }\r\n                        },\r\n                        focus: function (e) {\r\n                            var parent = selectCtrl;\r\n                            $(\".auto-select-content\").hide();\r\n                            parent.showPanel(e);\r\n                        },\r\n                        destroy: function () {\r\n                            var self = this;\r\n                            $(\"body\")[0].removeEventListener(\"click\", self.clickOtherArea);\r\n                        }\r\n                    },\r\n                    selectItem: function (item) {\r\n                        var flag = true;\r\n                        if (xueUtilLang.isFunction(scope.selectConfig.selectCallback)) {\r\n                            var ret = scope.selectConfig.selectCallback(item);\r\n                            if (typeof (ret) != \"undefined\" && !ret) {\r\n                                flag = false;\r\n                            }\r\n                        }\r\n                        if (flag) {\r\n                            scope.ngVal = item;\r\n                            selectCtrl.hidePanel();\r\n                        }\r\n                    },\r\n                    showPanel: function (e) {\r\n                        var panelEle = $('#' + scope.selectConfig.id);\r\n                        $('body').append(panelEle);\r\n                        var top = $(e.target).offset().top,\r\n                            left = $(e.target).offset().left,\r\n                            height = $(e.target).height();\r\n                        var eleHeight = panelEle.height(),\r\n                            screenHeight = $('body').height();\r\n                        var offsetTop = top + height + 2;\r\n                        if ((screenHeight - offsetTop) < eleHeight && offsetTop > eleHeight) {\r\n                            panelEle.css({\r\n                                'top': top - eleHeight - 2 + 'px',\r\n                                'left': left + 'px'\r\n                            });\r\n                        } else {\r\n                            panelEle.css({\r\n                                'top': offsetTop + 'px',\r\n                                'left': left + 'px'\r\n                            });\r\n                        }\r\n                        panelEle.show();\r\n                    },\r\n                    hidePanel: function () {\r\n                        var panelEle = $('#' + scope.selectConfig.id);\r\n                        if (panelEle.is(\":hidden\")) {\r\n                            return;\r\n                        }\r\n                        panelEle.hide();\r\n                    },\r\n                    init: function () {\r\n                        var self = this;\r\n                        scope.selectConfig = angular.extend(self.defaultConfig, scope.selectConfig);\r\n\r\n                        scope.selectConfig.id = new Date().getTime();\r\n\r\n                        self.selectClass = attrs.selectClass;\r\n                        self.contentStyle = {\r\n                            width: scope.selectConfig.panelWidth,\r\n                            height: scope.selectConfig.panelHeight\r\n                        };\r\n                        self.iptStyle = {\r\n                            width: scope.selectConfig.panelWidth,\r\n                            height: scope.selectConfig.height\r\n                        }\r\n                        self.watch.init();\r\n                    }\r\n                }\r\n                selectCtrl.init();\r\n\r\n                scope.$on(\"$destroy\", function () {\r\n                    var self = this;\r\n                    self.watch.destroy();\r\n                    $('#' + scope.selectConfig.id).remove();\r\n                });\r\n            }\r\n        }\r\n    }])","src/badge/badge.js":"angular.module('xue.badge', [])\r\n    .directive('xueBadge', [function () {\r\n        return {\r\n            restrict: \"E\",\r\n            replace: true,\r\n            scope: {\r\n                badgeConfig: '='\r\n            },\r\n            template: \"<div ng-show=\\\"badgeConfig.count\\\" class=\\\"xui-badge-wrap\\\" ng-class=\\\"{'dot':badgeConfig.isDot,'alone':badgeConfig.isAlone}\\\" ng-style=\\\"{'background-color':badgeConfig.bgColor}\\\">\\n\" +\r\n                \"   <span>{{badgeConfig.isDot?'':(badgeConfig.count>badgeConfig.max?badgeConfig.max+'+':badgeConfig.count)}}</span>\\n\" +\r\n                \"</div>\",\r\n            link: function (scope, ele, attrs) {\r\n                var defaultConfig = {\r\n                    bgColor: '#d92b2f', // 背景颜色，默认红色\r\n                    max: 99, //超出显示 99+\r\n                    isDot: false, //是否展示小圆点\r\n                    count: 0, // 显示值\r\n                    isAlone: false //是否单独使用\r\n                }\r\n                scope.badgeConfig = angular.extend(defaultConfig, scope.badgeConfig || {});\r\n            }\r\n        }\r\n    }])","src/cascader/cascader.js":"angular.module('xue.cascader', ['xue.util.lang', 'xue.util.array'])\r\n    .directive('xueCascader', [\"$http\", \"$q\", 'xueUtilLang', 'xueUtilArray', function ($http, $q, xueUtilLang, xueUtilArray) {\r\n        return {\r\n            restrict: 'E',\r\n            replace: true,\r\n            scope: {\r\n                cascaderConfig: '=',\r\n                ngVal: '=',\r\n                ngDisabled: '='\r\n            },\r\n            templateUrl: function (element, attrs) {\r\n                return attrs.templateUrl || 'xue/template/cascader/cascader.html';\r\n            },\r\n            link: function (scope, ele, attrs) {\r\n                var cascaderCtrl = scope.cascaderCtrl = {\r\n                    // areaUrl: 'assets/data/city.min.js',\r\n                    defaultConfig: {\r\n                        data: [],\r\n                        dataUrl: '', // 数据请求地址\r\n                        valueField: 'value', // 对应选项value值\r\n                        textField : 'label', // 显示在输入框中的字段名\r\n                        childName: 'children', // 选择框子列表字段名\r\n                        css: { // 自定义样式\r\n                            inputClassName: '', // 输入框样式类名\r\n                            inputStyle: {}, // 输入框样式\r\n                            panelClassName: '', // 选择框单列样式类名\r\n                            panelStyle: {} // 选择框单列样式\r\n                        },\r\n                        onSelect: function(){} //选择回调\r\n                    },\r\n                    // 数据索引\r\n                    dataMap: {},\r\n                    // 选择框列数据数组\r\n                    selectList: [],\r\n                    // 自定义类型 数据加载 异步对象\r\n                    delay: null,\r\n                    // 配置初始化\r\n                    init: function () {\r\n                        var self = this;\r\n                        scope.cascaderConfig = angular.extend(self.defaultConfig, scope.cascaderConfig || {});\r\n                        // 是否使用自定义类型\r\n                        if (scope.cascaderConfig.dataUrl) {\r\n                            self.delay = $q.defer();\r\n                            $http.get(scope.cascaderConfig.dataUrl).success(function(data) {\r\n                                self.initData(data, 0);\r\n                                return self.delay.resolve(data);\r\n                            }).error(function() {\r\n                                return self.delay.reject();\r\n                            });\r\n                        } else {\r\n                            self.initData(scope.cascaderConfig.data, 0);\r\n                        }\r\n                    },\r\n                    // 数据初始化\r\n                    initData: function (data, depth) {\r\n                        var self = this;\r\n                        self.selectList[depth] = [];\r\n                        angular.forEach(data, function(item) {\r\n                            item.depth = depth; // 层级\r\n                            self.dataMap[item[scope.cascaderConfig.textField]] = item;\r\n                            // 子列表递归处理\r\n                            if (item[scope.cascaderConfig.childName] && item[scope.cascaderConfig.childName].length) {\r\n                                self.initData(item[scope.cascaderConfig.childName], depth + 1);    \r\n                            } else {\r\n                                // 叶子项\r\n                                item.isLeaf = true;\r\n                            }\r\n                        })\r\n                        // 根列表赋值\r\n                        if (depth === 0) {\r\n                            scope.cascaderConfig.data = self.selectList[0] = data;\r\n                        }\r\n                    },\r\n                    // 根据selectValue获取列表数据\r\n                    getData: function (data, index) {\r\n                        var self = this;\r\n                        var valueIndex = xueUtilArray.findObjIndex(data, scope.cascaderConfig.valueField, self.selectValue[index])\r\n                        // 当前项存在且存在子列表\r\n                        if (valueIndex != -1 && !data[valueIndex].isLeaf) {\r\n                            // 子列表赋值\r\n                            self.selectList[index + 1] = data[valueIndex][scope.cascaderConfig.childName];\r\n                            // 递归处理\r\n                            if (self.selectValue[index + 1]) {\r\n                                self.getData(data[valueIndex][scope.cascaderConfig.childName], index + 1);\r\n                            }\r\n                        }\r\n                    },\r\n                    // 是否展示选择框\r\n                    showSelect: false,\r\n                    // 鼠标位置是否位于选择框上\r\n                    onSelectDiv: false,\r\n                    // 点击不位于选择框的区域隐藏选择框\r\n                    hideSelect: function () {\r\n                        if (!cascaderCtrl.onSelectDiv) {\r\n                            cascaderCtrl.showSelect = false;\r\n                            cascaderCtrl.resumeValue();\r\n                        }\r\n                    },\r\n                    // 展开/收缩 选择框\r\n                    toggleSelect: function(event) {\r\n                        var self = this;\r\n                        self.showSelect = !self.showSelect;\r\n                        if (!self.showSelect) {\r\n                            self.resumeValue();\r\n                        }\r\n                        event.stopPropagation();\r\n                    },\r\n                    // 选择框选择项数组\r\n                    selectValue: [],\r\n                    selectLabel: [],\r\n                    // 单击项\r\n                    clickItem: function (item) {\r\n                        var self = this;\r\n                        // 选择项数组赋值\r\n                        self.selectValue[item.depth] = item[scope.cascaderConfig.valueField];\r\n                        self.selectLabel[item.depth] = item[scope.cascaderConfig.textField];\r\n                        // 单击非叶子项\r\n                        if (!item.isLeaf) {\r\n                            self.selectList[item.depth + 1] = item[scope.cascaderConfig.childName];\r\n                        } else {\r\n                        // 单击叶子项\r\n                            self.selectValue = self.selectValue.slice(0, item.depth + 1);\r\n                            self.selectLabel = self.selectLabel.slice(0, item.depth + 1);\r\n                            self.selectList = self.selectList.slice(0, item.depth + 1);\r\n                            scope.ngVal = self.selectLabel.join(\"/\");\r\n                            self.showSelect = false;\r\n                            if (xueUtilLang.isFunction(scope.cascaderConfig.onSelect)){\r\n                                scope.cascaderConfig.onSelect(self.selectValue.join(\"/\"));\r\n                            }\r\n                        }\r\n                    },\r\n                    // 选择框 收缩时 数据恢复\r\n                    resumeValue: function () {\r\n                        var self = this;\r\n                        if (scope.ngVal) {\r\n                            if (self.selectLabel.join(\"/\") != scope.ngVal) {\r\n                                self.selectLabel = scope.ngVal.split(\"/\");\r\n                                angular.forEach(self.selectLabel, function (item, index) {\r\n                                    self.selectValue[index] = self.dataMap[item][scope.cascaderConfig.valueField];\r\n                                })\r\n                                self.selectList.length = self.selectValue.length;\r\n                                self.getData(scope.cascaderConfig.data, 0);\r\n                            }\r\n                        } else {\r\n                            self.selectValue = [];\r\n                            self.selectLabel = [];\r\n                            self.selectList.length = 1;\r\n                        }\r\n                    },\r\n                    // 清除选择项\r\n                    clear: function(event) {\r\n                        var self = this;\r\n                        scope.ngVal = \"\";\r\n                        self.selectValue = [];\r\n                        self.selectLabel = [];\r\n                        self.showSelect = false;\r\n                        self.selectList.length = 1;\r\n                        if (event) {\r\n                            event.stopPropagation();\r\n                        }\r\n                    }\r\n                }\r\n\r\n                document.addEventListener('click', cascaderCtrl.hideSelect);\r\n               \r\n                var unbindWatch = scope.$watch(\"ngVal\",function(newValue,oldValue){\r\n                    if (scope.ngVal) {\r\n                        var valueArr = newValue.split(\"/\");\r\n                        angular.forEach(valueArr, function(item, index) {\r\n                            cascaderCtrl.selectLabel[index] = item;\r\n                            cascaderCtrl.selectValue[index] = cascaderCtrl.dataMap[item][scope.cascaderConfig.valueField];\r\n                        })\r\n                        if (cascaderCtrl.selectValue.length) {\r\n                            if (scope.cascaderConfig.type) {\r\n                                cascaderCtrl.delay.promise.then(function(data) {\r\n                                    cascaderCtrl.getData(data, 0);    \r\n                                })\r\n                            } else {\r\n                                cascaderCtrl.getData(scope.cascaderConfig.data, 0);\r\n                            }\r\n                        }\r\n                    }\r\n                })\r\n\r\n                cascaderCtrl.init();\r\n\r\n                scope.$on(\"$destroy\", function() {\r\n                    document.removeEventListener('click', cascaderCtrl.hideSelect);\r\n                    unbindWatch();\r\n                })\r\n            }\r\n        }\r\n    }])","src/counter/counter.js":"angular.module('xue.counter', ['xue.util.lang'])\r\n    .directive('xueCounter', ['xueUtilLang', function (xueUtilLang) {\r\n        return {\r\n            restrict: \"E\",\r\n            replace: true,\r\n            scope: {\r\n                counterConfig: '=',\r\n                ngNumber: '=',\r\n                params: '='\r\n            },\r\n            templateUrl: function (element, attrs) {\r\n                return attrs.templateUrl || \"xue/template/counter/counter.html\";\r\n            },\r\n            link: function (scope) {\r\n                var gxCounterCtrl = scope.gxCounterCtrl = {\r\n                    number: \"\", //组件内部展示数据\r\n                    lastNumber: \"\", //记录上一次的更改数据\r\n                    stepDecimals: 0,\r\n                    defaultConfig: {\r\n                        type: 1, //支持两种模式：1：纯文本,2:input输入框\r\n                        max: 100, //最大值\r\n                        min: 0, //最小值\r\n                        step: 1, //数据每次加/减多少\r\n                        precision: 0, // 精度 默认为步进精度 不能小于步进精度 \r\n                        disabled: false, //是否是可操作状态\r\n                        required: true, //数据是否必填\r\n                        size: \"\", //计数器大小,默认为空,另有可选值large, small\r\n                        suffix: \"\", //数据后缀,如单位等\r\n                        trigger: \"change\", //触发changeCallback的时机,可选值blur,change,type为2时生效\r\n                        change: function () {}, //自定义change事件\r\n                        blur: function () {}, //自定义blur事件\r\n                        focus: function () {}, //自定义focus事件\r\n                        changeCallback: function () {} //数据改变回调\r\n                    },\r\n                    init: function () {\r\n                        var self = this;\r\n                        gxCounterCtrl.number = scope.ngNumber;\r\n                        gxCounterCtrl.lastNumber = scope.ngNumber;\r\n                        scope.counterConfig = angular.extend(self.defaultConfig, scope.counterConfig || {});\r\n                        gxCounterCtrl.countDecimals();\r\n                    },\r\n                    // 获取步进小数位数\r\n                    countDecimals: function () {\r\n                        if (Math.floor(scope.counterConfig.step) !== scope.counterConfig.step) {\r\n                            gxCounterCtrl.stepDecimals = scope.counterConfig.step.toString().split(\".\")[1].length || 0;\r\n                            if (scope.counterConfig.precision == 0) {\r\n                                scope.counterConfig.precision = gxCounterCtrl.stepDecimals;\r\n                            }\r\n                        }\r\n                    },\r\n                    changeByBtn: function (code) {\r\n                        if (scope.counterConfig.disabled && (gxCounterCtrl.stepDecimals > scope.counterConfig.precision)) {\r\n                            return;\r\n                        }\r\n                        gxCounterCtrl.number = Number(gxCounterCtrl.number);\r\n                        if (code == \"add\") {\r\n                            if (gxCounterCtrl.number == scope.counterConfig.max) {\r\n                                return;\r\n                            }\r\n                            gxCounterCtrl.number += scope.counterConfig.step;\r\n                            //若运算之后值大于最大值,则重置\r\n                            if (gxCounterCtrl.number > scope.counterConfig.max) {\r\n                                gxCounterCtrl.number = scope.counterConfig.max;\r\n                            }\r\n                            gxCounterCtrl.number = gxCounterCtrl.number.toFixed(scope.counterConfig.precision);\r\n                        } else {\r\n                            if (gxCounterCtrl.number == scope.counterConfig.min) {\r\n                                return;\r\n                            }\r\n                            gxCounterCtrl.number -= scope.counterConfig.step;\r\n                            //若运算之后值小于最小值,则重置\r\n                            if (gxCounterCtrl.number < scope.counterConfig.min) {\r\n                                gxCounterCtrl.number = scope.counterConfig.min;\r\n                            }\r\n                            gxCounterCtrl.number = gxCounterCtrl.number.toFixed(scope.counterConfig.precision);\r\n                        }\r\n                        //保留最后一次更改\r\n                        gxCounterCtrl.lastNumber = gxCounterCtrl.number;\r\n                        if (xueUtilLang.isFunction(scope.counterConfig.changeCallback)) {\r\n                            scope.counterConfig.changeCallback(gxCounterCtrl.number, scope.params);\r\n                        }\r\n                    },\r\n                    inputChange: function () {\r\n                        if (xueUtilLang.isFunction(scope.counterConfig.change)) {\r\n                            scope.counterConfig.change(gxCounterCtrl.number, scope.params);\r\n                        }\r\n                        if (scope.counterConfig.trigger == \"change\" && xueUtilLang.isFunction(scope.counterConfig.changeCallback)) {\r\n                            scope.counterConfig.changeCallback(gxCounterCtrl.number, scope.params);\r\n                        }\r\n                    },\r\n                    inputBlur: function () {\r\n                        //支持负值、空值、0及非0开头数字\r\n                        var reg = /^-?(0|[1-9][0-9]*)*$/;\r\n                        if (reg.test(gxCounterCtrl.number)) {\r\n                            if (scope.counterConfig.required && !gxCounterCtrl.number) {\r\n                                gxCounterCtrl.number = gxCounterCtrl.lastNumber == \"-\" ? scope.counterConfig.min : gxCounterCtrl.lastNumber;\r\n                            } else if (gxCounterCtrl.number > scope.counterConfig.max) {\r\n                                gxCounterCtrl.number = scope.counterConfig.max;\r\n                            } else if (gxCounterCtrl.number < scope.counterConfig.min) {\r\n                                gxCounterCtrl.number = scope.counterConfig.min;\r\n                            }\r\n                        } else {\r\n                            //不符合规则的值重置为上一次更改的值\r\n                            gxCounterCtrl.number = gxCounterCtrl.lastNumber;\r\n                        }\r\n                        gxCounterCtrl.lastNumber = gxCounterCtrl.number;\r\n                        if (xueUtilLang.isFunction(scope.counterConfig.blur)) {\r\n                            scope.counterConfig.blur(gxCounterCtrl.number, scope.params);\r\n                        }\r\n                        if (scope.counterConfig.trigger == \"blur\" && xueUtilLang.isFunction(scope.counterConfig.changeCallback)) {\r\n                            scope.counterConfig.changeCallback(gxCounterCtrl.number, scope.params);\r\n                        }\r\n                    },\r\n                    inputFocus: function () {\r\n                        if (xueUtilLang.isFunction(scope.counterConfig.focus)) {\r\n                            scope.counterConfig.focus(gxCounterCtrl.number, scope.params);\r\n                        }\r\n                    }\r\n                }\r\n                gxCounterCtrl.init();\r\n                //监听外部传入的值\r\n                scope.ngNumberWatcher = scope.$watch(\"ngNumber\", function (newVal) {\r\n                    if (typeof (newVal) != 'undefined') {\r\n                        gxCounterCtrl.number = newVal;\r\n                        gxCounterCtrl.lastNumber = newVal;\r\n                    }\r\n                });\r\n                scope.$on('$destroy', function () {\r\n                    scope.ngNumberWatcher();\r\n                });\r\n            }\r\n        }\r\n    }])","src/datepicker/datepicker.js":"angular.module('xue.datepicker', ['xue.util.date', 'xue.util.lang'])\r\n    .directive('xueDatepicker', ['xueUtilDate', 'xueUtilLang', function (xueUtilDate, xueUtilLang) {\r\n        return {\r\n            restrict: 'E',\r\n            replace: true,\r\n            scope: {\r\n                dateConfig: '=',\r\n                ngVal: '=',\r\n                minDate: '=',\r\n                maxDate: '=',\r\n                ngDisabled: '='\r\n            },\r\n            templateUrl: function (element, attrs) {\r\n                return attrs.templateUrl || 'xue/template/datepicker/datepicker.html'\r\n            },\r\n            link: function(scope,ele,attrs){\r\n\r\n                var xlDatepickerCtrl = scope.xlDatepickerCtrl = {\r\n                    // 默认配置\r\n                    defaultConfig: {\r\n                        id: '',\r\n                        theme: 'deep-blue',\r\n                        element: {\r\n                            type: 'input',\r\n                            targetWrapClassName: \"\",\r\n                            targetWrapStyle: {},\r\n                            contentWrapClassName: \"\",\r\n                            contentWrapStyle: {}\r\n                        },\r\n                        format: 'YYYY-MM-DD', // 支持：1、YYYY-MM-DD 2、YYYY-MM-DD hh:mm:ss 3、hh:mm:ss 4、hh:mm\r\n                        timeSelectMode: 0, // 0：自由选择 1：快速选择（hh:mm格式）\r\n                        minDate: '',\r\n                        maxDate: '',\r\n                        fixedMinDate: \"\",\r\n                        fixedMaxDate: \"\",\r\n                        language: {\r\n                            month : [\"01\", \"02\", \"03\", \"04\", \"05\", \"06\", \"07\", \"08\", \"09\", \"10\", \"11\", \"12\"],\r\n                            weeks : [ \"日\", \"一\", \"二\", \"三\", \"四\", \"五\", \"六\" ],\r\n                            times : [\"时\",\"分\",\"秒\"],\r\n                            titText: \"请选择日期时间\",\r\n                            clear : \"清空\",\r\n                            today : \"今天\",\r\n                            yes   : \"确定\",\r\n                            close : \"关闭\"\r\n                        },\r\n                        fixed: false,\r\n                        multiPanel: false,\r\n                        autoClose: false,\r\n                        range: null,\r\n                        showTime: true,\r\n                        showClear: true,\r\n                        showNow: true,\r\n                        showFestival: false,\r\n                        marks: null,\r\n                        nowCallback: function(){},\r\n                        confirmCallback: function(){},\r\n                        clearCallback: function(){},\r\n                        closeCallback: function(){}\r\n                    },\r\n\r\n                    //0（默认）：日期 1：时间和日期 2：时间 3：时分\r\n                    type: 0, \r\n                    id: \"\",\r\n\r\n                    // 日期面板操作\r\n                    showTimePicker: false,\r\n                    optPanel: function(e){\r\n                        var self = this;\r\n                        $(\".xl-datepicker-content\").hide();\r\n                        $(\".xl-timepicker-content\").hide();\r\n                        var top = $(e.target).offset().top,\r\n                            left = $(e.target).offset().left,\r\n                            height = $(e.target).height(),\r\n                            width = $(e.target).parent().outerWidth();\r\n                        self.showPanel(top,left,height,width);\r\n                    },\r\n                    showPanel: function(top,left,height,width){\r\n                        var self = this;\r\n                        var panelEle = $('#'+xlDatepickerCtrl.id);\r\n                        $('body').append(panelEle);\r\n                        var eleHeight = panelEle.height(),screenHeight = $('body').height();\r\n                        var offsetTop = top + height + 15;\r\n                        var finalLeft = left - 19;\r\n                        if(finalLeft + panelEle.width() > $('body').width()){\r\n                            finalLeft = finalLeft - (panelEle.width() - width);\r\n                            panelEle.find(\".xl-popper-arrow\").addClass(\"arrow-right\");\r\n                        }else{\r\n                            panelEle.find(\".xl-popper-arrow\").removeClass(\"arrow-right\");\r\n                        }\r\n                        if((screenHeight-offsetTop) < eleHeight && offsetTop > eleHeight){\r\n                            panelEle.css({\r\n                                'top': top - eleHeight - 10 + 'px',\r\n                                'left': finalLeft + 'px'\r\n                            });\r\n                            panelEle.find(\".xl-popper-arrow\").addClass(\"arrow-bottom\");\r\n                        }else{\r\n                            panelEle.css({\r\n                                'top': offsetTop + 'px',\r\n                                'left': finalLeft + 'px'\r\n                            });\r\n                            panelEle.find(\".xl-popper-arrow\").removeClass(\"arrow-bottom\");\r\n                        }\r\n                        panelEle.show();\r\n                        self.isShowPanel = true;\r\n                    },\r\n                    hidePanel: function(){\r\n                        var self = this;\r\n                        var panelEle = $('#'+xlDatepickerCtrl.id);\r\n                        if(panelEle.is(\":hidden\")){\r\n                            return;\r\n                        }\r\n                        panelEle.hide();\r\n                        self.isShowPanel = false;\r\n                        self.timeOpt.showPanel = false;\r\n                        switch(self.type){\r\n                            case 2: \r\n                                if(!xueUtilDate.checkTimeFormat(scope.ngVal)){\r\n                                    scope.ngVal = \"00:00:00\";\r\n                                }\r\n                                break;\r\n                            case 3: \r\n                                if(!xueUtilDate.checkTimeFormat(scope.ngVal+\":00\")){\r\n                                    scope.ngVal = \"00:00\";\r\n                                }\r\n                                break;\r\n                            default: \r\n                                if(xueUtilDate.checkDateFormat(scope.ngVal) || xueUtilDate.checkDateTimeFormat(scope.ngVal)){\r\n                                    xlDatepickerCtrl.selectedDate.year = parseInt(scope.ngVal.substring(0,4), 10);\r\n                                    xlDatepickerCtrl.selectedDate.month = parseInt(scope.ngVal.substring(5,7), 10);\r\n                                    xlDatepickerCtrl.selectedDate.day = parseInt(scope.ngVal.substring(8,10), 10);\r\n                                }else{\r\n                                    scope.ngVal = \"\";\r\n                                }\r\n                                break;\r\n                        }\r\n                        \r\n                        if(xueUtilLang.isFunction(scope.dateConfig.closeCallback)){\r\n                            scope.dateConfig.closeCallback(scope.ngVal);\r\n                        }\r\n                    },\r\n                    getDayCountByYearMonth: function(year,month){\r\n                        var dayCount = 0,isLeapYear = false;\r\n                        if(year%100 == 0){\r\n                            if(year%400 == 0){\r\n                                isLeapYear = true;\r\n                            }\r\n                        }else{\r\n                            if(year%4 == 0){\r\n                                isLeapYear = true;\r\n                            }\r\n                        }\r\n                        switch(month){\r\n                            case 2: if(isLeapYear){dayCount = 29;}else{dayCount = 28;} break;\r\n                            case 1: case 3: case 5: case 7: case 8: case 10: case 12: dayCount = 31; break;\r\n                            case 4: case 6: case 9: case 11: dayCount = 30; break;\r\n                        }\r\n                        return dayCount;\r\n                    },\r\n                    \r\n                    // 年月选择\r\n                    currentYear: '',\r\n                    currentMonth: '',\r\n                    showSelectYear: false,\r\n                    showSelectMonth: false,\r\n                    selectYearMonth: function($event,type){\r\n                        var self = this;\r\n                        self.currentYear = parseInt(self.currentYear, 10);\r\n                        self.currentMonth = parseInt(self.currentMonth, 10);\r\n                        if(type == 'year'){\r\n                            self.showSelectYear = true;\r\n                        }\r\n                        if(type == 'month'){\r\n                            self.showSelectMonth = true;\r\n                        }\r\n                        window.setTimeout(function(){\r\n                            $($event.target).next().find('input').focus();\r\n                            $($event.target).next().find('input').on('mousewheel',function(event){\r\n                                if(event.originalEvent.wheelDelta && event.originalEvent.wheelDelta>0){\r\n                                    if(type == 'year'){\r\n                                        self.currentYear++;\r\n                                    }\r\n                                    if(type == 'month' && self.currentMonth<12){\r\n                                        self.currentMonth++;\r\n                                    }\r\n                                }\r\n                                if(event.originalEvent.wheelDelta && event.originalEvent.wheelDelta<0){\r\n                                    if(type == 'year' && self.currentYear>1){\r\n                                        self.currentYear--;\r\n                                    }\r\n                                    if(type == 'month' && self.currentMonth>1){\r\n                                        self.currentMonth--;\r\n                                    }\r\n                                }\r\n                            });\r\n                        });\r\n                    },\r\n                    selectYearMonthBlur: function($event,type){\r\n                        var self = this;\r\n                        if(type == 'year'){\r\n                            self.showSelectYear = false;\r\n                        }\r\n                        if(type == 'month'){\r\n                            self.showSelectMonth = false;\r\n                        }\r\n                        if(!(/^[+]{0,1}(\\d+)$/.test(self.currentYear)) || self.currentYear < 0){\r\n                            self.currentYear = parseInt(new Date().getFullYear(), 10);\r\n                        }\r\n                        if(!(/^[+]{0,1}(\\d+)$/.test(self.currentMonth)) || self.currentMonth<1 || self.currentMonth>12){\r\n                            self.currentMonth = parseInt(new Date().getMonth(), 10)+1;\r\n                        }\r\n                        self.composeTable(self.currentYear,self.currentMonth);\r\n                        $($event.target).off('mousewheel');\r\n                    },\r\n\r\n                    // 日期选择\r\n                    showDate: '',\r\n                    currentDate: {\r\n                        year: null,\r\n                        month: null,\r\n                        day: null\r\n                    },\r\n                    selectedDate: {\r\n                        year: null,\r\n                        month: null,\r\n                        day: null\r\n                    },\r\n                    selectDate: function(list,e){\r\n                        // 防止冒泡，冒泡后获取的parents停止在这一层级，上升不到body\r\n                        if (window.event) {\r\n                            window.event.cancelBubble = true;\r\n                        } else {\r\n                            e.stopPropagation();\r\n                        }\r\n                        var self = this;\r\n                        if(self.notInRange(list)){\r\n                            return;\r\n                        }\r\n                        self.selectedDate.year = list.year;\r\n                        self.selectedDate.month = list.month;\r\n                        self.selectedDate.day = list.day;\r\n                        self.showDate = self.formatDateFromObj(self.selectedDate);\r\n                        self.changeNgVal();\r\n                        if(list.type == -1){\r\n                            if(parseInt(self.currentMonth, 10)<2 ){\r\n                                self.currentYear = parseInt(self.currentYear, 10)-1;\r\n                                self.currentMonth = 12;\r\n                            }else{\r\n                                self.currentMonth = parseInt(self.currentMonth, 10)-1;\r\n                            }\r\n                            self.composeTable(self.currentYear,self.currentMonth);\r\n                        }\r\n                        if(list.type == 1){\r\n                            if(parseInt(self.currentMonth, 10)>11){\r\n                                self.currentYear = parseInt(self.currentYear, 10)+1;\r\n                                self.currentMonth = 1;\r\n                            }else{\r\n                                self.currentMonth = parseInt(self.currentMonth, 10)+1;\r\n                            }\r\n                            self.composeTable(self.currentYear,self.currentMonth);\r\n                        }\r\n                        if(self.type == 0){\r\n                            self.hidePanel();\r\n                        }\r\n                    },\r\n                    formatDateFromObj: function(obj){\r\n                        if(obj.year && obj.month && obj.day){\r\n                            var year = obj.year,month = '',day = '';\r\n                            month = obj.month < 10 ? '0'+obj.month : obj.month;\r\n                            day = obj.day < 10 ? '0'+obj.day : obj.day;\r\n                            return year+'-'+month+'-'+day;\r\n                        }else{\r\n                            return xueUtilDate.getCurrentFmtDate(\"YYYY-MM-DD\");\r\n                        }\r\n                        \r\n                    },\r\n                    notInRange: function(list){\r\n                        var self = this;\r\n                        var theDate = self.formatDateFromObj(list);\r\n                        var maxDate = xueUtilDate.checkDateTimeFormat(scope.dateConfig.maxDate) ? scope.dateConfig.maxDate.split(\" \")[0] :\r\n                                xueUtilDate.checkDateFormat(scope.dateConfig.maxDate) ? scope.dateConfig.maxDate : \"\";\r\n                        if(scope.dateConfig.fixedMaxDate && (xueUtilDate.checkDateTimeFormat(scope.dateConfig.fixedMaxDate) || xueUtilDate.checkDateFormat(scope.dateConfig.fixedMaxDate))){\r\n                            var fixedMaxDate = scope.dateConfig.fixedMaxDate.split(\" \")[0];\r\n                            if(!maxDate || xueUtilDate.maxDate([fixedMaxDate, maxDate]) == maxDate){\r\n                                maxDate = fixedMaxDate;\r\n                            }\r\n                        }\r\n                        if(maxDate){\r\n                            if(xueUtilDate.maxDate([theDate, maxDate]) == theDate){\r\n                                return true;\r\n                            }\r\n                        }\r\n                        var minDate = xueUtilDate.checkDateTimeFormat(scope.dateConfig.minDate) ? scope.dateConfig.minDate.split(\" \")[0] :\r\n                        xueUtilDate.checkDateFormat(scope.dateConfig.minDate) ? scope.dateConfig.minDate : \"\";\r\n                        if(scope.dateConfig.fixedMinDate && (xueUtilDate.checkDateTimeFormat(scope.dateConfig.fixedMinDate) || xueUtilDate.checkDateFormat(scope.dateConfig.fixedMinDate))){\r\n                            var fixedMinDate = scope.dateConfig.fixedMinDate.split(\" \")[0];\r\n                            if(!minDate || xueUtilDate.maxDate([fixedMinDate, minDate]) == fixedMinDate){\r\n                                minDate = fixedMinDate;\r\n                            }\r\n                        }\r\n                        if(minDate){\r\n                            if(xueUtilDate.maxDate([theDate, minDate]) == minDate){\r\n                                return true;\r\n                            }\r\n                        }\r\n                        return false;\r\n                    },\r\n\r\n                    // 时间选择\r\n                    showTime: \"\",\r\n                    timeOpt: {\r\n                        showPanel: false,\r\n                        hourObj: {\r\n                            index: 0,\r\n                            items: []\r\n                        },\r\n                        minuteObj: {\r\n                            index: 0,\r\n                            items: []\r\n                        },\r\n                        secondObj: {\r\n                            index: 0,\r\n                            items: []\r\n                        },\r\n                        init: function(){\r\n                            var self = this;\r\n                            self.hourObj.items = self.getSeriesByNumBer(23);\r\n                            self.minuteObj.items = self.getSeriesByNumBer(59);\r\n                            self.secondObj.items = self.getSeriesByNumBer(59);\r\n                            window.setTimeout(function(){\r\n                                $('#'+xlDatepickerCtrl.id).find('.time-scrollbar ul').on('mousewheel',function(e){\r\n                                    var id = $(e.target).parents(\".time-scrollbar\").find(\"ul\").attr(\"id\");\r\n                                    if(xlDatepickerCtrl.type == 3 && id == \"secondObj\"){\r\n                                        return;\r\n                                    }\r\n                                    if(e.originalEvent.wheelDelta && e.originalEvent.wheelDelta>0){\r\n                                        if(self[id].index > 0){\r\n                                            self[id].index--;\r\n                                            self.indexToShowTime();\r\n                                        }\r\n                                    }\r\n                                    if(e.originalEvent.wheelDelta && e.originalEvent.wheelDelta<0){\r\n                                        var maxNumber = id == \"hourObj\" ? 23 : 59;\r\n                                        if(self[id].index < maxNumber){\r\n                                            self[id].index++;\r\n                                            self.indexToShowTime();\r\n                                        }\r\n                                    }\r\n                                });\r\n                            },500);\r\n                        },\r\n                        getSeriesByNumBer: function(number){\r\n                            var array = [];\r\n                            for(var i = 0; i <= number; i++){\r\n                                var temp = \"\";\r\n                                if(i<10){\r\n                                    temp = \"0\"+i;\r\n                                }else{\r\n                                    temp = \"\"+i;\r\n                                }\r\n                                array.push(temp);\r\n                            }\r\n                            return array;\r\n                        },\r\n                        dealTimeNumber: function(number){\r\n                            return number < 10 ? \"0\" + number : number;\r\n                        },\r\n                        showTimeToIndex: function(){\r\n                            var self = this;\r\n                            var timeArray = xlDatepickerCtrl.showTime.split(\":\");\r\n                            if(xlDatepickerCtrl.type == 1 || xlDatepickerCtrl.type == 2){\r\n                                if(!xueUtilDate.checkTimeFormat(xlDatepickerCtrl.showTime)){\r\n                                    xlDatepickerCtrl.showTime = \"00:00:00\";\r\n                                    xlDatepickerCtrl.changeNgVal();\r\n                                }\r\n                                self.hourObj.index = parseInt(timeArray[0], 10);\r\n                                self.minuteObj.index = parseInt(timeArray[1], 10);\r\n                                self.secondObj.index = parseInt(timeArray[2], 10);\r\n                            }\r\n                            if(xlDatepickerCtrl.type == 3){\r\n                                if(!xueUtilDate.checkTimeFormat(xlDatepickerCtrl.showTime+\":00\")){\r\n                                    xlDatepickerCtrl.showTime = \"00:00\";\r\n                                    xlDatepickerCtrl.changeNgVal();\r\n                                }\r\n                                self.hourObj.index = parseInt(timeArray[0], 10);\r\n                                self.minuteObj.index = parseInt(timeArray[1], 10);\r\n                            }\r\n                        },\r\n                        indexToShowTime: function(){\r\n                            var self = this;\r\n                            if(xlDatepickerCtrl.type == 1 || xlDatepickerCtrl.type == 2){\r\n                                xlDatepickerCtrl.showTime = self.dealTimeNumber(self.hourObj.index) + \":\" \r\n                                + self.dealTimeNumber(self.minuteObj.index) + \":\" \r\n                                + self.dealTimeNumber(self.secondObj.index);\r\n                            }\r\n                            if(xlDatepickerCtrl.type == 3){\r\n                                xlDatepickerCtrl.showTime = self.dealTimeNumber(self.hourObj.index) + \":\" \r\n                                + self.dealTimeNumber(self.minuteObj.index);\r\n                            }\r\n                            xlDatepickerCtrl.changeNgVal();\r\n                        },\r\n                        optTimePanel: function(){\r\n                            var self = this;\r\n                            self.showPanel = !self.showPanel;\r\n                            if(self.showPanel && !xlDatepickerCtrl.showTime){\r\n                                xlDatepickerCtrl.showTime = xueUtilDate.getCurrentFmtDate(\"hh:mm:ss\");\r\n                                xlDatepickerCtrl.changeNgVal();\r\n                                self.showTimeToIndex();\r\n                            }\r\n                        },\r\n                        clickNumber: function(obj,index,type){\r\n                            var self = this;\r\n                            if(xlDatepickerCtrl.type ==3 && type && type == \"secondObj\"){\r\n                                return;\r\n                            }\r\n                            obj.index = index;\r\n                            self.indexToShowTime();\r\n                        },\r\n                        confirm: function(){\r\n                            var self = this;\r\n                            self.showPanel = false;\r\n                        },\r\n                        destroy: function(){\r\n                            $('#'+xlDatepickerCtrl.id).find('.time-scrollbar ul').off('mousewheel');\r\n                        }\r\n                    },\r\n\r\n                    // 日期表格渲染\r\n                    currentTable: [],\r\n                    composeTable: function(year,month){\r\n                        year = parseInt(year, 10);\r\n                        month = parseInt(month, 10);\r\n                        var self = this;\r\n                        self.currentTable = [];\r\n                        var tableArr = [];\r\n                        var firstWeek = new Date(year+'/'+month+'/1').getDay();\r\n                        var dayCount = self.getDayCountByYearMonth(year,month);\r\n                        var finalWeek = new Date(year+'/'+month+'/'+dayCount).getDay();\r\n                        var lastDayCount = self.getDayCountByYearMonth(month>1?year:year-1,month>1?month-1:12);\r\n                        for(var a=1; a<=firstWeek; a++){\r\n                            tableArr.push({\r\n                                type: -1,\r\n                                year: month>1?year:year-1,\r\n                                month: month>1?month-1:12,\r\n                                day: lastDayCount-(firstWeek-a)\r\n                            });\r\n                        }\r\n                        for(var b=1; b<=dayCount; b++){\r\n                            tableArr.push({\r\n                                type: 0,\r\n                                year: year,\r\n                                month: month,\r\n                                day: b\r\n                            });\r\n                        }\r\n                        for(var c=finalWeek+1,j=1; c<=6; c++,j++){\r\n                            tableArr.push({\r\n                                type: 1,\r\n                                year: month<12?year:year+1,\r\n                                month: month<12?month+1:1,\r\n                                day: j\r\n                            });\r\n                        }\r\n                        for(var d= 0; d<tableArr.length; d+=7){\r\n                            self.currentTable.push(tableArr.slice(d,d+7));\r\n                        }\r\n                    },\r\n                    changeYearMonth: function(plusYear,plusMonth){\r\n                        var self = this;\r\n                        self.currentYear = parseInt(self.currentYear, 10);\r\n                        self.currentMonth = parseInt(self.currentMonth, 10);\r\n                        self.currentYear = self.currentYear+plusYear;\r\n                        if(self.currentMonth+plusMonth>12){\r\n                            self.currentMonth = 1;\r\n                            self.currentYear++;\r\n                        }else if(self.currentMonth+plusMonth<1){\r\n                            self.currentMonth = 12;\r\n                            self.currentYear--;\r\n                        }else{\r\n                            self.currentMonth += plusMonth;\r\n                        }\r\n                        self.composeTable(self.currentYear,self.currentMonth);\r\n                    },\r\n\r\n                    // 操作\r\n                    changeNgVal: function(){\r\n                        var self = this;\r\n                        if(self.showDate && xueUtilDate.checkDateFormat(self.showDate)){\r\n                            if(!self.judgeInRange(self.showDate)){\r\n                                return;\r\n                            }\r\n                        }else{\r\n                            self.showDate = self.formatDateFromObj(self.selectedDate);\r\n                        }\r\n                        if(self.type == 3){\r\n                            if(self.showTime && !xueUtilDate.checkTimeFormat(self.showTime+\":00\")){\r\n                                self.showTime = \"00:00\";\r\n                            }\r\n                        }else{\r\n                            if(self.showTime && !xueUtilDate.checkTimeFormat(self.showTime)){\r\n                                self.showTime = \"00:00:00\";\r\n                            }\r\n                        }\r\n                        if(self.type == 0){\r\n                            scope.ngVal = self.showDate;\r\n                        }\r\n                        if(self.type == 1){\r\n                            if(!self.showTime){\r\n                                self.showTime = \"00:00:00\";\r\n                                self.timeOpt.showTimeToIndex();\r\n                            }\r\n                            scope.ngVal = self.showDate + \" \" + self.showTime;\r\n                        }\r\n                        if(self.type == 2 || self.type == 3){\r\n                            scope.ngVal = self.showTime;\r\n                        }\r\n                    },\r\n                    judgeInRange: function(date){\r\n                        var self = this;\r\n                        if(xueUtilDate.checkDateFormat(date) || xueUtilDate.checkDateTimeFormat(date)){\r\n                            var list = {\r\n                                year: date.substring(0,4),\r\n                                month: date.substring(5,7),\r\n                                day: date.substring(8,10)\r\n                            };\r\n                            if(self.notInRange(list)){\r\n                                /* modalExt.modalTip({\r\n                                    type: \"warning\",\r\n                                    content: \"不在可选日期范围内！\",\r\n                                    height: 150\r\n                                }); */\r\n                                return false;\r\n                            }else{\r\n                                return true;\r\n                            }\r\n                        }\r\n                    },\r\n                    ngValBlur: function(){\r\n                        var self = this;\r\n                        if(self.type == 0 && !xueUtilDate.checkDateFormat(scope.ngVal)){\r\n                            scope.ngVal = self.showDate;\r\n                        }\r\n                        if(self.type == 1 && !xueUtilDate.checkDateTimeFormat(scope.ngVal)){\r\n                            scope.ngVal = self.showDate + \" \"+ self.showTime;\r\n                            if(!xueUtilDate.checkDateTimeFormat(scope.ngVal)){\r\n                                scope.ngVal = \"\";\r\n                            }\r\n                        }\r\n                        if(self.type == 2 && !xueUtilDate.checkTimeFormat(scope.ngVal)){\r\n                            scope.ngVal = \"00:00:00\";\r\n                            self.showTime = \"00:00:00\";\r\n                            self.timeOpt.showTimeToIndex();\r\n                        }\r\n                        if(self.type == 3 && !xueUtilDate.checkTimeFormat(scope.ngVal+\":00\")){\r\n                            scope.ngVal = \"00:00\";\r\n                            self.showTime = \"00:00:00\";\r\n                            self.timeOpt.showTimeToIndex();\r\n                        }\r\n                    },\r\n                    getNow: function(){\r\n                        var self = this;\r\n                        var today = xueUtilDate.getCurrentFmtDate(\"YYYY-MM-DD\");\r\n                        if(!self.judgeInRange(today)){\r\n                            return;\r\n                        }\r\n                        if(self.type == 0){\r\n                            var date = today;\r\n                            scope.ngVal = date;\r\n                        }\r\n                        if(self.type == 1){\r\n                            var dateTime = xueUtilDate.getCurrentFmtDate(\"YYYY-MM-DD\");\r\n                            scope.ngVal = dateTime;\r\n                        }\r\n                        self.hidePanel();\r\n                        if(xueUtilLang.isFunction(scope.dateConfig.nowCallback)){\r\n                            scope.dateConfig.nowCallback(scope.ngVal);\r\n                        }\r\n                    },\r\n                    confirm: function(){\r\n                        var self = this;\r\n                        self.hidePanel();\r\n                        if(xueUtilLang.isFunction(scope.dateConfig.confirmCallback)){\r\n                            scope.dateConfig.confirmCallback(scope.ngVal);\r\n                        }\r\n                    },\r\n                    clear: function(){\r\n                        if(self.type == 2){\r\n                            scope.ngVal = \"00:00:00\";\r\n                        }else{\r\n                            scope.ngVal = \"\";\r\n                            xlDatepickerCtrl.selectedDate = {\r\n                                year: null,\r\n                                month: null,\r\n                                day: null\r\n                            };\r\n                        }\r\n                        if(xueUtilLang.isFunction(scope.dateConfig.clearCallback)){\r\n                            scope.dateConfig.clearCallback();\r\n                        }\r\n                    },\r\n                    \r\n                    //监听\r\n                    watch: {\r\n                        ngValWatcher: null,\r\n                        minDateWatcher: null,\r\n                        maxDateWatcher: null,\r\n                        init: function(){\r\n                            var self = this;\r\n                            $(\"body\")[0].addEventListener(\"click\",self.clickOtherArea);\r\n                            self.watchNgVal();\r\n                            self.watchMinDate();\r\n                            self.watchMaxDate();\r\n                        },\r\n                        watchNgVal: function(){\r\n                            var self = this, parent = xlDatepickerCtrl;\r\n                            self.ngValWatcher = scope.$watch(\"ngVal\",function(newVal){\r\n                                if(parent.type == 0){\r\n                                    if(!newVal){\r\n                                        parent.showDate = newVal;\r\n                                        parent.composeTable(parent.currentYear,parent.currentMonth);\r\n                                    }\r\n                                    if(xueUtilDate.checkDateFormat(newVal)){\r\n                                        if(!parent.judgeInRange(newVal)){\r\n                                            scope.ngVal = parent.showDate;\r\n                                            return;\r\n                                        }\r\n                                        parent.showDate = newVal;\r\n                                        parent.selectedDate.year = parent.currentYear = parseInt(newVal.substring(0,4), 10);\r\n                                        parent.selectedDate.month = parent.currentMonth = parseInt(newVal.substring(5,7), 10);\r\n                                        parent.selectedDate.day = parseInt(newVal.substring(8,10), 10);\r\n                                        parent.composeTable(parent.currentYear,parent.currentMonth);\r\n                                    }\r\n                                }\r\n                                if(parent.type == 1){\r\n                                    if(!newVal){\r\n                                        parent.showDate = \"\";\r\n                                        parent.showTime = \"\";\r\n                                        parent.timeOpt.showPanel = false;\r\n                                        parent.composeTable(parent.currentYear,parent.currentMonth);\r\n                                    }\r\n                                    if(xueUtilDate.checkDateTimeFormat(newVal)){\r\n                                        if(!parent.judgeInRange(newVal.split(\" \")[0])){\r\n                                            scope.ngVal = parent.showDate + \" \" +parent.showTime;\r\n                                            return;\r\n                                        }\r\n                                        parent.showDate = newVal.split(\" \")[0];\r\n                                        parent.showTime = newVal.split(\" \")[1];\r\n                                        parent.timeOpt.showTimeToIndex();\r\n                                        parent.selectedDate.year = parent.currentYear = parseInt(newVal.substring(0,4), 10);\r\n                                        parent.selectedDate.month = parent.currentMonth = parseInt(newVal.substring(5,7), 10);\r\n                                        parent.selectedDate.day = parseInt(newVal.substring(8,10), 10);\r\n                                        parent.composeTable(parent.currentYear,xlDatepickerCtrl.currentMonth);\r\n                                    }\r\n                                }\r\n                                if(parent.type == 2){\r\n                                    if(!newVal){\r\n                                        parent.showTime = \"\";\r\n                                        parent.timeOpt.showTimeToIndex();\r\n                                    }\r\n                                    if(xueUtilDate.checkTimeFormat(newVal)){\r\n                                        parent.showTime = newVal;\r\n                                        parent.timeOpt.showTimeToIndex();\r\n                                    }\r\n                                }\r\n                                if(parent.type == 3){\r\n                                    if(!newVal){\r\n                                        parent.showTime = \"\";\r\n                                        parent.timeOpt.showTimeToIndex();\r\n                                    }\r\n                                    if(xueUtilDate.checkTimeFormat(newVal+\":00\")){\r\n                                        parent.showTime = newVal;\r\n                                        parent.timeOpt.showTimeToIndex();\r\n                                    }\r\n                                }\r\n                            });\r\n                        },\r\n                        watchMinDate: function(){\r\n                            var self = this;\r\n                            if(typeof(scope.minDate) != \"undefined\"){\r\n                                self.minDateWatcher = scope.$watch(\"minDate\",function(newVal){\r\n                                    if(newVal){\r\n                                        if(xlDatepickerCtrl.type == 0 && xueUtilDate.checkDateFormat(newVal)){\r\n                                            scope.dateConfig.minDate = newVal;\r\n                                        }\r\n                                        if(xlDatepickerCtrl.type == 1 && xueUtilDate.checkDateTimeFormat(newVal)){\r\n                                            scope.dateConfig.minDate = newVal.split(\" \")[0];\r\n                                        }\r\n                                    }else{\r\n                                        scope.dateConfig.minDate = \"\";\r\n                                    }\r\n                                });\r\n                            }\r\n                        },\r\n                        watchMaxDate: function(){\r\n                            var self = this;\r\n                            if(typeof(scope.maxDate) != \"undefined\"){\r\n                                self.maxDateWatcher = scope.$watch(\"maxDate\",function(newVal){\r\n                                    if(newVal){\r\n                                        if(xlDatepickerCtrl.type == 0 && xueUtilDate.checkDateFormat(newVal)){\r\n                                            scope.dateConfig.maxDate = newVal;\r\n                                        }\r\n                                        if(xlDatepickerCtrl.type == 1 && xueUtilDate.checkDateTimeFormat(newVal)){\r\n                                            scope.dateConfig.maxDate = newVal.split(\" \")[0];\r\n                                        }\r\n                                    }else{\r\n                                        scope.dateConfig.maxDate = \"\";\r\n                                    }\r\n                                });\r\n                            }\r\n                        },\r\n                        clickOtherArea: function(e){\r\n                            if($(e.target).attr(\"class\") != \"xui-datepicker-wrap\" && $(e.target).parents(\".xui-datepicker-wrap\").length == 0 && \r\n                                $(e.target).attr(\"id\") != xlDatepickerCtrl.id && $(e.target).parents(\"#\"+xlDatepickerCtrl.id).length == 0 ){\r\n                                xlDatepickerCtrl.hidePanel();\r\n                            }\r\n                        },\r\n                        destroy: function(){\r\n                            var self = this;\r\n                            $(\"body\")[0].removeEventListener(\"click\",self.clickOtherArea);\r\n                            self.ngValWatcher();\r\n                            if(self.minDateWatcher){\r\n                                self.minDateWatcher();\r\n                            }\r\n                            if(self.maxDateWatcher){\r\n                                self.maxDateWatcher();\r\n                            }\r\n                        }\r\n                    },\r\n\r\n                    init: function(){\r\n                        var self = this;\r\n\r\n                        scope.dateConfig = angular.extend(self.defaultConfig,scope.dateConfig||{});\r\n\r\n                        scope.dateConfig.id = new Date().getTime();\r\n\r\n                        self.currentYear = parseInt(new Date().getFullYear(), 10);\r\n                        self.currentMonth = parseInt(new Date().getMonth(), 10)+1;\r\n\r\n                        self.currentDate.year = self.currentYear;\r\n                        self.currentDate.month = self.currentMonth;\r\n                        self.currentDate.day = parseInt(new Date().getDate(), 10);\r\n\r\n                        switch(scope.dateConfig.format){\r\n                            case \"YYYY-MM-DD hh:mm:ss\" : \r\n                                self.type = 1; \r\n                                self.timeOpt.init();\r\n                                self.id = \"xlDatePicker_\" + scope.dateConfig.id;\r\n                                break;\r\n                            case \"hh:mm:ss\" : \r\n                                self.type = 2;\r\n                                self.timeOpt.init();\r\n                                self.id = \"xlTimePicker_\" + scope.dateConfig.id;\r\n                                break;\r\n                            case \"hh:mm\":\r\n                                self.timeOpt.init();\r\n                                self.id = \"xlTimePicker_\" + scope.dateConfig.id;\r\n                                self.type = 3;\r\n                                break;\r\n                            default: self.type = 0; \r\n                                self.id = \"xlDatePicker_\" + scope.dateConfig.id;\r\n                                break;\r\n                        }\r\n\r\n                        self.watch.init();\r\n                    }\r\n                }\r\n                \r\n                xlDatepickerCtrl.init();\r\n\r\n                scope.$on('$destroy',function(){\r\n                    $('#'+xlDatepickerCtrl.id).remove();\r\n                    xlDatepickerCtrl.watch.destroy();\r\n                    xlDatepickerCtrl.timeOpt.destroy();\r\n                });\r\n                \r\n            }\r\n        }\r\n    }])\r\n","src/directives/directives.js":"angular.module('xue.directives', ['xue.util.lang'])\r\n    //锁定\r\n    .directive(\"lockedMask\", function () {\r\n        return {\r\n            restrict: 'A',\r\n            scope: {\r\n                lockedMask: '='\r\n            },\r\n            link: function (scope, ele, attrs) {\r\n                function setMask() {\r\n                    $(ele).attr(\"title\", scope.lockedMask.tipText);\r\n                    $(ele).css({\r\n                        \"cursor\": \"help\",\r\n                        \"position\": \"relative\"\r\n                    });\r\n                    $(ele).find(\"#lockedMask\").remove();\r\n                    $(ele).append(\"<div id='lockedMask' style='width:100%;height:100%;position:absolute;z-index:20; border:solid 1px #F9FAFA;background:url(images/mask.png);top:0;left:0'></div>\");\r\n                    ele.bind(\"click\", function (e) {\r\n                        // modalExt.modalTip({\r\n                        //     content: scope.lockedMask.tipText,\r\n                        //     type: \"warning\",\r\n                        //     height: 150\r\n                        // });\r\n                        e.stopPropagation();\r\n                        e.preventDefault();\r\n                    });\r\n                    /* ele.find(\"*\").off(\"click\").off(\"dblclick\"); */\r\n                }\r\n\r\n                function removeMask() {\r\n                    $(ele).removeAttr(\"title\");\r\n                    $(ele).css({\r\n                        \"cursor\": \"auto\",\r\n                        \"position\": \"static\"\r\n                    });\r\n                    $(ele).unbind('click');\r\n                    $(ele).find(\"#lockedMask\").remove();\r\n                }\r\n                if (scope.lockedMask.isLock) {\r\n                    setMask();\r\n                }\r\n                scope.$watch('lockedMask', function (newVal, oldVal) {\r\n                    if (newVal && newVal.isLock) {\r\n                        setMask();\r\n                    } else if (newVal && !newVal.isLock) {\r\n                        removeMask();\r\n                    }\r\n                }, true)\r\n            }\r\n        }\r\n    })\r\n    //等待repeat轮询完成\r\n    .directive(\"repeatFinish\", function () {\r\n        return {\r\n            restrict: 'A',\r\n            link: function (scope, elem, attr) {\r\n                if (scope.$last == true) {\r\n                    scope.$eval(attr.repeatFinish);\r\n                }\r\n            }\r\n        }\r\n    })\r\n    //等待图片加载完成\r\n    .directive(\"loadImage\", function () {\r\n        return {\r\n            restrict: 'A',\r\n            link: function (scope, element, attrs) {\r\n                element.bind('load', function () {\r\n                    scope.$apply(attrs.loadImage);\r\n                });\r\n            }\r\n        }\r\n    })\r\n    //keyup监听删除非数字字符\r\n    .directive(\"filterNumber\", function () {\r\n        return {\r\n            link: function (scope, element) {\r\n                var regex = /\\D/g;\r\n                element.bind('keyup', function () {\r\n                    this.value = this.value.replace(regex, '');\r\n                });\r\n            }\r\n        }\r\n    })\r\n    //error处理\r\n    .directive(\"errSrc\", function () {\r\n        return {\r\n            link: function (scope, element, attrs) {\r\n                element.bind(\"error\", function () {\r\n                    if (attrs.src != attrs.errSrc) {\r\n                        attrs.$set(\"src\", attrs.errSrc);\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    })\r\n    //鼠标移入显示，移出隐藏\r\n    .directive('mouseOverLeave', function () {\r\n        return {\r\n            restrict: 'A',\r\n            scope: {\r\n                hover: \"=\"\r\n            },\r\n            link: function (scope, elem, attr) {\r\n                elem.bind('mouseover', function () {\r\n                    elem.css(\"cursor\", \"pointer\");\r\n                    scope.$apply(function () {\r\n                        scope.hover = true;\r\n                    });\r\n                });\r\n                elem.bind('mouseleave', function () {\r\n                    scope.$apply(function () {\r\n                        scope.hover = false;\r\n                    });\r\n                });\r\n            }\r\n        }\r\n    })\r\n    // radio base on angularjs\r\n    .directive('xueRadio', function () {\r\n        return {\r\n            restrict: \"E\",\r\n            replace: true,\r\n            scope: {\r\n                ngChecked: \"=\"\r\n            },\r\n            template: '<div class=\"xui-radio-wrap\" ng-class=\"{true:\\'gx-checked\\'}[!!ngChecked]\"></div>'\r\n        }\r\n    })\r\n    // checkbox base on angularjs\r\n    .directive('xueCheckbox', function () {\r\n        return {\r\n            restrict: \"E\",\r\n            replace: true,\r\n            scope: {\r\n                ngChecked: \"=\"\r\n            },\r\n            template: '<div class=\"xui-checkbox-wrap\" ng-class=\"{true:\\'gx-checked\\'}[!!ngChecked]\"><i class=\"xui-icon xui-icon-md-checkmark\"></i></div>'\r\n        }\r\n    })\r\n    // multi-checkbox base on angularjs\r\n    .directive('xueMultiCheckbox', function () {\r\n        return {\r\n            restrict: \"E\",\r\n            replace: true,\r\n            scope: {\r\n                multiType: \"=\",\r\n                ngDisabled: \"=\"\r\n            },\r\n            template: '<label class=\"xui-multi-checkbox-wrap\">' +\r\n                '<span class=\"multi-checkbox\" ng-class=\"{1:\\'multi-checkbox-checked\\',2:\\'multi-checkbox-indeterminate\\'}[multiType]\"></span>' +\r\n                '<input type=\"checkbox\" class=\"multi-checkbox-input\" ng-disabled=\"ngDisabled\"></label>'\r\n        }\r\n    })\r\n\r\n    // 单选指令组\r\n    .directive('xueRadioGroup', ['xueUtilLang', function (xueUtilLang) {\r\n        return {\r\n            restrict: \"E\",\r\n            replace: true,\r\n            scope: {\r\n                value: '=', // Radio 的 value\r\n                ngModel: '=',\r\n                ngDisabled: '=',\r\n                radioClick: \"&\", // 绑定父元素事件\r\n                name: '=' // 选项值\r\n            },\r\n            template: '<div class=\"xui-radio-group-wrap\" ng-click=\"onChecked(value)\">' +\r\n                '<label ng-class=\"{\\'active\\':value==ngModel,\\'disabled\\':ngDisabled}\" class=\"radio-item\">' +\r\n                '<input  class=\"checkbox-input\" type=\"radio\"  ng-disabled=\"ngDisabled\"  value=\"{{value}}\" ng-model=\"ngModel\"/>' +\r\n                '</label>' +\r\n                '<span class=\"radio-name\" ng-class={\\'disabled\\':ngDisabled}>{{name}}</span>' +\r\n                '</div>',\r\n            link: function (scope, elem, attr) {\r\n                scope.onChecked = function (value) {\r\n                    if (scope.ngModel != value && !scope.ngDisabled) {\r\n                        scope.ngModel = value;\r\n                    }\r\n                    if (xueUtilLang.isFunction(scope.radioClick)) {\r\n                        scope.radioClick();\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }])\r\n    /**\r\n     * 无权限页面显示\r\n     */\r\n    .directive('noPermissionPage', function () {\r\n        return {\r\n            restrict: 'E',\r\n            replace: true,\r\n            scope: {\r\n                text: \"=\"\r\n            },\r\n            template: '<div class=\"no-perssion-wrap\"><span><i class=\"xui-icon xui-icon-ios-alert\"></i>{{text}}</span></div>'\r\n        }\r\n    })\r\n    //鼠标右键事件指令\r\n    .directive('ngRightClick', ['$parse', function ($parse) {\r\n        return function (scope, element, attrs) {\r\n            var fn = $parse(attrs.ngRightClick);\r\n            element.bind('contextmenu', function (event) {\r\n                scope.$apply(function () {\r\n                    event.preventDefault();\r\n                    fn(scope, {\r\n                        $event: event\r\n                    });\r\n                });\r\n            });\r\n        };\r\n    }])\r\n    //插入HTML片段\r\n    .directive('dyCompile', ['$compile', function ($compile) {\r\n        return {\r\n            replace: true,\r\n            restrict: 'EA',\r\n            link: function (scope, elm, iAttrs) {\r\n                var DUMMY_SCOPE = {\r\n                        $destroy: angular.noop\r\n                    },\r\n                    root = elm,\r\n                    childScope,\r\n                    destroyChildScope = function () {\r\n                        (childScope || DUMMY_SCOPE).$destroy();\r\n                    };\r\n\r\n                iAttrs.$observe(\"html\", function (html) {\r\n                    if (html) {\r\n                        destroyChildScope();\r\n                        childScope = scope.$new(false);\r\n                        var content = $compile(html)(childScope);\r\n                        root.replaceWith(content);\r\n                        root = content;\r\n                    }\r\n\r\n                    scope.$on(\"$destroy\", destroyChildScope);\r\n                });\r\n            }\r\n        };\r\n    }])\r\n    // ng-model for contenteditable\r\n    .directive('contenteditable', function () {\r\n        return {\r\n            restrict: \"A\",\r\n            require: \"ngModel\",\r\n            link: function (scope, element, attrs, ctrl) {\r\n                element.bind('keyup', function () {\r\n                    scope.$apply(function () {\r\n                        var html = element.html();\r\n                        ctrl.$setViewValue(html);\r\n                    });\r\n                });\r\n            }\r\n        }\r\n    })\r\n    //鼠标滚动事件（当滚动到底部时触发）\r\n    .directive('scrollBottom', function () {\r\n        return function (scope, element, attrs) {\r\n            // 内层DIV的滚动加载\r\n            var raw = element[0];\r\n            element.bind('scroll', function () {\r\n                if (raw.scrollTop + raw.offsetHeight >= raw.scrollHeight) {\r\n                    scope.$apply(attrs.scrollBottom);\r\n                }\r\n            });\r\n        };\r\n    })\r\n    //图片懒加载\r\n    .directive('lazyLoadImg', ['$timeout', function ($timeout) {\r\n        return {\r\n            restrict: \"A\",\r\n            link: function (scope, element, attrs) {\r\n                var imgPrefix = attrs.imgPrefix ? attrs.imgPrefix : 'constant_imagestore_url';\r\n                if (scope.$last == true) {\r\n                    //获取滚动父元素\r\n                    var container = element.parent();\r\n                    //获取父元素下的图片容器（用来计算位置）\r\n                    var cardList = Array.prototype.slice.call(container.children(\".card\"));\r\n                    //获取父元素下需要懒加载的图片\r\n                    var imgsList = Array.prototype.slice.call(container.find(\".lazyImg\"));\r\n                    //下一次开始检查图片的位置\r\n                    var lastIndex = 0;\r\n                    //页面首屏渲染，动态数据渲染有延时，这里使用timeout\r\n                    $timeout(function () {\r\n                        imageLoad(imgsList, cardList, container, lastIndex);\r\n                    });\r\n                    //监听父元素滚动事件\r\n                    container.bind('scroll', function () {\r\n                        //节流函数\r\n                        var canRun = true;\r\n                        return function () {\r\n                            if (!canRun) {\r\n                                return;\r\n                            }\r\n                            canRun = false;\r\n                            //500毫秒加载一次\r\n                            $timeout(function () {\r\n                                imageLoad(imgsList, cardList, container, lastIndex);\r\n                                canRun = true;\r\n                            }, 500);\r\n                        };\r\n                    });\r\n                }\r\n\r\n                function imageLoad(imgs, cards, container, lastIndex) {\r\n                    if (imgs.length < 1) {\r\n                        return;\r\n                    }\r\n                    for (var i = lastIndex; i < imgs.length; i++) {\r\n                        if (cards[i].offsetTop < container[0].clientHeight + container[0].scrollTop) {\r\n                            if (imgs[i].getAttribute(\"lazy-src\")) {\r\n                                imgs[i].src = imgPrefix + imgs[i].getAttribute(\"lazy-src\");\r\n                            }\r\n                            lastIndex = i + 1;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }])\r\n    //$watch删除非数字字符\r\n    .directive(\"xueFilterNumber\", function () {\r\n        return {\r\n            restrict: 'A',\r\n            require: 'ngModel',\r\n            link: function (scope, ele, attrs, ngModelCtrl) {\r\n                //监听值变化\r\n                ngModelCtrl.$viewChangeListeners.push(function () {\r\n                    //获取对象中的某个属性path\r\n                    var path = attrs.xueFilterNumber;\r\n                    var value = ngModelCtrl.$viewValue.replace(/[^\\d]/g, '');\r\n                    // new Function('scope', 'path', 'value', 'scope.' + path + '=value')(scope, path, value);\r\n                });\r\n            }\r\n        }\r\n    })\r\n    // 重写title指令\r\n    .directive('title', ['$timeout', function ($timeout) {\r\n        return {\r\n            restrict: \"A\",\r\n            link: function (scope, ele, attrs) {\r\n                scope.id = new Date().getTime();\r\n                ele.bind(\"mouseenter\", function (e) {\r\n                    var self = this;\r\n                    removeEle();\r\n                    var title = scope.oldTitle = self.title;\r\n                    self.title = '';\r\n                    if (title && title.length > 0) {\r\n                        var showEle = $('<div></div>', {\r\n                            text: title,\r\n                            class: 'common-title-tip',\r\n                            id: scope.id\r\n                        });\r\n                        $('body').append(showEle);\r\n                        $timeout(function () {\r\n                            showEle.show();\r\n                            chekPosition(e);\r\n                        }, 500)\r\n                    }\r\n                })\r\n                ele.bind('mouseleave', function (e) {\r\n                    var self = this;\r\n                    self.title = scope.oldTitle;\r\n                    removeEle();\r\n                })\r\n                ele.bind('mousewheel click', function () {\r\n                    removeEle();\r\n                })\r\n\r\n                function removeEle() {\r\n                    // $('body').find(\"#\" + scope.id).remove();\r\n                    $('body').find(\".common-title-tip\").remove();\r\n                }\r\n                // 判断title位置\r\n                function chekPosition(e) {\r\n                    var panelEle = $('#' + scope.id);\r\n                    var panelWidth = panelEle.outerWidth(), //提示内容宽度\r\n                        panelHeight = panelEle.outerHeight(), //提示内容高度\r\n                        targetHeight = $(ele).outerHeight(), //  hover元素高度\r\n                        // targetWidth = $(ele).width(),// hover元素宽度\r\n                        finalLeft = $(ele).offset().left + e.offsetX,\r\n                        finalTop = $(ele).offset().top + targetHeight;\r\n                    // 超出右边界\r\n                    if (finalLeft + panelWidth > document.body.scrollWidth) {\r\n                        finalLeft = document.body.scrollWidth - panelWidth;\r\n                    }\r\n                    // 超出下边界\r\n                    if (finalTop + panelHeight > document.body.scrollHeight) {\r\n                        finalTop = document.body.scrollHeight - panelHeight;\r\n                    }\r\n                    panelEle.css({\r\n                        'top': finalTop,\r\n                        'left': finalLeft\r\n                    })\r\n                }\r\n            }\r\n        }\r\n    }])","src/loading/loading.js":"angular.module('xue.loading', [])\r\n    .directive('xueLoading', ['$compile', function ($compile) {\r\n        return {\r\n            restrict: \"A\",\r\n            scope: {\r\n                loadingConfig: '=xueLoading'\r\n            },\r\n            link: function (scope, ele, attrs) {\r\n\r\n                var loadingConfig = {\r\n                    isShowLoading: false, // false 不显示加载窗\r\n                    theme: 'default-theme', // 'default-theme','dark-theme'\r\n                    msg: '', // 加载中需展示的文字，如：'加载中……'\r\n                    className: '', // 自定义样式类名\r\n                    loadingTypeClass: 'ball-circus', // 'ball-circus','square-jelly-box','ball-spin-clockwise'\r\n                    // 'line-spin-clockwise','ball-clip-rotate','ball-pulse-sync'\r\n                    itemArr: null, //不同加载样式所需的dom数不同。\r\n                    zIndex: 99\r\n                };\r\n                scope.loadingConfig = angular.extend(loadingConfig, scope.loadingConfig);\r\n                var renderObj = {\r\n                    template: '<div class=\"loading-shade\" ng-class=\"loadingConfig.className\" ng-style=\"{\\'z-index\\':loadingConfig.zIndex}\"\\\r\n                        ng-if=\"loadingConfig.isShowLoading\">\\\r\n                        <div class=\"loading-content\" ng-class=\"loadingConfig.theme\">\\\r\n                            <div class=\"loading-container\" ng-class=\"loadingConfig.loadingTypeClass\">\\\r\n                                <div class=\"loading-item\" ng-repeat=\"x in loadingConfig.itemArr track by $index\"></div>\\\r\n                            </div>\\\r\n                            <div class=\"loading-text\">{{loadingConfig.msg}}</div>\\\r\n                        </div>\\\r\n                    </div>',\r\n                    // 不同的加载样式，需要的dom节点数不一样\r\n                    createArrByLen: function () {\r\n                        var loadingItemMap = {\r\n                            'ball-circus': 5,\r\n                            'square-jelly-box': 2,\r\n                            'ball-pulse-sync': 3,\r\n                            'ball-spin-clockwise': 8,\r\n                            'line-spin-clockwise': 8,\r\n                            'ball-clip-rotate': 1\r\n                        };\r\n                        var len = loadingItemMap[scope.loadingConfig.loadingTypeClass];\r\n                        var arr = [],\r\n                            i = len;\r\n                        while (i--) {\r\n                            arr[i] = 0;\r\n                        }\r\n                        scope.loadingConfig.itemArr = arr;\r\n                    },\r\n                    appendHtml: function () {\r\n                        var dom = $(renderObj.template);\r\n                        var render = $compile(dom)(scope);\r\n                        ele.append(render);\r\n                    }\r\n                };\r\n                renderObj.createArrByLen();\r\n                renderObj.appendHtml();\r\n                //销毁\r\n                scope.$on(\"$destroy\", function () {})\r\n            }\r\n        }\r\n    }])","src/menu/menu.js":"angular.module('xue.menu', ['xue.util.lang'])\r\n    .directive('xueMenu',['xueUtilLang', function (xueUtilLang){\r\n        return {\r\n            restrict : \"E\",\r\n            replace : true,\r\n            scope : {\r\n                menuConfig : '='\r\n            },\r\n            templateUrl: function (element, attrs) {\r\n                return attrs.templateUrl || 'xue/template/menu/menu.html'\r\n            },\r\n            link:function(scope,ele,attrs){\r\n                var defaultConfig = {\r\n                    search: false,//是否支持搜索\r\n                    autoShrink: true,//是否自动收缩\r\n                    setFirst: true,//是否选中第一个\r\n\r\n                    data: [],//源数据,一维数组或二维数组\r\n                    showOneDimenIcon: true,//是否展示一级菜单图标\r\n                    oneDimenName: '',//一级菜单标题字段名\r\n                    oneDimenIcon: '',//一级菜单图标字段名\r\n                    \r\n                    childrenName: '',//二维数组对象名\r\n                    twoDimenName: '',//二级菜单标题字段名\r\n                    twoDimenIcon: '',//二级菜单图标字段名\r\n\r\n                    clickRouter: function(){},//导航菜单点击回调\r\n                    routerId: 'id',//导航菜单ID字段名\r\n                    selectId: null,//选中导航菜单ID\r\n                    imagePrefix: 'imagestore/', //图片前缀\r\n                    imageSuffix: '.jpg' //图片后缀\r\n                };\r\n                scope.menuConfig = angular.extend(defaultConfig,scope.menuConfig || {});\r\n\r\n                //支持搜索菜单\r\n                if(scope.menuConfig.search){\r\n                    scope.vm = {\r\n                        searchValue: '',\r\n                        menuList: [],\r\n                        //当前鼠标是否在搜索列表上\r\n                        onSearchListDiv: false,\r\n                        select: function(item){\r\n                            this.searchValue = '';\r\n                            scope.clickRouter(item);\r\n                        },\r\n                        formatData: function(data){\r\n                            var list = [];\r\n                            for(var i=0; i<data.length;i++){\r\n                                list.push(data[i]);\r\n                                if(data[i][scope.menuConfig.childrenName]){\r\n                                    var childrenData = data[i][scope.menuConfig.childrenName];\r\n                                    for(var j=0;j<childrenData.length;j++){\r\n                                        list.push(childrenData[j]);\r\n                                    }\r\n                                }\r\n                            }\r\n                            this.menuList = list;\r\n                        },\r\n                        /**\r\n                         * 隐藏搜索框\r\n                         */\r\n                        hideSearchBox: function () {\r\n                            //当鼠标的焦点不在搜索框里面时，失去焦点才去隐藏\r\n                            if (!this.onSearchListDiv) {\r\n                                this.searchValue = '';\r\n                            }\r\n                        }\r\n                    };\r\n                    \r\n                }\r\n\r\n                //导航菜单点击回调\r\n                scope.clickRouter = function(item){\r\n                    if(!item[scope.menuConfig.childrenName]){\r\n                        scope.menuConfig.selectId = item[scope.menuConfig.routerId];\r\n                        if(xueUtilLang.isFunction(scope.menuConfig.clickRouter)){\r\n                            scope.menuConfig.clickRouter(item);\r\n                        }\r\n                    }else{\r\n                        var open = item.open;\r\n                        if(scope.menuConfig.autoShrink){\r\n                            angular.forEach(scope.menuConfig.data,function(obj,i){\r\n                                obj.open = false;\r\n                            });\r\n                        }\r\n                        if(open){\r\n                            item.open = false;\r\n                        }else{\r\n                            item.open = true;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                //设置数据\r\n                var dataWatch = scope.$watch(\"menuConfig.data\",function(newVal,oldVal){\r\n                    if(newVal){\r\n                        if(scope.menuConfig.setFirst && scope.menuConfig.data.length){\r\n                            var item = scope.menuConfig.data[0];\r\n                            scope.clickRouter(item);\r\n                            if(item[scope.menuConfig.childrenName] && item[scope.menuConfig.childrenName].length){\r\n                                scope.menuConfig.clickRouter(item[scope.menuConfig.childrenName][0]);\r\n                                scope.menuConfig.selectId = item[scope.menuConfig.childrenName][0][scope.menuConfig.routerId];\r\n                                item.open = true;\r\n                            }\r\n                        }\r\n                        if(scope.menuConfig.search){\r\n                            scope.vm.formatData(newVal);\r\n                        }\r\n                    }\r\n                })\r\n\r\n                //设置选中id\r\n                var idWatch = scope.$watch('menuConfig.selectId',function(newVal,oldVal){\r\n                    var data = scope.menuConfig.data;\r\n                    if(newVal && data){\r\n                        for(var i=0; i<data.length; i++){\r\n                            if(newVal == data[i][scope.menuConfig.routerId]){\r\n                                break;\r\n                            }\r\n                            if(data[i][scope.menuConfig.childrenName]){\r\n                                var childrenData = data[i][scope.menuConfig.childrenName];\r\n                                for(var j=0; j<childrenData.length; j++){\r\n                                    if(childrenData[j][scope.menuConfig.routerId] == newVal){\r\n                                        if(scope.menuConfig.autoShrink){\r\n                                            angular.forEach(data,function(obj){\r\n                                                obj.open = false;\r\n                                            });\r\n                                        }\r\n                                        data[i].open = true;\r\n                                        break;\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                })\r\n                \r\n                scope.$on(\"$destroy\",function(){\r\n                    dataWatch();\r\n                    idWatch();\r\n                })\r\n\r\n            }\r\n        }\r\n    }])","src/modal/modal.js":"angular.module('xue.modal', [])\n    .factory('$$multiMap', function () {\n        return {\n            createNew: function () {\n                var map = {};\n\n                return {\n                    entries: function () {\n                        return Object.keys(map).map(function (key) {\n                            return {\n                                key: key,\n                                value: map[key]\n                            };\n                        });\n                    },\n                    get: function (key) {\n                        return map[key];\n                    },\n                    hasKey: function (key) {\n                        return !!map[key];\n                    },\n                    keys: function () {\n                        return Object.keys(map);\n                    },\n                    put: function (key, value) {\n                        if (!map[key]) {\n                            map[key] = [];\n                        }\n\n                        map[key].push(value);\n                    },\n                    remove: function (key, value) {\n                        var values = map[key];\n\n                        if (!values) {\n                            return;\n                        }\n\n                        var idx = values.indexOf(value);\n\n                        if (idx !== -1) {\n                            values.splice(idx, 1);\n                        }\n\n                        if (!values.length) {\n                            delete map[key];\n                        }\n                    }\n                };\n            }\n        };\n    })\n    .factory('$$stackedMap', function () {\n        return {\n            createNew: function () {\n                var stack = [];\n\n                return {\n                    add: function (key, value) {\n                        stack.push({\n                            key: key,\n                            value: value\n                        });\n                    },\n                    get: function (key) {\n                        for (var i = 0; i < stack.length; i++) {\n                            if (key === stack[i].key) {\n                                return stack[i];\n                            }\n                        }\n                    },\n                    keys: function () {\n                        var keys = [];\n                        for (var i = 0; i < stack.length; i++) {\n                            keys.push(stack[i].key);\n                        }\n                        return keys;\n                    },\n                    top: function () {\n                        return stack[stack.length - 1];\n                    },\n                    remove: function (key) {\n                        var idx = -1;\n                        for (var i = 0; i < stack.length; i++) {\n                            if (key === stack[i].key) {\n                                idx = i;\n                                break;\n                            }\n                        }\n                        return stack.splice(idx, 1)[0];\n                    },\n                    removeTop: function () {\n                        return stack.pop();\n                    },\n                    length: function () {\n                        return stack.length;\n                    }\n                };\n            }\n        };\n    })\n    .factory('$modalStack', ['$document', '$q', '$$stackedMap', '$$multiMap', '$animate', '$rootScope', '$compile',\n        function ($document, $q, $$stackedMap, $$multiMap, $animate, $rootScope, $compile) {\n            var ARIA_HIDDEN_ATTRIBUTE_NAME = 'xue-modal-aria-hidden-count';\n            var OPENED_MODAL_CLASS = 'modal-open';\n            var SNAKE_CASE_REGEXP = /[A-Z]/g;\n            var innerUtil = {\n                attribute: ['deferred', 'renderDeferred', 'closedDeferred', 'backdrop', 'keyboard', 'openedClass', 'windowTopClass', 'animation', 'appendTo'],\n                openedWindows: $$stackedMap.createNew(),\n                openedClasses: $$multiMap.createNew(),\n                previousTopOpenedModal: null,\n                topModalIndex: 0,\n                backdropDomEl: null,\n                backdropScope: null,\n                scrollbarPadding: null,\n                toggleTopWindowClass: function (toggleSwitch) {\n                    var modalWindow, self = this;\n                    if (self.openedWindows.length() > 0) {\n                        modalWindow = self.openedWindows.top().value;\n                        modalWindow.modalDomEl.toggleClass(modalWindow.windowTopClass || '', toggleSwitch);\n                    }\n                },\n                backdropIndex: function () {\n                    var topBackdropIndex = -1, self = innerUtil;\n                    var opened = self.openedWindows.keys();\n                    for (var i = 0; i < opened.length; i++) {\n                        if (self.openedWindows.get(opened[i]).value.backdrop) {\n                            topBackdropIndex = i;\n                        }\n                    }\n\n                    // If any backdrop exist, ensure that it's index is always\n                    // right below the top modal\n                    if (topBackdropIndex > -1 && topBackdropIndex < innerUtil.topModalIndex) {\n                        topBackdropIndex = innerUtil.topModalIndex;\n                    }\n                    return topBackdropIndex;\n                },\n                getSiblings: function (el) {\n                    var children = el.parent() ? el.parent().children() : [];\n\n                    return Array.prototype.filter.call(children, function (child) {\n                        return child !== el[0];\n                    });\n                },\n                applyAriaHidden: function (el) {\n                    var self = this;\n                    if (!el || el[0].tagName === 'BODY') {\n                        return;\n                    }\n\n                    self.getSiblings(el).forEach(function (sibling) {\n                        var elemIsAlreadyHidden = sibling.getAttribute('aria-hidden') === 'true',\n                            ariaHiddenCount = parseInt(sibling.getAttribute(ARIA_HIDDEN_ATTRIBUTE_NAME), 10);\n\n                        if (!ariaHiddenCount) {\n                            ariaHiddenCount = elemIsAlreadyHidden ? 1 : 0;\n                        }\n\n                        sibling.setAttribute(ARIA_HIDDEN_ATTRIBUTE_NAME, ariaHiddenCount + 1);\n                        sibling.setAttribute('aria-hidden', 'true');\n                    });\n\n                    return self.applyAriaHidden(el.parent());\n                },\n                unhideBackgroundElements: function () {\n                    Array.prototype.forEach.call(\n                        document.querySelectorAll('[' + ARIA_HIDDEN_ATTRIBUTE_NAME + ']'),\n                        function (hiddenEl) {\n                            var ariaHiddenCount = parseInt(hiddenEl.getAttribute(ARIA_HIDDEN_ATTRIBUTE_NAME), 10),\n                                newHiddenCount = ariaHiddenCount - 1;\n                            hiddenEl.setAttribute(ARIA_HIDDEN_ATTRIBUTE_NAME, newHiddenCount);\n\n                            if (!newHiddenCount) {\n                                hiddenEl.removeAttribute(ARIA_HIDDEN_ATTRIBUTE_NAME);\n                                hiddenEl.removeAttribute('aria-hidden');\n                            }\n                        }\n                    );\n                },\n                removeAfterAnimate: function (domEl, scope, done, closedDeferred) {\n                    var asyncDeferred;\n                    var asyncPromise = null;\n                    scope.$broadcast($modalStack.NOW_CLOSING_EVENT, function () {\n                        if (!asyncDeferred) {\n                            asyncDeferred = $q.defer();\n                            asyncPromise = asyncDeferred.promise;\n                        }\n\n                        return function asyncDone() {\n                            asyncDeferred.resolve();\n                        };\n                    });\n\n                    // Note that it's intentional that asyncPromise might be null.\n                    // That's when setIsAsync has not been called during the\n                    // NOW_CLOSING_EVENT broadcast.\n                    return $q.when(asyncPromise).then(afterAnimating);\n\n                    function afterAnimating() {\n                        if (afterAnimating.done) {\n                            return;\n                        }\n                        afterAnimating.done = true;\n\n                        $animate.leave(domEl,function(){\n                            if (done) {\n                                done();\n                            }\n\n                            domEl.remove();\n                            if (closedDeferred) {\n                                closedDeferred.resolve();\n                            }\n                        });\n\n                        scope.$destroy();\n                    }\n                },\n                checkRemoveBackdrop: function () {\n                    //remove backdrop if no longer needed\n                    if (innerUtil.backdropDomEl && innerUtil.backdropIndex() === -1) {\n                        var backdropScopeRef = innerUtil.backdropScope;\n                        innerUtil.removeAfterAnimate(innerUtil.backdropDomEl, innerUtil.backdropScope, function () {\n                            backdropScopeRef = null;\n                        });\n                        innerUtil.backdropDomEl = undefined;\n                        innerUtil.backdropScope = undefined;\n                    }\n                },\n                removeModalWindow: function (modalInstance, elementToReceiveFocus) {\n                    var modalWindow = innerUtil.openedWindows.get(modalInstance).value;\n                    var appendToElement = modalWindow.appendTo;\n\n                    //clean up the stack\n                    innerUtil.openedWindows.remove(modalInstance);\n                    innerUtil.previousTopOpenedModal = innerUtil.openedWindows.top();\n                    if (innerUtil.previousTopOpenedModal) {\n                        innerUtil.topModalIndex = parseInt(innerUtil.previousTopOpenedModal.value.modalDomEl.attr('index'), 10);\n                    }\n\n                    innerUtil.removeAfterAnimate(modalWindow.modalDomEl, modalWindow.modalScope, function () {\n                        var modalBodyClass = modalWindow.openedClass || OPENED_MODAL_CLASS;\n                        innerUtil.openedClasses.remove(modalBodyClass, modalInstance);\n                        var areAnyOpen = innerUtil.openedClasses.hasKey(modalBodyClass);\n                        appendToElement.toggleClass(modalBodyClass, areAnyOpen);\n                        if (!areAnyOpen && innerUtil.scrollbarPadding && innerUtil.scrollbarPadding.heightOverflow && innerUtil.scrollbarPadding.scrollbarWidth) {\n                            if (innerUtil.scrollbarPadding.originalRight) {\n                                appendToElement.css({ paddingRight: innerUtil.scrollbarPadding.originalRight + 'px' });\n                            } else {\n                                appendToElement.css({ paddingRight: '' });\n                            }\n                            innerUtil.scrollbarPadding = null;\n                        }\n                        innerUtil.toggleTopWindowClass(true);\n                    }, modalWindow.closedDeferred);\n                    innerUtil.checkRemoveBackdrop();\n\n                    //move focus to specified element if available, or else to body\n                    if (elementToReceiveFocus && elementToReceiveFocus.focus) {\n                        elementToReceiveFocus.focus();\n                    } else if (appendToElement.focus) {\n                        appendToElement.focus();\n                    }\n                },\n                broadcastClosing: function (modalWindow, resultOrReason, closing) {\n                    return !modalWindow.value.modalScope.$broadcast('modal.closing', resultOrReason, closing).defaultPrevented;\n                },\n                keydownListener: function (evt) {\n                    if (evt.isDefaultPrevented()) {\n                        return evt;\n                    }\n\n                    var modal = innerUtil.openedWindows.top();\n                    if (modal) {\n                        switch (evt.which) {\n                            case 27: {\n                                if (modal.value.keyboard) {\n                                    evt.preventDefault();\n                                    $rootScope.$apply(function () {\n                                        $modalStack.dismiss(modal.key, 'escape key press');\n                                    });\n                                }\n                                break;\n                            }\n                            case 9: {\n                                var list = $modalStack.loadFocusElementList(modal);\n                                var focusChanged = false;\n                                if (evt.shiftKey) {\n                                    if ($modalStack.isFocusInFirstItem(evt, list) || $modalStack.isModalFocused(evt, modal)) {\n                                        focusChanged = $modalStack.focusLastFocusableElement(list);\n                                    }\n                                } else {\n                                    if ($modalStack.isFocusInLastItem(evt, list)) {\n                                        focusChanged = $modalStack.focusFirstFocusableElement(list);\n                                    }\n                                }\n\n                                if (focusChanged) {\n                                    evt.preventDefault();\n                                    evt.stopPropagation();\n                                }\n\n                                break;\n                            }\n                        }\n                    }\n                },\n                isVisible: function (element) {\n                    return !!(element.offsetWidth ||\n                        element.offsetHeight ||\n                        element.getClientRects().length);\n                },\n                snake_case: function (name) {\n                    var separator = '-';\n                    return name.replace(SNAKE_CASE_REGEXP, function (letter, pos) {\n                        return (pos ? separator : '') + letter.toLowerCase();\n                    });\n                }\n            };\n            var $modalStack = {\n                NOW_CLOSING_EVENT: 'modal.stack.now-closing',\n                open: function (modalInstance, modal) {\n                    var modalOpener = $document[0].activeElement,\n                        modalBodyClass = modal.openedClass;\n                    innerUtil.toggleTopWindowClass(false);\n                    innerUtil.previousTopOpenedModal = innerUtil.openedWindows.top();\n                    var winObj = {};\n                    angular.forEach(innerUtil.attribute, function (item, i) {\n                        winObj[item] = modal[item];\n                    });\n                    winObj.modalScope = modal.scope;\n                    innerUtil.openedWindows.add(modalInstance, winObj);\n                    innerUtil.openedClasses.put(modalBodyClass, modalInstance);\n                    var appendToElement = modal.appendTo,\n                        currBackdropIndex = innerUtil.backdropIndex();\n                    if (currBackdropIndex >= 0 && !innerUtil.backdropDomEl) {\n                        // key code\n                        innerUtil.backdropScope = $rootScope.$new(true);\n                        innerUtil.backdropScope.modalOptions = modal;\n                        innerUtil.backdropScope.index = currBackdropIndex;\n                        innerUtil.backdropDomEl = angular.element('<div xue-modal-backdrop=\"xui-modal-backdrop\"></div>');\n                        innerUtil.backdropDomEl.attr({\n                            'class': 'xui-modal-backdrop-wrap',\n                            'ng-style': '{\\'z-index\\': 1040 + (index && 1 || 0) + index*10}',\n                            'xue-modal-animation-class': 'fade'\n                        });\n                        if (modal.backdropClass) {\n                            innerUtil.backdropDomEl.addClass(modal.backdropClass);\n                        }\n\n                        if (modal.animation) {\n                            innerUtil.backdropDomEl.attr('modal-animation', 'true');\n                        }\n                        // key code\n                        $compile(innerUtil.backdropDomEl)(innerUtil.backdropScope);\n                        $animate.enter(innerUtil.backdropDomEl, appendToElement);\n                        // if ($uibPosition.isScrollable(appendToElement)) {\n                        //     innerUtil.scrollbarPadding = $uibPosition.innerUtil.scrollbarPadding(appendToElement);\n                        //     if (innerUtil.scrollbarPadding.heightOverflow && innerUtil.scrollbarPadding.scrollbarWidth) {\n                        //         appendToElement.css({ paddingRight: innerUtil.scrollbarPadding.right + 'px' });\n                        //     }\n                        // }\n                    }\n                    var content;\n                    if (modal.component) {\n                        content = document.createElement(innerUtil.snake_case(modal.component.name));\n                        content = angular.element(content);\n                        content.attr({\n                            resolve: '$resolve',\n                            'modal-instance': '$modalInstance',\n                            close: '$close($value)',\n                            dismiss: '$dismiss($value)'\n                        });\n                    } else {\n                        content = modal.content;\n                    }\n\n                    // Set the top modal index based on the index of the previous top modal\n                    innerUtil.topModalIndex = innerUtil.previousTopOpenedModal ? parseInt(innerUtil.previousTopOpenedModal.value.modalDomEl.attr('index'), 10) + 1 : 0;\n                    var angularDomEl = angular.element('<div xue-modal-window=\"xui-modal-window\"></div>');\n                    angularDomEl.attr({\n                        'class': 'xui-modal-window',\n                        'template-url': modal.windowTemplateUrl,\n                        'window-top-class': modal.windowTopClass,\n                        'role': 'dialog',\n                        'aria-labelledby': modal.ariaLabelledBy,\n                        'aria-describedby': modal.ariaDescribedBy,\n                        'size': modal.size,\n                        'index': innerUtil.topModalIndex,\n                        'animate': 'animate',\n                        'ng-style': '{\\'z-index\\': 1050 + $$topModalIndex*10, display: \\'block\\'}',\n                        'tabindex': -1,\n                        'xue-modal-animation-class': 'fade'\n                    }).append(content);\n                    if (modal.windowClass) {\n                        angularDomEl.addClass(modal.windowClass);\n                    }\n\n                    if (modal.animation) {\n                        angularDomEl.attr('modal-animation', 'true');\n                    }\n\n                    appendToElement.addClass(modalBodyClass);\n                    if (modal.scope) {\n                        // we need to explicitly add the modal index to the modal scope\n                        // because it is needed by ngStyle to compute the zIndex property.\n                        modal.scope.$$topModalIndex = innerUtil.topModalIndex;\n                    }\n                    $animate.enter($compile(angularDomEl)(modal.scope), appendToElement);\n\n                    innerUtil.openedWindows.top().value.modalDomEl = angularDomEl;\n                    innerUtil.openedWindows.top().value.modalOpener = modalOpener;\n\n                    innerUtil.applyAriaHidden(angularDomEl);\n\n                },\n                close: function (modalInstance, result) {\n                    var modalWindow = innerUtil.openedWindows.get(modalInstance);\n                    innerUtil.unhideBackgroundElements();\n                    if (modalWindow && innerUtil.broadcastClosing(modalWindow, result, true)) {\n                        modalWindow.value.modalScope.$$destructionScheduled = true;\n                        modalWindow.value.deferred.resolve(result);\n                        innerUtil.removeModalWindow(modalInstance, modalWindow.value.modalOpener);\n                        return true;\n                    }\n                    return !modalWindow;\n                },\n                dismiss: function (modalInstance, reason) {\n                    var modalWindow = innerUtil.openedWindows.get(modalInstance);\n                    innerUtil.unhideBackgroundElements();\n                    if (modalWindow && innerUtil.broadcastClosing(modalWindow, reason, false)) {\n                        modalWindow.value.modalScope.$$destructionScheduled = true;\n                        modalWindow.value.deferred.reject(reason);\n                        innerUtil.removeModalWindow(modalInstance, modalWindow.value.modalOpener);\n                        return true;\n                    }\n                    return !modalWindow;\n                },\n                dismissAll: function (reason) {\n                    var topModal = $modalStack.getTop();\n                    while (topModal && $modalStack.dismiss(topModal.key, reason)) {\n                        topModal = $modalStack.getTop();\n                    }\n                },\n                getTop: function () {\n                    return innerUtil.openedWindows.top();\n                },\n                modalRendered: function (modalInstance) {\n                    var modalWindow = innerUtil.openedWindows.get(modalInstance);\n                    if (modalWindow) {\n                        modalWindow.value.renderDeferred.resolve();\n                    }\n                },\n                focusFirstFocusableElement: function (list) {\n                    if (list.length > 0) {\n                        list[0].focus();\n                        return true;\n                    }\n                    return false;\n                },\n                focusLastFocusableElement: function (list) {\n                    if (list.length > 0) {\n                        list[list.length - 1].focus();\n                        return true;\n                    }\n                    return false;\n                },\n                isModalFocused: function (evt, modalWindow) {\n                    if (evt && modalWindow) {\n                        var modalDomEl = modalWindow.value.modalDomEl;\n                        if (modalDomEl && modalDomEl.length) {\n                            return (evt.target || evt.srcElement) === modalDomEl[0];\n                        }\n                    }\n                    return false;\n                },\n                isFocusInFirstItem: function (evt, list) {\n                    if (list.length > 0) {\n                        return (evt.target || evt.srcElement) === list[0];\n                    }\n                    return false;\n                },\n                isFocusInLastItem: function (evt, list) {\n                    if (list.length > 0) {\n                        return (evt.target || evt.srcElement) === list[list.length - 1];\n                    }\n                    return false;\n                },\n                loadFocusElementList: function (modalWindow) {\n                    if (modalWindow) {\n                        var tabbableSelector = 'a[href], area[href], input:not([disabled]):not([tabindex=\\'-1\\']), ' +\n                            'button:not([disabled]):not([tabindex=\\'-1\\']),select:not([disabled]):not([tabindex=\\'-1\\']), textarea:not([disabled]):not([tabindex=\\'-1\\']), ' +\n                            'iframe, object, embed, *[tabindex]:not([tabindex=\\'-1\\']), *[contenteditable=true]';\n                        var modalDomE1 = modalWindow.value.modalDomEl;\n                        if (modalDomE1 && modalDomE1.length) {\n                            var elements = modalDomE1[0].querySelectorAll(tabbableSelector);\n                            return elements ?\n                                Array.prototype.filter.call(elements, function (element) {\n                                    return innerUtil.isVisible(element);\n                                }) : elements;\n                        }\n                    }\n                }\n            };\n\n            $rootScope.$watch(innerUtil.backdropIndex, function (newBackdropIndex) {\n                if (innerUtil.backdropScope) {\n                    innerUtil.backdropScope.index = newBackdropIndex;\n                }\n            });\n\n            $document.on('keydown', innerUtil.keydownListener);\n\n            $rootScope.$on('$destroy', function () {\n                $document.off('keydown', innerUtil.keydownListener);\n            });\n\n            return $modalStack;\n        }])\n    .provider('$xueResolve', [function () {\n        var resolve = this;\n        this.resolver = null;\n\n        this.setResolver = function (resolver) {\n            this.resolver = resolver;\n        };\n\n        this.$get = ['$injector', '$q', function ($injector, $q) {\n            var resolver = resolve.resolver ? $injector.get(resolve.resolver) : null;\n            return {\n                resolve: function (invocables, locals, parent, self) {\n                    if (resolver) {\n                        return resolver.resolve(invocables, locals, parent, self);\n                    }\n\n                    var promises = [];\n\n                    angular.forEach(invocables, function (value) {\n                        if (angular.isFunction(value) || angular.isArray(value)) {\n                            promises.push($q.resolve($injector.invoke(value)));\n                        } else if (angular.isString(value)) {\n                            promises.push($q.resolve($injector.get(value)));\n                        } else {\n                            promises.push($q.resolve(value));\n                        }\n                    });\n\n                    return $q.all(promises).then(function (resolves) {\n                        var resolveObj = {};\n                        var resolveIter = 0;\n                        angular.forEach(invocables, function (value, key) {\n                            resolveObj[key] = resolves[resolveIter++];\n                        });\n\n                        return resolveObj;\n                    });\n                }\n            };\n        }];\n    }])\n    .provider('$xModal', [function () {\n        this.$get = ['$document', '$modalStack', '$xueResolve', '$rootScope', '$q', '$controller', '$http', '$templateCache',\n            function ($document, $modalStack, $xueResolve, $rootScope, $q, $controller, $http, $templateCache) {\n                var modalUtil = {\n                    options: {\n                        openedClass: '',\n                        backdropClass: '',\n                        windowTopClass: '',\n                        windowClass: '',\n                        animation: true,\n                        backdrop: true, //can also be false or 'static'\n                        autoClose: false,\n                        keyboard: true,\n                        resolve: {},\n                        appendTo: $document.find('body').eq(0),\n                        component: '',\n                        template: '',\n                        templateUrl: '',\n                        windowTemplateUrl: '',\n                        ariaLabelledBy: '',\n                        ariaDescribedBy: '',\n                        size: '',\n                        controller: null\n                    },\n                    promiseChain: null,\n                    resolveWithTemplate: function () {\n                        if (modalUtil.modalOptions.component) {\n                            return $q.when($xueResolve.resolve(modalUtil.modalOptions.resolve, {}, null, null));\n                        } else {\n                            return $q.all([modalUtil.getTemplatePromise(modalUtil.modalOptions), $xueResolve.resolve(modalUtil.modalOptions.resolve, {}, null, null)]);\n                        }\n                    },\n                    getTemplatePromise: function (options) {\n                        return options.template ? $q.when(options.template) :\n                            $http.get(angular.isFunction(options.templateUrl) ? (options.templateUrl)() : options.templateUrl,\n                                { cache: $templateCache }).then(function (result) {\n                                    return result.data;\n                                });\n                    },\n                    constructLocals: function (obj, modalScope, tplAndVars, modalInstance, template, instanceOnScope, injectable) {\n                        obj.$scope = modalScope;\n                        obj.$scope.$resolve = {};\n                        if (instanceOnScope) {\n                            obj.$scope.$modalInstance = modalInstance;\n                        } else {\n                            obj.$modalInstance = modalInstance;\n                        }\n\n                        var resolves = template ? tplAndVars[1] : tplAndVars;\n                        angular.forEach(resolves, function (value, key) {\n                            if (injectable) {\n                                obj[key] = value;\n                            }\n\n                            obj.$scope.$resolve[key] = value;\n                        });\n                    }\n                };\n                var $modal = {\n                    getPromiseChain: function () {\n                        return modalUtil.promiseChain;\n                    },\n                    open: function (modalOptions) {\n                        modalUtil.modalOptions = modalOptions;\n                        var modalResultDeferred = $q.defer();\n                        var modalOpenedDeferred = $q.defer();\n                        var modalClosedDeferred = $q.defer();\n                        var modalRenderDeferred = $q.defer();\n\n                        var modalInstance = {\n                            result: modalResultDeferred.promise,\n                            opened: modalOpenedDeferred.promise,\n                            closed: modalClosedDeferred.promise,\n                            rendered: modalRenderDeferred.promise,\n                            close: function (result) {\n                                return $modalStack.close(modalInstance, result);\n                            },\n                            dismiss: function (reason) {\n                                return $modalStack.dismiss(modalInstance, reason);\n                            }\n                        };\n                        modalOptions = angular.extend({}, modalUtil.options, modalOptions);\n\n                        if (!modalOptions.appendTo.length) {\n                            throw new Error('appendTo element not found. Make sure that the element passed is in DOM.');\n                        }\n\n                        //verify options\n                        if (!modalOptions.component && !modalOptions.template && !modalOptions.templateUrl) {\n                            throw new Error('One of component or template or templateUrl options is required.');\n                        }\n                        var samePromise;\n                        samePromise = modalUtil.promiseChain = $q.all([modalUtil.promiseChain])\n                            .then(modalUtil.resolveWithTemplate, modalUtil.resolveWithTemplate)\n                            .then(function resolveSuccess(tplAndVars) {\n                                var providedScope = modalOptions.scope || $rootScope;\n\n                                var modalScope = providedScope.$new();\n                                modalScope.$close = modalInstance.close;\n                                modalScope.$dismiss = modalInstance.dismiss;\n\n                                modalScope.$on('$destroy', function () {\n                                    if (!modalScope.$$destructionScheduled) {\n                                        modalScope.$dismiss('$unscheduledDestruction');\n                                    }\n                                });\n\n                                var modal = {\n                                    scope: modalScope,\n                                    deferred: modalResultDeferred,\n                                    renderDeferred: modalRenderDeferred,\n                                    closedDeferred: modalClosedDeferred\n                                };\n                                var modalExtKey = ['animation', 'backdrop', 'keyboard', 'backdropClass',\n                                    'windowTopClass', 'windowClass', 'windowTemplateUrl', 'ariaLabelledBy',\n                                    'ariaDescribedBy', 'size', 'openedClass', 'appendTo'];\n                                angular.forEach(modalExtKey, function (item) {\n                                    modal[item] = modalOptions[item];\n                                });\n\n                                var component = {};\n                                var ctrlInstance, ctrlInstantiate, ctrlLocals = {};\n\n                                if (modalOptions.component) {\n                                    modalUtil.constructLocals(component, modalScope, tplAndVars, modalInstance, false, true, false);\n                                    component.name = modalOptions.component;\n                                    modal.component = component;\n                                } else if (modalOptions.controller) {\n                                    modalUtil.constructLocals(ctrlLocals, modalScope, tplAndVars, modalInstance, true, false, true);\n\n                                    // key code\n                                    // the third param will make the controller instantiate later,private api\n                                    // @see https://github.com/angular/angular.js/blob/master/src/ng/controller.js#L126\n                                    ctrlInstantiate = $controller(modalOptions.controller, ctrlLocals);\n\n                                    if (modalOptions.controllerAs) {\n                                        modalScope[modalOptions.controllerAs] = ctrlInstance;\n                                    }\n                                }\n\n                                if (!modalOptions.component) {\n                                    modal.content = tplAndVars[0];\n                                }\n\n                                $modalStack.open(modalInstance, modal);\n                                modalOpenedDeferred.resolve(true);\n\n\n                            }, function resolveError(reason) {\n                                modalOpenedDeferred.reject(reason);\n                                modalResultDeferred.reject(reason);\n                            })['finally'](function () {\n                                if (modalUtil.promiseChain === samePromise) {\n                                    modalUtil.promiseChain = null;\n                                }\n                            });\n\n                        return modalInstance;\n\n                    }\n                }\n                return $modal;\n            }]\n    }])\n    .directive('xueModalBackdrop', function () {\n        return {\n            restrict: 'A',\n            compile: function (tElement, tAttrs) {\n                tElement.addClass(tAttrs.backdropClass);\n            }\n        };\n    })\n    .directive('xueModalWindow', ['$q', '$document', '$modalStack',\n        function ($q, $document, $modalStack) {\n            return {\n                scope: {\n                    index: '@'\n                },\n                restrict: 'A',\n                transclude: true,\n                templateUrl: function (tElement, tAttrs) {\n                    return tAttrs.templateUrl || 'xue/template/modal/modal.html';\n                },\n                link: function (scope, element, attrs) {\n                    element.addClass(attrs.windowTopClass || '');\n                    scope.size = attrs.size;\n\n                    scope.close = function (evt) {\n                        var modal = $modalStack.getTop();\n                        if (modal && modal.value.autoClose &&\n                            evt.target === evt.currentTarget) {\n                            evt.preventDefault();\n                            evt.stopPropagation();\n                            $modalStack.dismiss(modal.key, 'backdrop click');\n                        }\n                    };\n\n                    // moved from template to fix issue #2280\n                    element.on('click', scope.close);\n\n                    // This property is only added to the scope for the purpose of detecting when this directive is rendered.\n                    // We can detect that by using this property in the template associated with this directive and then use\n                    // {@link Attribute#$observe} on it. For more details please see {@link TableColumnResize}.\n                    scope.$isRendered = true;\n\n                    // Deferred object that will be resolved when this modal is rendered.\n                    var modalRenderDeferObj = $q.defer();\n                    // Resolve render promise post-digest\n                    scope.$$postDigest(function () {\n                        modalRenderDeferObj.resolve();\n                    });\n\n                    modalRenderDeferObj.promise.then(function () {\n                        var animationPromise = null;\n\n                        $q.when(animationPromise).then(function () {\n                            // Notify {@link $modalStack} that modal is rendered.\n                            var modal = $modalStack.getTop();\n                            if (modal) {\n                                $modalStack.modalRendered(modal.key);\n                            }\n\n                            /**\n                             * If something within the freshly-opened modal already has focus (perhaps via a\n                             * directive that causes focus) then there's no need to try to focus anything.\n                             */\n                            if (!($document[0].activeElement && element[0].contains($document[0].activeElement))) {\n                                var inputWithAutofocus = element[0].querySelector('[autofocus]');\n                                /**\n                                 * Auto-focusing of a freshly-opened modal element causes any child elements\n                                 * with the autofocus attribute to lose focus. This is an issue on touch\n                                 * based devices which will show and then hide the onscreen keyboard.\n                                 * Attempts to refocus the autofocus element via JavaScript will not reopen\n                                 * the onscreen keyboard. Fixed by updated the focusing logic to only autofocus\n                                 * the modal element if the modal does not contain an autofocus element.\n                                 */\n                                if (inputWithAutofocus) {\n                                    inputWithAutofocus.focus();\n                                } else {\n                                    element[0].focus();\n                                }\n                            }\n                        });\n                    });\n                }\n            };\n        }])\n    .directive('xueModalAnimationClass', function () {\n        return {\n            compile: function (tElement, tAttrs) {\n                if (tAttrs.modalAnimation) {\n                    tElement.addClass(tAttrs.xueModalAnimationClass);\n                }\n            }\n        };\n    })\n    .directive('xueModalTransclude', ['$animate', function ($animate) {\n        return {\n            link: function (scope, element, attrs, controller, transclude) {\n                transclude(scope.$parent, function (clone) {\n                    element.empty();\n                    $animate.enter(clone, element);\n                });\n            }\n        };\n    }])\n    ;","src/notice/notice.js":"angular.module('xue.notice', ['xue.util.lang'])\r\n    .directive('xueNotice', [\"xueUtilLang\", \"$timeout\", function (xueUtilLang, $timeout) {\r\n        return {\r\n            restrict: \"E\",\r\n            replace: true,\r\n            scope: {\r\n                noticeConfig: '='\r\n            },\r\n            templateUrl: function (element, attrs) {\r\n                return attrs.templateUrl || \"xue/template/notice/notice.html\";\r\n            },\r\n            link: function (scope, ele, attrs) {\r\n\r\n                var gxNoticeCtrl = scope.gxNoticeCtrl = {\r\n                    defaultConfig: {\r\n                        modalId: null,\r\n                        title: '', // 滑过显示标题\r\n                        iconClassName: 'xui-icon-md-notifications-outline',// 图标\r\n                        width: '366px', // 提示容器宽\r\n                        height: '266px', // 提示容器高\r\n                        count: 0, // 总提示记录数，为0时不显示\r\n                        selectTabId: 0,\r\n                        tabItem: [{\r\n                            id: 0,\r\n                            name: '消息提醒',\r\n                            count: 2\r\n                        }, {\r\n                            id: 1,\r\n                            name: '系统通知',\r\n                            count: 3\r\n                        }],\r\n                        tabMark: 'number', //number 数字 circle 圆点\r\n                        // showNotice: true, // 显示提示内容\r\n                        formatField: { // 字段名格式化\r\n                            contentTitle: '',\r\n                            content: 'content',\r\n                            time: 'time',\r\n                            completeContent: '',\r\n                            contentType: 'contentType',\r\n                            count: 'count'\r\n                        },\r\n                        listMaxLen: 10, // 消息列表最多显示数\r\n                        noticeList: [], // 提示内容列表，对象：{content: '提示内容',time: '2019-08-20 17:13:55'}\r\n                        showNoticeType: false, // 显示提示分类（与提示内容应互斥）\r\n                        noticeTypeList: [], // 提示分类列表，对象：{contentType: '提示分类内容', count: 0}\r\n                        emptyNoticeTip: '暂没有新消息', // 无消息提示语\r\n                        showFooter: true, // 是否显示提示尾部操作\r\n                        footerContent: [{ // 消息提醒尾部操作\r\n                            name: '当前标记已读',\r\n                            click: function () {}\r\n                        }, {\r\n                            name: '查看全部',\r\n                            click: function () {}\r\n                        }],\r\n                        tabItemClick: function () {},\r\n                        itemClick: function () {}, //列表项点击回调\r\n                        loadNextPage: function () {}, //列表滚动到底部加载下一页回调函数\r\n                        listHide: function () {}, //列表消失回调函数\r\n                        listShow: function () {} //列表显示回调函数\r\n                    },\r\n                    tabItemClick: function (item) {\r\n                        $('#' + scope.noticeConfig.modalId + ' .notice-content').scrollTop(0);\r\n                        scope.noticeConfig.selectTabId = item.id;\r\n                        if (xueUtilLang.isFunction(scope.noticeConfig.tabItemClick)) {\r\n                            scope.noticeConfig.tabItemClick(item);\r\n                        }\r\n                    },\r\n                    showPanel: false,\r\n                    mouseenter: function () {\r\n                        gxNoticeCtrl.showPanel = true;\r\n                        var $target = $('#' + scope.noticeConfig.modalId);\r\n                        var top = $(ele).offset().top,\r\n                            left = $(ele).offset().left,\r\n                            width = $(ele).width(),\r\n                            height = $(ele).height(),\r\n                            targetWidth = $target.outerWidth();\r\n                        $target.css({\r\n                            'top': top + height + 15 + 'px',\r\n                            'left': left + width / 2 - targetWidth / 2 + 'px'\r\n                        });\r\n                        $('body').append($target);\r\n                        if ($target.is(':hidden')) {\r\n                            $target.fadeIn();\r\n                            scope.noticeConfig.listShow();\r\n                        }\r\n                    },\r\n                    mouseleave: function () {\r\n                        gxNoticeCtrl.showPanel = false;\r\n                        var $target = $('#' + scope.noticeConfig.modalId);\r\n                        $timeout(function () {\r\n                            if (!$target.is(':hidden') && !gxNoticeCtrl.showPanel) {\r\n                                $target.fadeOut();\r\n                                scope.noticeConfig.listHide();\r\n                            }\r\n                        }, 500);\r\n                    },\r\n                    init: function () {\r\n                        var self = this;\r\n                        scope.noticeConfig = angular.extend(self.defaultConfig, scope.noticeConfig);\r\n                        scope.noticeConfig.modalId = 'gxNotice_' + new Date().getTime();\r\n                        self.destroy();\r\n                    },\r\n                    destroy: function () {\r\n                        scope.$on('$destroy', function () {\r\n                            $(\"#\" + scope.noticeConfig.modalId).remove();\r\n                        });\r\n                    }\r\n                }\r\n\r\n                gxNoticeCtrl.init();\r\n            }\r\n        }\r\n    }])","src/pagination/pagination.js":"angular.module('xue.pagination', [])\n\n  .controller('xuePaginationController', ['$scope', '$attrs', '$parse', function ($scope, $attrs, $parse) {\n    var self = this,\n      ngModelCtrl = { $setViewValue: angular.noop }, // nullModelCtrl\n      setNumPages = $attrs.numPages ? $parse($attrs.numPages).assign : angular.noop;\n\n    this.init = function (ngModelCtrl_, config) {\n      ngModelCtrl = ngModelCtrl_;\n      this.config = config;\n\n      ngModelCtrl.$render = function () {\n        self.render();\n      };\n\n      if ($attrs.itemsPerPage) {\n        $scope.$parent.$watch($parse($attrs.itemsPerPage), function (value) {\n          self.itemsPerPage = parseInt(value, 10);\n          $scope.totalPages = self.calculateTotalPages();\n        });\n      } else {\n        this.itemsPerPage = config.itemsPerPage;\n      }\n    };\n\n    this.calculateTotalPages = function () {\n      var totalPages = this.itemsPerPage < 1 ? 1 : Math.ceil($scope.totalItems / this.itemsPerPage);\n      return Math.max(totalPages || 0, 1);\n    };\n\n    this.render = function () {\n      $scope.page = parseInt(ngModelCtrl.$viewValue, 10) || 1;\n    };\n\n    $scope.selectPage = function (page) {\n      if ($scope.page !== page && page > 0 && page <= $scope.totalPages) {\n        ngModelCtrl.$setViewValue(page);\n        ngModelCtrl.$render();\n      }\n    };\n\n    $scope.getText = function (key) {\n      return $scope[key + 'Text'] || self.config[key + 'Text'];\n    };\n    $scope.noPrevious = function () {\n      return $scope.page === 1;\n    };\n    $scope.noNext = function () {\n      return $scope.page === $scope.totalPages;\n    };\n\n    $scope.$watch('totalItems', function () {\n      $scope.totalPages = self.calculateTotalPages();\n    });\n\n    $scope.$watch('totalPages', function (value) {\n      setNumPages($scope.$parent, value); // Readonly variable\n\n      if ($scope.page > value) {\n        $scope.selectPage(value);\n      } else {\n        ngModelCtrl.$render();\n      }\n    });\n  }])\n\n  .constant('xuePaginationConfig', {\n    itemsPerPage: 10,\n    boundaryLinks: false,\n    directionLinks: true,\n    firstText: '首页',\n    previousText: '上页',\n    nextText: '下页',\n    lastText: '尾页',\n    rotate: true\n  })\n\n  .directive('xuePagination', ['$parse', 'xuePaginationConfig', function ($parse, paginationConfig) {\n    return {\n      restrict: 'EA',\n      scope: {\n        totalItems: '=',\n        firstText: '@',\n        previousText: '@',\n        nextText: '@',\n        lastText: '@'\n      },\n      require: ['xuePagination', '?ngModel'],\n      controller: 'xuePaginationController',\n      templateUrl: function (element, attrs) {\n        return attrs.templateUrl || 'xue/template/pagination/pagination.html';\n      },\n      replace: true,\n      link: function (scope, element, attrs, ctrls) {\n        var paginationCtrl = ctrls[0], ngModelCtrl = ctrls[1];\n\n        if (!ngModelCtrl) {\n          return; // do nothing if no ng-model\n        }\n\n        // Setup configuration parameters\n        var maxSize = angular.isDefined(attrs.maxSize) ? scope.$parent.$eval(attrs.maxSize) : paginationConfig.maxSize,\n          rotate = angular.isDefined(attrs.rotate) ? scope.$parent.$eval(attrs.rotate) : paginationConfig.rotate;\n        scope.boundaryLinks = angular.isDefined(attrs.boundaryLinks) ? scope.$parent.$eval(attrs.boundaryLinks) : paginationConfig.boundaryLinks;\n        scope.directionLinks = angular.isDefined(attrs.directionLinks) ? scope.$parent.$eval(attrs.directionLinks) : paginationConfig.directionLinks;\n\n        paginationCtrl.init(ngModelCtrl, paginationConfig);\n\n        if (attrs.maxSize) {\n          scope.$parent.$watch($parse(attrs.maxSize), function (value) {\n            maxSize = parseInt(value, 10);\n            paginationCtrl.render();\n          });\n        }\n\n        // Create page object used in template\n        function makePage(number, text, isActive) {\n          return {\n            number: number,\n            text: text,\n            active: isActive\n          };\n        }\n\n        function getPages(currentPage, totalPages) {\n          var pages = [];\n\n          // Default page limits\n          var startPage = 1, endPage = totalPages;\n          var isMaxSized = (angular.isDefined(maxSize) && maxSize < totalPages);\n\n          // recompute if maxSize\n          if (isMaxSized) {\n            if (rotate) {\n              // Current page is displayed in the middle of the visible ones\n              startPage = Math.max(currentPage - Math.floor(maxSize / 2), 1);\n              endPage = startPage + maxSize - 1;\n\n              // Adjust if limit is exceeded\n              if (endPage > totalPages) {\n                endPage = totalPages;\n                startPage = endPage - maxSize + 1;\n              }\n            } else {\n              // Visible pages are paginated with maxSize\n              startPage = ((Math.ceil(currentPage / maxSize) - 1) * maxSize) + 1;\n\n              // Adjust last page if limit is exceeded\n              endPage = Math.min(startPage + maxSize - 1, totalPages);\n            }\n          }\n\n          // Add page number links\n          for (var number = startPage; number <= endPage; number++) {\n            var page = makePage(number, number, number === currentPage);\n            pages.push(page);\n          }\n\n          // Add links to move between page sets\n          if (isMaxSized && !rotate) {\n            if (startPage > 1) {\n              var previousPageSet = makePage(startPage - 1, '...', false);\n              pages.unshift(previousPageSet);\n            }\n\n            if (endPage < totalPages) {\n              var nextPageSet = makePage(endPage + 1, '...', false);\n              pages.push(nextPageSet);\n            }\n          }\n\n          return pages;\n        }\n\n        var originalRender = paginationCtrl.render;\n        paginationCtrl.render = function () {\n          originalRender();\n          if (scope.page > 0 && scope.page <= scope.totalPages) {\n            scope.pages = getPages(scope.page, scope.totalPages);\n          }\n        };\n      }\n    };\n  }])\n\n  .constant('xuePagerConfig', {\n    itemsPerPage: 10,\n    previousText: '« 上页',\n    nextText: '下页 »',\n    align: true\n  })\n\n  .directive('xuePager', ['xuePagerConfig', function (pagerConfig) {\n    return {\n      restrict: 'EA',\n      scope: {\n        totalItems: '=',\n        previousText: '@',\n        nextText: '@'\n      },\n      require: ['xuePager', '?ngModel'],\n      controller: 'xuePaginationController',\n      templateUrl: function (element, attrs) {\n        return attrs.templateUrl || 'xue/template/pagination/pager.html';\n      },\n      replace: true,\n      link: function (scope, element, attrs, ctrls) {\n        var paginationCtrl = ctrls[0], ngModelCtrl = ctrls[1];\n\n        if (!ngModelCtrl) {\n          return; // do nothing if no ng-model\n        }\n\n        scope.align = angular.isDefined(attrs.align) ? scope.$parent.$eval(attrs.align) : pagerConfig.align;\n        paginationCtrl.init(ngModelCtrl, pagerConfig);\n      }\n    };\n  }]);","src/scroller/scroller.js":"angular.module('xue.scroller', ['xue.util.lang', 'xue.util.array'])\r\n    .directive(\"xueScroller\", ['xueUtilLang', '$interval', function(xueUtilLang, $interval) {\r\n        return {\r\n            restrict: 'E',\r\n            replace : true,\r\n            scope : {\r\n                scrollConfig : '='\r\n            },\r\n            templateUrl: function (element, attrs) {\r\n                return attrs.templateUrl || 'xue/template/scroller/scroller.html';\r\n            },\r\n            link:function(scope,ele,attrs){\r\n                var defaultConfig = {\r\n                    //1:一维数组 2：二维数组 3：一维数组（对象：{text:'词条信息',class:'该词条样式'}）\r\n                    dataType: 1,\r\n                    //滚动的数组,可接受一维数组和二维数组和数组对象\r\n                    //二维数组对应的词条样式是一维数组：[['aaa','bbb']]=>[{/*第一个对象的样式*/},{/*第二个对象的样式*/}]\r\n                    data: [],\r\n                    //背景样式\r\n                    backgroundStyle: {},\r\n                    //高亮样式\r\n                    highlightStyle: {},\r\n                    //词条样式\r\n                    itemStyle: {},\r\n                    //词条高度\r\n                    itemHeight: 35,\r\n                    //滚动至第n个词条\r\n                    goIndex: -1,\r\n                    //滚动进度 0-1的小数\r\n                    goProcess: 0,\r\n                    //滚动至第n个词条回调\r\n                    goIndexCallBack: function(){\r\n                        \r\n                    },\r\n                    //滚动至某个进度回调\r\n                    goProcessCallBack: function(){\r\n                        \r\n                    },\r\n                    //是否循环播放\r\n                    isLoop: false,\r\n                    //是否自动播放\r\n                    isAutoPlay: false,\r\n                    //自动播放时间间隔（s）\r\n                    playInterval: 1\r\n                };\r\n                \r\n                scope.scrollConfig = angular.extend(defaultConfig,scope.scrollConfig);\r\n                var timer = null;\r\n                if(scope.scrollConfig.isAutoPlay){\r\n                    timer = $interval(function(){\r\n                        if(scope.scrollConfig.goIndex < scope.scrollConfig.data.length-1){\r\n                            scope.scrollConfig.goIndex++;\r\n                        }else if(scope.scrollConfig.isLoop){\r\n                            scope.scrollConfig.goIndex = 0;\r\n                        } else {\r\n                            $interval.cancel(timer);\r\n                        }\r\n                    },(scope.scrollConfig.playInterval || 1)*1000);\r\n                }\r\n\r\n                var dataWatcher = scope.$watch('scrollConfig.data',function(){\r\n                    \r\n                },true);\r\n\r\n                var indexWatcher = scope.$watch('scrollConfig.goIndex',function(){\r\n                    if(scope.scrollConfig.goIndex != -1 && xueUtilLang.isFunction(scope.scrollConfig.goIndexCallBack)){\r\n                        scope.scrollConfig.goIndexCallBack(scope.scrollConfig.goIndex,scope.scrollConfig.data[scope.scrollConfig.goIndex]);\r\n                    }\r\n                });\r\n\r\n                var processWatcher = scope.$watch('scrollConfig.goProcess',function(newVal,oldVal){\r\n                    if(scope.scrollConfig.goIndex != -1 && ((newVal && !isNaN(newVal) && newVal > 0 && newVal <= 1 ) || newVal == 0)){\r\n                        scope.scrollConfig.goIndex = parseInt(scope.scrollConfig.data.length * newVal, 10);\r\n                        if(xueUtilLang.isFunction(scope.scrollConfig.goProcessCallBack)){\r\n                            scope.scrollConfig.goProcessCallBack(scope.scrollConfig.goProcess,scope.scrollConfig.data[scope.scrollConfig.goIndex]);\r\n                        }\r\n                    }\r\n                });\r\n\r\n                scope.$on(\"$destroy\", function() {\r\n                    if(timer){\r\n                        $interval.cancel(timer);\r\n                    }\r\n                    dataWatcher();\r\n                    indexWatcher();\r\n                    processWatcher();\r\n                    $(ele).remove();    \r\n                });\r\n            }\r\n        };\r\n    }])","src/select/select.js":"angular.module('xue.select', ['xue.util.array', 'xue.util.lang'])\r\n\r\n    .directive('xueSelect', ['xueUtilArray', 'xueUtilLang', function (xueUtilArray, xueUtilLang) {\r\n        return {\r\n            restrict: \"E\",\r\n            replace: true,\r\n            scope: {\r\n                selectConfig: '=',\r\n                setVal: '=',\r\n                getVal: '=',\r\n                ngDisabled: '=',\r\n                ngItem: '='\r\n            },\r\n            templateUrl: function (element, attrs) {\r\n                return attrs.templateUrl || \"xue/template/select/select.html\";\r\n            },\r\n            link: function (scope, ele, attrs) {\r\n                var assistVar = {\r\n                    unbindWatch1: null,\r\n                    unbindWatch2: null,\r\n                    unbindWatch3: null,\r\n                    unbindWatch4: null\r\n                };\r\n                //common select config\r\n                var selectConfig = {\r\n                    filter: true, //过滤器开关 为false时与select标签功能一致\r\n                    enableEmpty: true, //是否可以置空\r\n                    separate: true, //输入与过滤分离 为false时输入与过滤合并为一体\r\n                    checkbox: false, //多选开关\r\n                    position: 'down', //面板显示位置,默认在下\r\n                    data: [], //select数据源（数组）\r\n                    valueField: 'value', //对应选项value值\r\n                    textField: 'label', //显示在输入框中的字段名\r\n                    textFieldFormat: function () {}, //自定义显示在输入框中的内容\r\n                    height: '28px', //输入框高度\r\n                    panelHeight: '250px', //面板高度\r\n                    panelWidth: '180px', //面板以及输入框宽度\r\n                    showLimit: 50, //匹配前n条记录\r\n                    inputLabel: \"\", //输入框内容\r\n                    myLabel: \"\",\r\n                    setValue: '', //设置值\r\n                    value: '', //值\r\n                    label: '', //输入框的值\r\n                    checkRows: [], //选中数组Row\r\n                    checkLimit: null, //最多选n条记录\r\n                    checkRowsMap: {}, //选中记录map\r\n                    onBeforeSelect: function () {}, // 选择前回调\r\n                    onSelect: function () {}, //选择回调\r\n                    assign: function () {}, //赋值回调\r\n                    clearAll: function () {}, //清空回调\r\n                    disabled: false, //disabled开关\r\n                    cancelWatch: function () { //取消监听（取消后重新设置data和setValue都不会监听到，慎用）\r\n                        assistVar.unbindWatch2();\r\n                    },\r\n                    reset: function () { //重置\r\n                        scope.selectConfig.value = '';\r\n                        if (typeof (attrs.getVal) != 'undefined') {\r\n                            scope.getVal = '';\r\n                        }\r\n                        scope.selectConfig.label = '';\r\n                        scope.selectConfig.checkRows = [];\r\n                        scope.selectConfig.setValue = '';\r\n                        ele.find(\".select-show\").val('');\r\n                        ele.find(\".select-show\").attr('title', '');\r\n                        scope.selectConfig.checkRowsMap = {};\r\n                    }\r\n                };\r\n\r\n                //extend\r\n                scope.selectConfig = angular.extend(selectConfig, scope.selectConfig);\r\n                if (scope.ngDisabled) {\r\n                    scope.selectConfig.disabled = true;\r\n                }\r\n\r\n                //textFieldFormat\r\n                scope.textFieldFormat = function (item) {\r\n                    if (xueUtilLang.isFunction(scope.selectConfig.textFieldFormat)) {\r\n                        item[scope.selectConfig.textField] = scope.selectConfig.textFieldFormat(item) || item[scope.selectConfig.textField] || \"\";\r\n                    }\r\n                }\r\n\r\n                //element\r\n                ele = $(attrs.$$element);\r\n\r\n                //get label and value from checkRows\r\n                scope.getData = function () {\r\n                    var label = \"\",\r\n                        value = \"\";\r\n                    if (scope.selectConfig.checkRows.length != 0) {\r\n                        scope.selectConfig.checkRowsMap = {};\r\n                        $.each(scope.selectConfig.checkRows, function (i, item) {\r\n                            scope.textFieldFormat(item);\r\n                            label += item[scope.selectConfig.textField] + \",\";\r\n                            value += item[scope.selectConfig.valueField] + \",\";\r\n                            scope.selectConfig.checkRowsMap[item[scope.selectConfig.valueField]] = true;\r\n                        });\r\n                        if (label) {\r\n                            label = label.substring(0, label.length - 1);\r\n                            value = value.substring(0, value.length - 1);\r\n                        }\r\n                    }\r\n                    scope.selectConfig.label = label;\r\n                    scope.selectConfig.value = value;\r\n                    if (typeof (attrs.getVal) != 'undefined') {\r\n                        scope.getVal = value;\r\n                    }\r\n                    ele.find(\".select-show\").val(label);\r\n                    ele.find(\".select-show\").attr(\"title\", label);\r\n                    scope.selectConfig.inputLabel = label;\r\n                }\r\n\r\n                //assign\r\n                assistVar.unbindWatch1 = scope.$watch(\"setVal\", function (newValue, oldValue) {\r\n                    if (typeof (newValue) != 'undefined') {\r\n                        scope.selectConfig.setValue = newValue;\r\n                    }\r\n                });\r\n\r\n                assistVar.unbindWatch2 = scope.$watch(\"selectConfig.data + selectConfig.setValue\", function (newValue, oldValue) {\r\n                    if (scope.selectConfig && typeof (scope.selectConfig.setValue) != 'undefined') {\r\n                        if (scope.selectConfig.checkbox) { //多选\r\n                            var valueArr = scope.selectConfig.setValue.split(\",\");\r\n                            var rows = xueUtilArray.findInArrByKeys(scope.selectConfig.data, scope.selectConfig.valueField, valueArr) || [];\r\n                            scope.selectConfig.checkRows = rows;\r\n                            scope.getData();\r\n                        } else { //单选\r\n                            var index = xueUtilArray.findObjIndex(scope.selectConfig.data, scope.selectConfig.valueField, scope.selectConfig.setValue);\r\n                            if (index != -1) {\r\n                                scope.selectConfig.checkRows = [];\r\n                                scope.selectConfig.checkRows.push(scope.selectConfig.data[index]);\r\n                                scope.getData();\r\n                            }\r\n                        }\r\n                    }\r\n                }, true);\r\n\r\n                //assign\r\n                assistVar.unbindWatch3 = scope.$watch(\"selectConfig.value\", function (newValue, oldValue) {\r\n                    if (scope.selectConfig && xueUtilLang.isFunction(scope.selectConfig.assign) && scope.selectConfig.checkRows.length) {\r\n                        scope.selectConfig.assign(scope.selectConfig.checkRows);\r\n                    }\r\n                })\r\n\r\n                //layout\r\n                scope.selectClass = attrs.selectClass;\r\n                scope.contentStyle = {\r\n                    width: scope.selectConfig.panelWidth,\r\n                    height: scope.selectConfig.panelHeight,\r\n                    top: scope.selectConfig.height\r\n                }\r\n                scope.showStyle = {\r\n                    width: scope.selectConfig.panelWidth,\r\n                    height: scope.selectConfig.height\r\n                }\r\n\r\n                //listener\r\n                assistVar.unbindWatch4 = scope.$watch(\"ngDisabled\", function (newValue, oldValue) {\r\n                    if (newValue) {\r\n                        scope.selectConfig.disabled = true;\r\n                    } else if (typeof (newValue) != 'undefined') {\r\n                        scope.selectConfig.disabled = false;\r\n                    }\r\n                });\r\n\r\n                scope.focus = function () {\r\n                    $(\".select-content\").hide();\r\n                    if (ele.find(\".select-content\").is(\":hidden\")) {\r\n                        ele.find(\".select-content\").show();\r\n                        //单选可过滤且分离\r\n                        if ((!scope.selectConfig.checkbox && scope.selectConfig.filter && scope.selectConfig.separate) || scope.selectConfig.checkbox) {\r\n                            ele.find(\".select-content>input[type='text']\").focus();\r\n                        }\r\n                    }\r\n                }\r\n\r\n                scope.clear = function () {\r\n                    scope.selectConfig.value = '';\r\n                    if (typeof (attrs.getVal) != 'undefined') {\r\n                        scope.getVal = '';\r\n                    }\r\n                    scope.selectConfig.label = '';\r\n                    scope.selectConfig.checkRows = [];\r\n                    ele.find(\".select-show\").val('');\r\n                    ele.find(\".select-show\").attr('title', '');\r\n                    scope.selectConfig.setValue = '';\r\n                    scope.selectConfig.clearAll();\r\n                    scope.selectConfig.checkRowsMap = {};\r\n                }\r\n\r\n                $(document).off(\"click\");\r\n                $(document).on(\"click\", function (e) {\r\n                    if ((typeof e.target.className) == 'string' && e.target.className.indexOf(\"select-content\") == -1 &&\r\n                        e.target.className.indexOf(\"select-show\") == -1 &&\r\n                        $(e.target).parents(\".xui-select-warp\").length == 0\r\n                    ) {\r\n                        $(\".select-content\").hide();\r\n                    }\r\n                });\r\n\r\n                scope.changeIpt = function () {\r\n                    if (scope.selectConfig.inputLabel == \"\") {\r\n                        if (xueUtilLang.isFunction(scope.selectConfig.clearAll)) {\r\n                            scope.selectConfig.value = '';\r\n                            if (typeof (attrs.getVal) != 'undefined') {\r\n                                scope.getVal = '';\r\n                            }\r\n                            scope.selectConfig.label = '';\r\n                            scope.selectConfig.checkRows = [];\r\n                            scope.selectConfig.clearAll();\r\n                        }\r\n                    }\r\n                }\r\n\r\n                //单选\r\n                scope.selectSingle = function (row) {\r\n                    if (!scope.selectConfig.checkRowsMap[row[scope.selectConfig.valueField]]) {\r\n                        scope.checkOne(row);\r\n                    } else {\r\n                        scope.disCheck(row);\r\n                    }\r\n                }\r\n                scope.disCheck = function (row) {\r\n                    var lastData = [];\r\n                    var lastMapData = {};\r\n                    angular.forEach(scope.selectConfig.checkRows, function (item, index) {\r\n                        if (item[scope.selectConfig.valueField] === row[scope.selectConfig.valueField]) {\r\n                            //scope.selectConfig.checkRows.splice(index,1);\r\n                        } else {\r\n                            lastData.push(item);\r\n                            lastMapData[item[scope.selectConfig.valueField]] = false;\r\n                        }\r\n                    });\r\n                    scope.selectConfig.checkRows = lastData;\r\n                    scope.selectConfig.checkRowsMap = lastMapData;\r\n\r\n                }\r\n                scope.checkOne = function (row) {\r\n                    if (!scope.selectConfig.checkRowsMap[row[scope.selectConfig.valueField]]) {\r\n                        scope.selectConfig.checkRows.push(row);\r\n                        scope.selectConfig.checkRowsMap[row[scope.selectConfig.valueField]] = true;\r\n                    }\r\n                }\r\n                //    scope.test = false;\r\n                scope.onBeforeSelect = function (item, event) {\r\n                    var stopSelect = scope.selectConfig.onBeforeSelect(item, scope.ngItem);\r\n                    if (!stopSelect && typeof (stopSelect) != 'undefined') {\r\n                        ele.find(\".select-content\").hide();\r\n                        return;\r\n                    }\r\n                    scope.onSelect(item, event);\r\n                }\r\n                //onSelect\r\n                scope.onSelect = function (item, event) {\r\n                    if (scope.selectConfig.checkbox) {\r\n                        if (!item[scope.selectConfig.valueField]) {\r\n                            if (scope.selectConfig.checkLimit) {\r\n                                if (scope.selectConfig.checkLimit == scope.selectConfig.checkRows.length) {\r\n                                    //    modalExt.modalTip({content:\"最多只能选\"+scope.selectConfig.checkLimit+\"个选项！\",type:\"warning\"});\r\n                                    return;\r\n                                }\r\n                            }\r\n                        }\r\n                        scope.selectSingle(item);\r\n                    } else {\r\n                        ele.find(\".select-content\").hide();\r\n                        scope.selectConfig.checkRows = [];\r\n                        scope.selectConfig.checkRows.push(item);\r\n                    }\r\n                    scope.getData();\r\n                    if (xueUtilLang.isFunction(scope.selectConfig.onSelect)) {\r\n                        scope.selectConfig.onSelect(item, scope.ngItem);\r\n                    }\r\n                }\r\n                //selectLi\r\n                scope.selectLi = function (item, event) {\r\n                    if ($(event.target)[0].nodeName == \"INPUT\") {\r\n                        return;\r\n                    }\r\n                    scope.onBeforeSelect(item, event);\r\n                }\r\n\r\n                //销毁\r\n                scope.$on(\"$destroy\", function () {\r\n                    assistVar.unbindWatch1();\r\n                    assistVar.unbindWatch2();\r\n                    assistVar.unbindWatch3();\r\n                    assistVar.unbindWatch4();\r\n                    scope.selectConfig = null;\r\n                    $(ele).remove();\r\n                })\r\n            }\r\n        }\r\n    }])","src/steps/steps.js":"angular.module('xue.steps', ['xue.util.lang', 'xue.util.array'])\r\n    .directive('xueSteps', ['xueUtilLang', \"xueUtilArray\", function (xueUtilLang, xueUtilArray) {\r\n        return {\r\n            restrict: \"E\",\r\n            replace: true,\r\n            scope: {\r\n                stepsConfig: '=',\r\n                params: '=',\r\n                ngValue: '='\r\n            },\r\n            templateUrl: function (element, attrs) {\r\n                return attrs.templateUrl || 'xue/template/steps/steps.html';\r\n            },\r\n            link: function (scope) {\r\n                var stepsCtrl = scope.stepsCtrl = {\r\n                    defaultConfig: {\r\n                        theme: \"blue-theme\", //可选值blue-theme,green-theme,可继续拓展\r\n                        size: \"\", //small,large,在iconStyle为point时无效\r\n                        direction: \"horizontal\", //horizontal:水平布局,vertical：垂直布局\r\n                        alignCenter: false, //是否居中展示,在direction为horizontal时有效\r\n                        iconStyle: \"num\", //icon的展示形式,num：默认,statusNum：带状态的数字,strokeStatus：镂空状态,fillStatus：填充状态,point：小点式,img：图片,iconfont：字体图标\r\n                        idField: \"code\", //键值字段名\r\n                        nameField: \"title\", //步骤展示文字字段名\r\n                        descField: \"description\", //描述文字字段名\r\n                        options: [{\r\n                            code: \"\",\r\n                            title: \"\",\r\n                            active: \"\", //标记是否是当前步骤\r\n                            passed: \"\", //标记步骤是否已通过\r\n                            imgUrl: \"\", //iconStyle为img时，传入图片路径\r\n                            iconfont: \"\", //iconStyle为iconfont时，传入图标class值\r\n                            description: \"\"\r\n                        }],\r\n                        changeCallback: function () {}\r\n                    },\r\n                    //设置步骤条状态\r\n                    setStepStatus: function () {},\r\n                    init: function () {\r\n                        var self = this;\r\n                        scope.stepsConfig = angular.extend(self.defaultConfig, scope.stepsConfig || {});\r\n                        if (xueUtilLang.isFunction(scope.stepsConfig.setStepStatus)) {\r\n                            self.setStepStatus = scope.stepsConfig.setStepStatus;\r\n                        } else {\r\n                            self.setStepStatus = self._setStepStatus;\r\n                        }\r\n                        scope.stepsConfig.options = self.setStepStatus(scope.stepsConfig.options, scope.params);\r\n                    },\r\n                    _setStepStatus: function (options) {\r\n                        var index = xueUtilArray.findObjIndex(options, [scope.stepsConfig.idField], scope.ngValue);\r\n                        angular.forEach(options, function (item, i) {\r\n                            if (i < index) {\r\n                                item.passed = true;\r\n                            } else {\r\n                                item.passed = false;\r\n                            }\r\n                        });\r\n                        return options;\r\n                    },\r\n                    //步骤条点击事件\r\n                    stepClick: function (option) {\r\n                        if (scope.ngValue === option[scope.stepsConfig.idField]) {\r\n                            return;\r\n                        }\r\n                        if (xueUtilLang.isFunction(scope.stepsConfig.beforeChange) &&\r\n                            !scope.stepsConfig.beforeChange(option, scope.params)) {\r\n                            return;\r\n                        }\r\n                        scope.ngValue = option[scope.stepsConfig.idField];\r\n                        scope.stepsConfig.options = this.setStepStatus(scope.stepsConfig.options, scope.params);\r\n                        if (xueUtilLang.isFunction(scope.stepsConfig.changeCallback)) {\r\n                            scope.stepsConfig.changeCallback(option, scope.params);\r\n                        }\r\n                    }\r\n                };\r\n                //监听options\r\n                scope.stepsConfigWatcher = scope.$watch(\"stepsConfig.options\", function (newVal) {\r\n                    scope.stepsConfig.options = stepsCtrl.setStepStatus(newVal, scope.params);\r\n                });\r\n                scope.$on('$destroy', function () {\r\n                    scope.stepsConfigWatcher();\r\n                });\r\n                stepsCtrl.init();\r\n            }\r\n        };\r\n    }]);","src/switch/switch.js":"angular.module('xue.switch', ['xue.util.lang'])\r\n    // toggle switch base on angularjs\r\n    .directive('xueSwitch', ['xueUtilLang', function (xueUtilLang) {\r\n        return {\r\n            restrict: \"E\",\r\n            replace: true,\r\n            scope: {\r\n                ngChecked: \"=\",\r\n                switchClick: \"=\",\r\n                clickParam: \"=\",\r\n                ngDisabled: \"=\"\r\n            },\r\n            template: '<label class=\"xui-switch-wrap\" ng-class=\"{disabled: ngDisabled}\">' +\r\n                '<input class=\"swith-checkbox\" type=\"checkbox\" ng-model=\"ngChecked\" ng-disabled=\"ngDisabled\" ng-click=\"clickEvent()\"/>' +\r\n                '<div class=\"switch-bg\"></div><div class=\"toggle-btn\"></div></label>',\r\n            link: function (scope, element, attr) {\r\n                scope.clickEvent = function () {\r\n                    if (xueUtilLang.isFunction(scope.switchClick)) {\r\n                        scope.switchClick(scope.clickParam || \"\");\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }])\r\n    //switch开关\r\n    .directive(\"xueToggle\", function () {\r\n        return {\r\n            restrict: \"E\",\r\n            replace: true,\r\n            scope: {\r\n                ngDisabled: '=',\r\n                toggleConfig: '='\r\n            },\r\n            template: \"<div class='xui-toggle-wrap' ng-class=\\\"{true:'active'}[toggleConfig.disabled]\\\"><div ng-click='switchToggle()'><div class='toggle-bar'></div><div class='toggle-button'></div></div></div>\",\r\n            link: function (scope, ele, attrs) {\r\n                var toggleConfig = {\r\n                    disabled: false,\r\n                    onSelect: function () {}\r\n                };\r\n                scope.toggleConfig = angular.extend(toggleConfig, scope.toggleConfig);\r\n                if (scope.ngDisabled) {\r\n                    scope.toggleConfig.disabled = scope.ngDisabled;\r\n                }\r\n                scope.switchToggle = function () {\r\n                    /* scope.toggleConfig.disabled = !scope.toggleConfig.disabled;\r\n                    scope.ngDisabled = scope.toggleConfig.disabled; */\r\n                    scope.toggleConfig.onSelect(scope.toggleConfig.disabled);\r\n                }\r\n                scope.$watch(\"ngDisabled\", function (newVal, oldVal) {\r\n                    scope.toggleConfig.disabled = newVal;\r\n                });\r\n            }\r\n        }\r\n    })","src/table/table.js":"angular.module('xue.table', ['xue.util.lang', 'xue.pagination', 'xue.util.array'])\n    .directive('xueTable', ['xueUtilLang', 'xueUtilArray', '$timeout', function (xueUtilLang, xueUtilArray, $timeout) {\n        return {\n            restrict: \"E\",\n            replace: true,\n            scope: {\n                tableConfig: '='\n            },\n            templateUrl: function (element, attrs) {\n                return attrs.templateUrl || 'xue/template/table/table.html';\n            },\n            link: function (scope, ele, attrs) {\n\n                //assist var\n                var assistVar = {\n                    resetPageFlag: 0,\n                    unbindWatch1: null,\n                    unbindWatch2: null,\n                    unbindWatch3: null,\n                    unbindWatch4: null\n                }\n\n                //common table config \n                var tableConfig = {\n                    defaultNull: '无', //当data为undefined时默认显示文字\n                    pagination: true, //显示分页\n                    maxSize: 5, //分页最大选项数\n                    page: 1, //当前页\n                    pagesize: true, //显示分页信息\n                    size: 10, //当前页记录数\n                    pageList: [10, 25, 50, 100, 150, 200], //设置分页size\n                    total: 0, //总记录数\n                    optConfig: [], //操作列配置\n                    optConfigExt: [], //扩展操作列配置\n                    colunms: [], //表头\n                    uniqueId: 'id', //唯一标识字段名\n                    noDataText: '暂无数据', //暂无数据显示文字\n                    nodataColspan: 1, // 无数据时表格合并列的数量\n                    showIndex: false, //显示序号\n                    indexTitle: '序号', //序号表头标题\n                    rows: [], //表记录\n                    checkbox: false, //多选\n                    radio: false, //单选\n                    selectAll: false, //是否全选\n                    checkRows: [], //选中记录\n                    checkRowsMap: {}, //选中记录map\n                    order: false, //排序\n                    orderColumn: '', //默认排序列\n                    desc: false, //排序规则\n                    tableHover: true, //是否显示划过变色效果\n                    showTableCol: false, //是否显示选项\n                    drag: false, //是否支持拖动表格列宽\n                    selectAllColumn: true, //是否全选列显示\n                    rowDbclick: function () {}, //行双击回调\n                    rowClick: function () {}, //行单击回调\n                    turnPage: function () {}, //分页回调\n                    resetPage: function () { //重置page为1，并阻止turnPage回调\n                        if (this.page != 1) {\n                            this.page = 1;\n                            assistVar.resetPageFlag = 1;\n                        }\n                    },\n                    toolbar: { //一般工具栏\n                        show: false,\n                        title: '列表',\n                        tools: [{\n                                text: '刷新',\n                                icon: 'xui-icon xui-icon-ios-refresh',\n                                permissionCode: '',\n                                noPermission: true,\n                                callback: function () {\n\n                                }\n                            },\n                            {\n                                text: '上传',\n                                icon: 'xui-icon xui-icon-ios-cloud-upload',\n                                permissionCode: '',\n                                callback: function () {}\n                            },\n                            {\n                                text: '下载',\n                                icon: 'xui-icon xui-icon-ios-cloud-download',\n                                permissionCode: '',\n                                callback: function () {}\n                            },\n                            {\n                                text: '导入',\n                                icon: 'xui-icon xui-icon-ios-cloud-download',\n                                permissionCode: '',\n                                callback: function () {}\n                            },\n                            {\n                                text: '导出',\n                                icon: 'xui-icon xui-icon-ios-cloud-upload',\n                                permissionCode: '',\n                                callback: function () {}\n                            }\n                        ]\n                    }\n                };\n\n                //初始化表头\n                angular.forEach(scope.tableConfig.colunms, function (item, index) {\n                    if (typeof (item.show) == 'undefined') {\n                        item.show = true;\n                    }\n                });\n\n                //extend\n                scope.tableConfig = angular.extend(tableConfig, scope.tableConfig);\n\n                //布局样式 0：全表格 1：表格+分页 2:表格+toolbar 3：表格+toolbar+分页\n                scope.layout = 0;\n                if (scope.tableConfig.pagination || scope.tableConfig.toolbar.show) {\n                    scope.layout = scope.tableConfig.pagination ? 1 : 2;\n                    if (scope.tableConfig.pagination && scope.tableConfig.toolbar.show) {\n                        scope.layout = 3;\n                    }\n                }\n\n                //翻页监听\n                assistVar.unbindWatch1 = scope.$watch('tableConfig.page + tableConfig.size', function (newValue, oldValue) {\n                    scope.tableConfig.selectAll = false;\n                    if (!assistVar.resetPageFlag) {\n                        if (xueUtilLang.isFunction(scope.tableConfig.turnPage)) {\n                            scope.tableConfig.turnPage(scope.tableConfig.page, scope.tableConfig.size);\n                        }\n                    } else {\n                        assistVar.resetPageFlag = 0;\n                    }\n                });\n\n                //格式化\n                assistVar.unbindWatch2 = scope.$watch('tableConfig.rows', function (newValue, oldValue) {\n                    //列格式化\n                    angular.forEach(scope.tableConfig.colunms, function (item, index) {\n                        if (xueUtilLang.isFunction(item.formatter)) {\n                            angular.forEach(scope.tableConfig.rows, function (list, i) {\n                                if (item.formatter(list) && typeof (item.formatter(list).then) == 'function') {\n                                    // (function (paramList, paramI) {\n                                    //     item.formatter(paramList).then(function (ret) {\n                                    //         paramList[item.name] = ret;\n                                    //     }, function () {\n                                    //         paramList[item.name] = '';\n                                    //     });\n                                    // })(list, i);\n                                } else {\n                                    list[item.name] = item.formatter(list) || '';\n                                }\n                            })\n                        }\n                        if (tableConfig.checkbox && scope.tableConfig.rows && scope.tableConfig.rows.length) {\n                            tableConfig.selectAll = true;\n                            angular.forEach(scope.tableConfig.rows, function (list, i) {\n                                if (scope.tableConfig.checkRowsMap) {\n                                    list.$checked = scope.tableConfig.checkRowsMap[list[scope.tableConfig.uniqueId]];\n                                } else {\n                                    list.$checked = false;\n                                }\n                                tableConfig.selectAll = tableConfig.selectAll && list.$checked;\n                            })\n                        }\n                    });\n                    //操作列格式化\n                    angular.forEach(scope.tableConfig.optConfigExt, function (item, index) {\n                        angular.forEach(item.optContent, function (list, i) {\n                            if (xueUtilLang.isFunction(list.formatter)) {\n                                angular.forEach(scope.tableConfig.rows, function (row, j) {\n                                    var show = list.formatter(row);\n                                    row[list.id] = show;\n                                });\n                            }\n                        });\n                    });\n                });\n\n                // 同步checkRows\n                var syncCheckRows = function () {\n                    //同步map\n                    scope.tableConfig.checkRowsMap = {};\n                    angular.forEach(scope.tableConfig.checkRows, function (item, index) {\n                        scope.tableConfig.checkRowsMap[item[scope.tableConfig.uniqueId]] = true;\n                    });\n                    //同步选中状态、判断是否全选\n                    var isSelectAll = true;\n                    angular.forEach(scope.tableConfig.rows, function (item, index) {\n                        if (scope.tableConfig.checkRowsMap[item[scope.tableConfig.uniqueId]]) {\n                            item.$checked = true;\n                        } else {\n                            item.$checked = false;\n                            isSelectAll = false;\n                        }\n                    });\n                    scope.tableConfig.selectAll = isSelectAll;\n                }\n\n                //单选radio\n                scope.selectRadio = function (row) {\n                    scope.tableConfig.checkRows = [];\n                    scope.tableConfig.checkRows.push(row);\n                    syncCheckRows();\n                }\n                //单选\n                scope.selectSingle = function (row) {\n                    if (!row.$checked) {\n                        scope.checkOne(row);\n                    } else {\n                        scope.disCheck(row);\n                    }\n                }\n                //全选、取消全选\n                scope.selectAll = function () {\n                    scope.tableConfig.selectAll = !scope.tableConfig.selectAll;\n                    if (scope.tableConfig.selectAll) {\n                        angular.forEach(scope.tableConfig.rows, function (item, i) {\n                            if (!scope.tableConfig.checkRowsMap[item[scope.tableConfig.uniqueId]]) {\n                                scope.tableConfig.checkRows.push(item);\n                            }\n                        });\n                    } else {\n                        scope.tableConfig.checkRows = [];\n                    }\n                    syncCheckRows();\n                }\n                scope.disCheck = function (row) {\n                    var index = xueUtilArray.findObjIndex(scope.tableConfig.checkRows, scope.tableConfig.uniqueId, row[scope.tableConfig.uniqueId]);\n                    scope.tableConfig.checkRows.splice(index, 1);\n                    syncCheckRows();\n                }\n                scope.checkOne = function (row) {\n                    if (!scope.tableConfig.checkRowsMap[row[scope.tableConfig.uniqueId]]) {\n                        scope.tableConfig.checkRows.push(row);\n                        syncCheckRows();\n                    }\n                }\n                //排序\n                scope.order = function (item) {\n                    if (scope.tableConfig.order) {\n                        scope.tableConfig.orderColumn = item.name;\n                        scope.tableConfig.desc = !scope.tableConfig.desc;\n                    }\n                }\n                //单击行\n                scope.rowClick = function (row, event) {\n                    if (scope.clicked) {\n                        scope.cancelClick = true;\n                        return;\n                    }\n\n                    scope.clicked = true;\n\n                    $timeout(function () {\n                        if (scope.cancelClick) {\n                            scope.cancelClick = false;\n                            scope.clicked = false;\n                            return;\n                        }\n\n                        if (!(event.target.attributes['data-event'] && event.target.attributes['data-event'].value == 'notChecked') &&\n                            $(event.target).parents().attr('data-event') != 'notChecked') {\n                            if (scope.tableConfig.checkbox) {\n                                scope.selectSingle(row);\n                            }\n                            if (scope.tableConfig.radio) {\n                                scope.selectRadio(row);\n                            }\n                        }\n\n                        if (xueUtilLang.isFunction(scope.tableConfig.rowClick)) {\n                            scope.tableConfig.rowClick(row);\n                        }\n\n                        scope.cancelClick = false;\n                        scope.clicked = false;\n                    }, 200);\n                };\n                //双击行\n                scope.rowDbclick = function (row, event) {\n                    $timeout(function () {\n\n                        if (xueUtilLang.isFunction(scope.tableConfig.rowDbclick)) {\n                            scope.tableConfig.rowDbclick(row);\n                        }\n\n                    });\n                };\n                //单击列\n                scope.colClick = function (row, $event, click) {\n                    if (xueUtilLang.isFunction(click)) {\n                        click(row);\n                        $event.stopPropagation();\n                    }\n                }\n                //单击无权限功能\n                scope.noPermission = function () {\n                    // modalExt.modalTip({\n                    //     content: \"暂无权限!\",\n                    //     type: \"warning\",\n                    //     height: 150\n                    // });\n                }\n\n                /**\n                 * 弹窗业务\n                 */\n                var popup = scope.popup = {\n                    //是否全选\n                    isSelectAll: true,\n                    //全选\n                    selectAll: function () {\n                        if (scope.tableConfig.selectAllColumn) {\n                            scope.tableConfig.selectAllColumn = false;\n                        } else {\n                            scope.tableConfig.selectAllColumn = true;\n                        }\n                        // scope.tableConfig.selectAllColumn ? scope.tableConfig.selectAllColumn = false : scope.tableConfig.selectAllColumn = true;\n                        angular.forEach(scope.tableConfig.colunms, function (item, index) {\n                            item.show = scope.tableConfig.selectAllColumn;\n                        });\n                        scope.tableConfig.nodataColspan = scope.tableConfig.selectAllColumn ? scope.tableConfig.colunms.length : 0;\n                    },\n                    //单选\n                    singleSelect: function (item) {\n                        item.show = !item.show;\n                        if (item.show) {\n                            scope.tableConfig.nodataColspan++;\n                        } else {\n                            scope.tableConfig.nodataColspan--;\n                        }\n                        // item.show ? scope.tableConfig.nodataColspan++ : scope.tableConfig.nodataColspan--;\n                        var allChecked = true;\n                        angular.forEach(scope.tableConfig.colunms, function (colItem, index) {\n                            if (!colItem.show) {\n                                allChecked = false;\n                            }\n                        });\n                        scope.tableConfig.selectAllColumn = allChecked;\n                    }\n                }\n                // 默认无数据时合并列为表头数量\n                scope.tableConfig.nodataColspan = scope.tableConfig.colunms.length;\n\n                /**\n                 * 拖拽功能\n                 */\n                var drag = scope.drag = {\n                    direct: 0,\n                    originOffsetX: 0,\n                    originWidth: 0,\n                    originName: \"\",\n                    lastWidth: 0,\n                    nextWidth: 0,\n                    inArea: false,\n                    moving: false,\n                    listener: function () {\n                        $(ele).on('mousemove', 'th', function (event) {\n                            var $this = $(this),\n                                $next = $(this).next(),\n                                $last = $(this).prev();\n                            if (drag.moving && $next.length && event.offsetX > 0) {\n                                if (drag.originName != $this.html()) {\n                                    drag.direct = 1;\n                                    drag.originName = $this.html();\n                                    drag.originWidth = $this.width();\n                                    drag.originOffsetX = event.offsetX;\n                                    drag.lastWidth = $last.width();\n                                }\n                                if (drag.direct) {\n                                    /* console.log('往后拽:'+ (event.offsetX-drag.originOffsetX));\n                                    console.log('前一列宽：'+drag.lastWidth);\n                                    console.log('后一列宽'+drag.originWidth); */\n                                    //往后拽\n                                    $last.width(drag.lastWidth + (event.offsetX - drag.originOffsetX));\n                                    $this.width(drag.originWidth - (event.offsetX - drag.originOffsetX));\n                                } else {\n                                    /* console.log('往前拽:'+ (event.offsetX-drag.originOffsetX));\n                                    console.log('前一列宽：'+drag.originWidth);\n                                    console.log('后一列宽'+drag.nextWidth); */\n                                    //往前拽\n                                    $next.width(drag.nextWidth - (event.offsetX - drag.originOffsetX));\n                                    $this.width(drag.originWidth + (event.offsetX - drag.originOffsetX));\n                                }\n                            } else {\n                                if (($this.width() - event.offsetX) < 10) {\n                                    $this.css('cursor', 'e-resize');\n                                    drag.inArea = true;\n                                } else {\n                                    $this.css('cursor', 'default');\n                                    drag.inArea = false;\n                                }\n                            }\n                        });\n                        $(ele).on('mousedown', 'th', function (event) {\n                            var $this = $(this),\n                                $next = $(this).next();\n                            if (drag.inArea && $next.length) {\n                                drag.moving = true;\n                                drag.direct = 0;\n                                drag.originWidth = $this.width();\n                                drag.nextWidth = $next.width();\n                                drag.originOffsetX = event.offsetX;\n                                drag.originName = $this.html();\n                            } else {\n                                drag.moving = false;\n                            }\n                        });\n                        $(ele).on('mouseleave', 'tr', function () {\n                            drag.moving = false;\n                        });\n                        $(ele).on('mouseup', function (event) {\n                            drag.moving = false;\n                        });\n                    }\n                }\n                if (scope.tableConfig.drag) {\n                    drag.listener();\n                    //支持拖拽则不支持排序，容易造成点击失误\n                    scope.tableConfig.order = false;\n                }\n\n                //销毁\n                scope.$on(\"$destroy\", function () {\n                    assistVar.unbindWatch1();\n                    assistVar.unbindWatch2();\n                    $(ele).off('mousemove');\n                    $(ele).off('mousedown');\n                    $(ele).off('mouseup');\n                    $(ele).remove();\n                })\n            }\n        };\n    }])\n    .filter('trusthtml', ['$sce', function ($sce) {\n        return function (text, defaultNull) {\n            var showText = defaultNull || '';\n            //过滤<script></script>\n            if (text) {\n                var str = text.toString();\n                text = str.replace(\"<script>\", \"\");\n                text = text.replace(\"</script>\", \"\");\n            } else {\n                text = '';\n            }\n            if (text == '') {\n                return $sce.trustAsHtml(showText);\n            } else {\n                if (text && isNaN(text)) {\n                    return $sce.trustAsHtml(text);\n                } else {\n                    return $sce.trustAsHtml('<span>' + text + '</span>');\n                }\n            }\n        }\n    }]);","src/tabs/tabs.js":"angular.module('xue.tabs', ['xue.util.array'])\n    .directive('xueTabsWrap', [function () {\n        return {\n            restrict: 'E',\n            transclude: true,\n            replace: true,\n            scope: {\n                type: \"@\", // card/border-card(default:null)\n                tabPosition: \"=\", // top/right/bottom/left(default:top)\n                ngModel: \"=\"\n            },\n            controller: 'tabsWrapCtrl',\n            controllerAs: 'twCtrl',\n            templateUrl: function (element, attrs) {\n                return attrs.templateUrl || 'xue/template/tabs/tabs_wrap.html';\n            },\n            link: function (scope, ele, attrs, ctrl) {\n                if(typeof scope.ngModel == 'undefined' && typeof attrs.ngModel == 'undefined'){\n                    ctrl.select(0);\n                }\n            }\n        }\n    }])\n    .controller('tabsWrapCtrl', ['$scope', 'xueUtilArray', function ($scope, xueUtilArray) {\n        var ctrl = this, oldIndex, destroyed;\n        ctrl.tabs = [];\n        $scope.index = 0;\n        ctrl.select = function (index, evt) {\n            if (destroyed) {\n                return;\n            }\n            if (index == oldIndex) {\n                return;\n            }\n            var previousSelected = ctrl.tabs[oldIndex];\n            if (previousSelected) {\n                previousSelected.onDeselect({\n                    $event: evt,\n                    $selectedIndex: index,\n                    $previousSelected: previousSelected\n                });\n                if (evt && evt.isDefaultPrevented()) {\n                    return;\n                }\n                previousSelected.active = false;\n            }\n\n            var selected = ctrl.tabs[index];\n            if (selected) {\n                selected.onSelect({\n                    $event: evt,\n                    $selectedIndex: index,\n                    $selected: selected\n                });\n                selected.active = true;\n                oldIndex = index;\n                $scope.index = index;\n            } else if (!selected && angular.isDefined(oldIndex)) {\n                oldIndex = null;\n            }\n        };\n\n        ctrl.addTab = function (tab) {\n            ctrl.tabs.push(tab);\n            if ($scope.ngModel) {\n                var index = xueUtilArray.findObjIndex(ctrl.tabs, 'value', $scope.ngModel);\n                ctrl.select(index);\n            }\n        };\n\n        ctrl.isTabHead = function (node) {\n            return node.tagName && node.hasAttribute('slot') && node.attributes[\"slot\"].nodeValue == \"label\";\n        }\n\n        $scope.$on('$destroy', function () {\n            destroyed = true;\n        });\n\n        $scope.$watch('ngModel', function (oldVal, newVal) {\n            if (newVal) {\n                var index = xueUtilArray.findObjIndex(ctrl.tabs, 'value', newVal);\n                ctrl.select(index);\n            }\n        });\n\n    }])\n    .directive('xueTab', [function () {\n        return {\n            restrict: 'E',\n            require: '^xueTabsWrap',\n            replace: true,\n            transclude: true,\n            scope: {\n                label: '=',\n                value: '=',\n                disabled: '=',\n                closable: '=',\n                onSelect: '&select',\n                onDeselect: '&deselect'\n            },\n            templateUrl: function (element, attrs) {\n                return attrs.templateUrl || 'xue/template/tabs/tab.html';\n            },\n            link: function (scope, ele, attrs, ctrl, transclude) {\n                scope.select = function (evt) {\n                    if (!scope.disabled) {\n                        var index;\n                        for (var i = 0; i < ctrl.tabs.length; i++) {\n                            if (ctrl.tabs[i] === scope) {\n                                index = i;\n                                break;\n                            }\n                        }\n                        ctrl.select(index, evt);\n                    }\n                };\n                scope.$transcludeFn = transclude;\n                ctrl.addTab(scope);\n            }\n        }\n    }])\n    .directive('xueTabContent', [function () {\n        return {\n            restrict: 'A',\n            require: '^xueTabsWrap',\n            link: function (scope, elm, attrs, ctrl) {\n                var tab = scope.$eval(attrs.xueTabContent);\n                tab.$transcludeFn(tab.$parent, function (contents) {\n                    angular.forEach(contents, function (node) {\n                        if (ctrl.isTabHead(node)) {\n                            tab.headElement = node;\n                        } else {\n                            elm.append(node);\n                        }\n                    });\n                });\n            }\n        }\n    }])\n    .directive('xueTabHead', [function () {\n        return {\n            restrict: 'A',\n            require: '^xueTabsWrap',\n            link: function (scope, elm) {\n                scope.$watch('headElement', function (heading, c) {\n                    if (heading) {\n                        elm.html('');\n                        elm.append(heading);\n                    }\n                });\n            }\n        }\n    }]);","src/tree/tree.js":"angular.module('xue.tree', ['xue.util.lang', 'xue.util.array'])\r\n    .directive('xueTree',['xueUtilLang', 'xueUtilArray', '$timeout', '$templateCache', function (xueUtilLang, xueUtilArray, $timeout, $templateCache){\r\n        return {\r\n            restrict: 'E',\r\n            replace: true,\r\n            scope: {\r\n                treeConfig: '='\r\n            },\r\n            templateUrl: function (element, attrs) {\r\n                return attrs.templateUrl || 'xue/template/tree/tree.html'\r\n            },\r\n            link: function(scope,ele,attrs) {\r\n                /**\r\n                 * 树节点属性\r\n                 * @param {Object} node 树节点对象\r\n                 * @param {String} node[scope.treeConfig.nodeName] 名称\r\n                 * @param {Boolean} node.expanded 是否展开节点 false\r\n                 * @param {Boolean} node.disabled 禁止选中 false\r\n                 * @param {Boolean} node.selected 节点是否选中 false\r\n                 * @param {Boolean} node.checked 节点是否勾选 false\r\n                 * @param {Boolean} node.chkDisabled 节点复选框是否禁用 false\r\n                 * @param {String} node.iconClass 节点图标\r\n                 * @param {Array} node[scope.treeConfig.childName] 子节点列表\r\n                 */\r\n                var treeCtrl = scope.treeCtrl = {\r\n                    defaultConfig: {\r\n                        data: [], // 树列表数据\r\n                        dataMap: {}, // 树列表索引\r\n                        uniqueId: 'id', // 唯一标识字段名\r\n                        nodeName: 'name', // 节点标题字段名\r\n                        childName: 'children', // 子节点列表字段名\r\n                        showIcon: false, // 是否展示图标 false\r\n                        icon: {\r\n                            // 当showIcon为true\r\n                            // 1.如果子节点设置了iconClass,则优先展示iconClass的样式,如果没有：\r\n                            // 2.如果设置了commonIconClass,则优先展示commonIconClass, 如果没有：\r\n                            // 3.按是否有子节点来划分节点图标\r\n                            commonIconClass: '', // 所有节点统一图标\r\n                            parentIconClass: '', // 有子节点的节点图标 className\r\n                            leafIconClass: '' // 无节点的节点图标 className\r\n                        },\r\n                        search: false, // 是否支持搜索 false\r\n                        showCheckbox: false, // 是否展示复选框 false\r\n                        checkOnClick: true, // 在点击时同时勾选/取消勾选节点 showCheckbox为true生效\r\n                        checkNodes: [], // 勾选的节点数组\r\n                        lazy: false, // 是否懒加载子节点数据 fasle\r\n                        expandAll: false, // 是否展开所有节点 false\r\n                        expandOnClick: false, // 是否在选中树节点时展开子列表 true\r\n                        accordion: false, // 是否手风琴模式 false\r\n                        currentNode: '', // 定位选中指定节点\r\n                        showLine: true, // 是否展示连接线\r\n                        clickNode: function(){}, // 单击树节点时回调\r\n                        checkNode: function(){}, // 勾选/取消勾选的事件回调\r\n                        beforeClick: function(){}, // 单击树节点之前的事件回调\r\n                        beforeCheck: function(){}, // 勾选、取消勾选树节点之前的事件回调\r\n                        loadData: function(){}, // 加载子节点数据的方法，仅当 lazy 属性为true 时生效\r\n                        completeTree: function(){} // 树节点构建完成时回调\r\n                    },\r\n                    // 初始化\r\n                    init: function() {\r\n                        var self = this;\r\n                        scope.treeConfig = angular.extend(self.defaultConfig, scope.treeConfig || {});\r\n                    },\r\n                    // 初始化树\r\n                    initTreeData: function (data, depth, parentId) {\r\n                        var self = this;\r\n                        angular.forEach(data, function(item, index) {\r\n                            // 树深度\r\n                            item.depth = depth;\r\n                            // 父节点索引\r\n                            if (parentId != undefined) {\r\n                                item.parent = parentId;\r\n                            } else {\r\n                                // 根节点默认展开\r\n                                if (index == 0) {\r\n                                    item.expanded = true; \r\n                                }\r\n                            }\r\n                            // 复选框初始化\r\n                            if (self.defaultConfig.showCheckbox) {\r\n                                if (item.checked) {\r\n                                    item.checked = 1;\r\n                                    scope.treeConfig.checkNodes.push(item);\r\n                                    if (item[scope.treeConfig.childName] && item[scope.treeConfig.childName].length) {\r\n                                        self.judgeHalfCheck(item, item);\r\n                                    }\r\n                                } else {\r\n                                    item.checked = 0;\r\n                                }\r\n                            }\r\n                            // 全部展开\r\n                            if (scope.treeConfig.expandAll) {\r\n                                item.expanded = true;\r\n                            }\r\n                            // 树节点索引\r\n                            scope.treeConfig.dataMap[item[scope.treeConfig.uniqueId]] = item;\r\n                            // 子节点递归\r\n                            if (item[scope.treeConfig.childName] && item[scope.treeConfig.childName].length) {\r\n                                self.initTreeData(item[scope.treeConfig.childName], depth + 1, item[scope.treeConfig.uniqueId]);\r\n                            } else {\r\n                                // 非懒加载时定义叶子节点\r\n                                if (!scope.treeConfig.lazy) {\r\n                                    item.isLeaf = true;\r\n                                }\r\n                            }\r\n                        });\r\n                        // 树构建完成回调\r\n                        if (parentId == undefined) {\r\n                            if (xueUtilLang.isFunction(scope.treeConfig.completeTree)) {\r\n                                scope.treeConfig.completeTree();\r\n                            }\r\n                        }\r\n                    },\r\n                    // 搜索关键字\r\n                    searchText: '',\r\n                    // 搜索功能\r\n                    filterNode: function(data) {\r\n                        var self = this;\r\n                        var hideLen = 0;\r\n                        angular.forEach(data, function(item) {\r\n                            if (!item.isLeaf) {\r\n                                self.filterNode(item[scope.treeConfig.childName]);\r\n                            } else {\r\n                                // 节点未包含搜索关键字，当其兄弟节点全都未包含搜索关键字时，父节点才隐藏\r\n                                if (item[scope.treeConfig.nodeName].indexOf(self.searchText) == -1) {\r\n                                    item.hideNode = true;\r\n                                    if (item.parent) {\r\n                                        hideLen++;\r\n                                        if (scope.treeConfig.dataMap[item.parent][scope.treeConfig.childName].length == hideLen) {\r\n                                            scope.treeConfig.dataMap[item.parent].hideNode = true;\r\n                                        }\r\n                                    }\r\n                                } else {\r\n                                // 节点包含搜索关键字，其父节点也取消隐藏\r\n                                    item.hideNode = false;\r\n                                    if (item.parent) {\r\n                                        scope.treeConfig.dataMap[item.parent].hideNode = false; \r\n                                    }\r\n                                }\r\n                            }\r\n                        })\r\n                    },\r\n                    // 当前选中节点\r\n                    currentSelectedNode: '',\r\n                    // 单击延时\r\n                    clickTimer: null,\r\n                    // 单击行\r\n                    clickNode: function (node, event, ifSearch) {\r\n                        var self = this;\r\n                        // 取消上次延时未执行的方法\r\n                        $timeout.cancel(self.clickTimer);\r\n                        //执行延时\r\n                        self.clickTimer = $timeout(function() {\r\n                            if (node.disabled) {\r\n                                return;\r\n                            }\r\n                            // 搜索框点击节点定位\r\n                            if (ifSearch) {\r\n                                self.positionNode(node);\r\n                                if (scope.treeConfig.showCheckbox) {\r\n                                    self.changeNode(node);\r\n                                }\r\n                            }\r\n                            // 点击节点前回调\r\n                            if (xueUtilLang.isFunction(scope.treeConfig.beforeClick)) {\r\n                                var clickFlag = scope.treeConfig.beforeClick(node);\r\n                                if (clickFlag === false) {\r\n                                    return;\r\n                                }\r\n                            }\r\n                            // 勾选节点\r\n                            if (scope.treeConfig.showCheckbox && scope.treeConfig.checkOnClick && !node.chkDisabled) {\r\n                                self.changeNode(node, event);\r\n                            }\r\n                            // 展开节点\r\n                            if (scope.treeConfig.expandOnClick) {\r\n                                self.expandNode(node);\r\n                            }\r\n                            // 当前节点赋值\r\n                            self.currentSelectedNode = node[scope.treeConfig.uniqueId];\r\n                            // 点击节点完成回调\r\n                            if (xueUtilLang.isFunction(scope.treeConfig.clickNode)) {\r\n                                scope.treeConfig.clickNode(node);\r\n                            }\r\n                            if (event) {\r\n                                event.stopPropagation();\r\n                            }\r\n                        }, 300);\r\n                    },\r\n                    // 双击行\r\n                    dblClickNode: function(node, event) {\r\n                        var self = this;\r\n                        $timeout.cancel(self.clickTimer);\r\n                        self.expandNode(node, event);\r\n                    },\r\n                    // 展开节点\r\n                    expandNode: function (node, event) {\r\n                        var self = this;\r\n                        if (node.isLeaf) {\r\n                            return;\r\n                        }\r\n                        node.expanded = !node.expanded;\r\n                        // 手风琴模式\r\n                        if (node.expanded && scope.treeConfig.accordion) {\r\n                            self.collapseNode(node);\r\n                        }\r\n                        // 懒加载子节点数据\r\n                        if (scope.treeConfig.lazy && xueUtilLang.isFunction(scope.treeConfig.loadData) \r\n                            && !node[scope.treeConfig.childName]) {\r\n                            self.loadData(node);\r\n                        }\r\n                        if (event) {\r\n                            event.stopPropagation();\r\n                        }\r\n                    },\r\n                    // 勾选/取消勾选节点\r\n                    changeNode: function (node, event, parentCheck) {\r\n                        var self = this;\r\n                        // 勾选节点前回调\r\n                        if (xueUtilLang.isFunction(scope.treeConfig.beforeCheck)) {\r\n                            var checkFlag = scope.treeConfig.beforeCheck(node);\r\n                            if (checkFlag === false) {\r\n                                return;\r\n                            }\r\n                        }\r\n                        // 父节点取消选中 子节点也取消\r\n                        if (parentCheck == 0) {\r\n                        node.checked = 0; \r\n                        } else {\r\n                            if (node.checked == 0) {\r\n                                node.checked = 1;\r\n                            } else {\r\n                                node.checked = 0;\r\n                            }\r\n                        }\r\n                        // 勾选列表赋值\r\n                        var checkIndex = xueUtilArray.findObjIndex(scope.treeConfig.checkNodes, scope.treeConfig.uniqueId, node[scope.treeConfig.uniqueId]);\r\n                        if (node.checked == 1 && checkIndex == -1) {\r\n                            scope.treeConfig.checkNodes.push(node);\r\n                        } else if (node.checked == 0 && checkIndex != -1) {\r\n                            scope.treeConfig.checkNodes.splice(checkIndex, 1);\r\n                        }\r\n                        // 更改子节点状态\r\n                        if (node[scope.treeConfig.childName]) {\r\n                            self.checkChildren(node[scope.treeConfig.childName], node.checked);\r\n                        }\r\n                        // 更改父节点状态\r\n                        if (node.parent && parentCheck == undefined) {\r\n                            self.checkParent(node.parent);\r\n                        }\r\n                        // 勾选完成回调\r\n                        if (xueUtilLang.isFunction(scope.treeConfig.checkNode)) {\r\n                            scope.treeConfig.checkNode(node);\r\n                        }\r\n                        if (event) {\r\n                            event.stopPropagation();\r\n                        }\r\n                    },\r\n                    // 勾选/取消勾选父节点时 全选/取消全选子节点\r\n                    checkChildren: function(nodes, parentCheck) {\r\n                        var self = this;\r\n                        angular.forEach(nodes, function(item) {\r\n                            self.changeNode(item, '', parentCheck);\r\n                        })\r\n                    },\r\n                    // 勾选/取消勾选子节点 判断是否勾选/取消勾选父节点\r\n                    checkParent: function(parentId) {\r\n                        var self = this;\r\n                        var parentNode = scope.treeConfig.dataMap[parentId];\r\n                        // 子节点全勾选数量\r\n                        var totalCheck = 0;\r\n                        // 子节点半勾选数量\r\n                        var haveCheck = 0;\r\n                        angular.forEach(parentNode[scope.treeConfig.childName], function(item) {\r\n                            if (item.checked == 1) {\r\n                                totalCheck++;\r\n                            } else if (item.checked == 2) {\r\n                                haveCheck++;\r\n                            }\r\n                        })\r\n                        // 全勾选的子节点数量等于全部子节点 父节点也全勾选\r\n                        if (totalCheck == parentNode[scope.treeConfig.childName].length) {\r\n                            parentNode.checked = 1;\r\n                            scope.treeConfig.checkNodes.push(parentNode);\r\n                        } else if (totalCheck > 0) {\r\n                            // 存在勾选的子节点  则父节点半勾选\r\n                            parentNode.checked = 2;\r\n                            scope.treeConfig.checkNodes.push(parentNode);\r\n                        } else if (totalCheck == 0) {\r\n                            if (haveCheck > 0) {\r\n                                parentNode.checked = 2;\r\n                                scope.treeConfig.checkNodes.push(parentNode);\r\n                            } else {\r\n                                // 不存在勾选的子节点 父节点不勾选\r\n                                parentNode.checked = 0;\r\n                            }\r\n                        }\r\n                        // 递归父节点\r\n                        if (parentNode.parent) {\r\n                            self.checkParent(parentNode.parent);\r\n                        }\r\n                    },\r\n                    offsetTop: 0,\r\n                    // 搜索时定位选中指定节点\r\n                    positionNode: function(node, ifParent) {\r\n                        var self = this;\r\n                        // 展开父节点\r\n                        if (node.parent) {\r\n                            var parant = scope.treeConfig.dataMap[node.parent];\r\n                            parant.expanded = true;\r\n                            // 手风琴模式\r\n                            if (scope.treeConfig.accordion) {\r\n                                self.collapseNode(node);\r\n                            }\r\n                            self.positionNode(parant, 'parent');\r\n                            $timeout(function() {\r\n                                self.offsetTop += document.getElementById('node_' + parant[scope.treeConfig.uniqueId]).offsetTop;\r\n                            })\r\n                        }\r\n                        // 定位选中 选中节点滚动到列表中间\r\n                        if (!ifParent) {\r\n                            self.currentSelectedNode = node[scope.treeConfig.uniqueId];\r\n                            $timeout(function() {\r\n                                var needScroll = document.getElementById('node_' + self.currentSelectedNode).offsetTop + self.offsetTop - (ele[0].offsetHeight / 2);\r\n                                if (needScroll > 0) {\r\n                                    ele[0].scrollTop = needScroll;\r\n                                } else {\r\n                                    ele[0].scrollTop = 0;\r\n                                }\r\n                                self.offsetTop = 0;\r\n                            })\r\n                        }\r\n                    },\r\n                    // 手风琴模式收起其兄弟节点\r\n                    collapseNode: function (node) {\r\n                        var nodeList;\r\n                        if (node.parent) {\r\n                            nodeList = scope.treeConfig.dataMap[node.parent][scope.treeConfig.childName];\r\n                        } else {\r\n                            // 根节点\r\n                            nodeList = scope.treeConfig.data;\r\n                        }\r\n                        if (nodeList.length > 1) {\r\n                            angular.forEach(nodeList, function(item) {\r\n                                if (item[scope.treeConfig.uniqueId] != node[scope.treeConfig.uniqueId]) {\r\n                                    item.expanded = false;\r\n                                }\r\n                            })\r\n                        }\r\n                    },\r\n                    // 懒加载子节点数据\r\n                    loadData: function(node) {\r\n                        node.loading = true;\r\n                        scope.treeConfig.loadData(node, function(data) {\r\n                            // 业务数据回调\r\n                            if (data && data.length) {\r\n                                self.initTreeData(data, node.depth + 1, node[scope.treeConfig.uniqueId]);\r\n                                node[scope.treeConfig.childName] = data;\r\n                            } else {\r\n                                node.isLeaf = true;\r\n                            }\r\n                            node.loading = false;\r\n                        })\r\n                    },\r\n                    // 判断当前勾选节点是选中还是半选中\r\n                    judgeHalfCheck: function(nodes, parentNode) {\r\n                        var self = this;\r\n                        angular.forEach(nodes[scope.treeConfig.childName], function(item) {\r\n                            if (!item.checked) {\r\n                                parentNode.checked = 2;\r\n                            } else if (item[scope.treeConfig.childName] && item[scope.treeConfig.childName].length) { \r\n                                self.judgeHalfCheck(item, parentNode);\r\n                            }\r\n                        })\r\n                    }\r\n                }\r\n                treeCtrl.init();\r\n\r\n                //格式化\r\n                var unbindWatch = scope.$watch('treeConfig.data',function(newValue,oldValue){\r\n                    if (newValue.length) {\r\n                        treeCtrl.initTreeData(newValue, 1);\r\n                    }\r\n                });\r\n                var unbindWatch1 = scope.$watch('treeConfig.currentNode',function(newValue,oldValue){\r\n                    if (newValue) {\r\n                        treeCtrl.positionNode(scope.treeConfig.dataMap[newValue]);\r\n                    } else {\r\n                        treeCtrl.currentSelectedNode = '';\r\n                    }\r\n                });\r\n                scope.$on(\"$destroy\", function() {\r\n                    unbindWatch();\r\n                    unbindWatch1();\r\n                    $templateCache.remove('xue/template/tree/tree.html');\r\n                })\r\n            }\r\n        }\r\n    }])","src/util/array.js":"angular.module('xue.util.array', []).service('xueUtilArray', [\n    function () {\n        /**\n         * 数组去重,数组元素为string\n         *\n         * @param {any} arr\n         * @returns\n         */\n        this.uniq = function (arr) {\n            var res = [];\n            var json = {};\n            for (var i = 0; i < arr.length; i++) {\n                if (!json[arr[i]]) {\n                    res.push(arr[i]);\n                    json[arr[i]] = 1;\n                }\n            }\n            return res;\n        };\n        /**\n         * 数组去重,数组元素为json\n         *\n         * @param {any} arr\n         * @param {any} key\n         * @returns\n         */\n        this.uniqJson = function (arr, key) {\n            var res = [];\n            var json = {};\n            angular.forEach(arr, function (item) {\n                if (!json[item[key]]) {\n                    res.push(item);\n                    json[item[key]] = 1;\n                }\n            });\n            return res;\n        };\n        /**\n         * 数组快速排序（数组对象为int型）\n         *\n         * @param {any} array\n         * @returns\n         */\n        /*eslint complexity: [\"error\", 7]*/\n        this.quickSort = function (array) {\n            function sort(prev, numsize) {\n                var nonius = prev;\n                var j = numsize - 1;\n                var flag = array[prev];\n                // eslint-disable-next-line no-extra-parens\n                if ((numsize - prev) > 1) {\n                    while (nonius < j) {\n                        for (; nonius < j; j--) {\n                            if (array[j] < flag) {\n                                //a[i] = a[j]; i += 1;\n                                array[nonius++] = array[j];\n                                break;\n                            }\n                        }\n                        for (; nonius < j; nonius++) {\n                            if (array[nonius] > flag) {\n                                array[j--] = array[nonius];\n                                break;\n                            }\n                        }\n                    }\n                    array[nonius] = flag;\n                    sort(0, nonius);\n                    sort(nonius + 1, numsize);\n                }\n            }\n            sort(0, array.length);\n            return array;\n        };\n        /**\n         * 从数组中查找对象属性值，返回下标（同用于判断数组中是否存在某对象）\n         * ps：数组对象为json\n         * @param {any} arr\n         * @param {any} key\n         * @param {any} value\n         * @returns\n         */\n        this.findObjIndex = function (arr, key, value) {\n            try {\n                for (var i = 0; i < arr.length; i++) {\n                    if (arr[i][key] === value) {\n                        return i;\n                    }\n                }\n                return -1;\n            } catch (e) {\n                return -1;\n            }\n        };\n        /**\n         * 从数组中查找值，返回下标（同用于判断数组中是否存在某对象）\n         * ps:数组对象为string\n         * @param {any} arr\n         * @param {any} value\n         * @returns\n         */\n        this.findStrIndex = function (arr, value) {\n            for (var i = 0; i < arr.length; i++) {\n                if (arr[i] === value) {\n                    return i;\n                }\n            }\n            return -1;\n        };\n        /**\n         * 从数组中查找对象值，返回数组\n         * ps：数组对象为数组\n         * @param {any} arr\n         * @param {any} key\n         * @param {any} valueArr\n         * @returns\n         */\n        this.findInArrByKeys = function (arr, key, valueArr) {\n            var ret = [];\n            try {\n                for (var i = 0; i < arr.length; i++) {\n                    for (var j in valueArr) {\n                        if (arr[i][key] == valueArr[j]) {\n                            ret.push(arr[i]);\n                            valueArr.splice(j, 1);\n                        }\n                    }\n                    if (valueArr.length == 0) {\n                        return ret;\n                    }\n                }\n                return ret;\n            } catch (e) {\n                return ret;\n            }\n        };\n\n    }\n]);","src/util/collection.js":"angular.module('xue.util.collection', ['xue.util.lang'])\n    .service('xueUtilCollect', [\"xueUtilLang\", function (xueUtilLang) {\n        /**\n         * 从数组中查找对象值，返回数组\n         * ps：数组元素为json，匹配对象为数组\n         * @param {any} arr\n         * @param {any} key\n         * @param {any} valueArr\n         * @returns\n         */\n        this.findWithArray = function (arr, key, valueArr) {\n            var ret = [];\n            for (var i = 0; i < arr.length; i++) {\n                for (var j in valueArr) {\n                    if (arr[i][key] === valueArr[j]) {\n                        ret.push(arr[i]);\n                        valueArr.splice(j, 1);\n                    }\n                }\n                if (valueArr.length === 0) {\n                    return ret;\n                }\n            }\n            return ret;\n        };\n        /**\n         * 从数组中查找对象值，返回对象\n         * ps：数组元素为json\n         * @param {any} arr\n         * @param {any} key\n         * @param {any} value\n         * @returns\n         */\n        this.findWithVal = function (arr, key, value) {\n            try {\n                for (var i = 0; i < arr.length; i++) {\n                    if (arr[i][key] === value) {\n                        return arr[i];\n                    }\n                }\n                return '';\n            } catch (e) {\n                return '';\n            }\n        };\n        /**\n         * 移除对象中值为空的项\n         *\n         * @param {obj} obj\n         * @returns\n         */\n        this.removeEmptyField = function (json) {\n            var newJson = {};\n            angular.forEach(json, function (item, i) {\n                if (item) {\n                    newJson[i] = item;\n                }\n            });\n            return newJson;\n        };\n        /**\n         * 移除数组中对象某属性值为空的项\n         *\n         * @param {array} array\n         * @returns\n         */\n        this.removeEmptyItem = function (array) {\n            var newArray = [];\n            for (var i = 0; i < array.length; i++) {\n                var newObj = {};\n                for (var j in array[i]) {\n                    if (array[i][j]) {\n                        newObj[j] = array[i][j];\n                    }\n                }\n                newArray.push(newObj);\n            }\n            return newArray;\n        };\n        /**\n         * 根据数组中对象的某个属性进行排序\n         * @param {Array} arr 数组\n         * @param {String} field 字段名\n         * @param {Boolean} order 排序方式 默认正序 true 倒序 false\n         * @param {String} type 排序类型 默认为0 数值类型 0 字符类型 1\n         */\n        /*eslint complexity: [\"error\", 8]*/\n        this.sortByfield = function (arr, field, order, type) {\n            var res = [];\n            if (arr.length && field) {\n                if (typeof order === 'undefined') {\n                    order = true;\n                } else {\n                    order = !!order;\n                }\n                if (typeof type === 'undefined') {\n                    type = isNaN(parseInt(arr[0][field], 0)) ? 1 : 0;\n                } else {\n                    type = type === 1 ? 1 : 0;\n                }\n                if (type === 0) {\n                    var compare = function () {\n                        return function (a, b) {\n                            var res;\n                            if (order) {\n                                res = a[field] - b[field];\n                            } else {\n                                res = b[field] - a[field];\n                            }\n                            return res;\n                        };\n                    };\n                    arr.sort(compare(field, order));\n                } else {\n                    var compareStr = function () {\n                        var e = order ? 1 : -1;\n                        return function (a, b) {\n                            var res;\n                            if (a[field] < b[field]) {\n                                res = -1 * e;\n                            } else if (a[field] > b[field]) {\n                                res = 1 * e;\n                            } else {\n                                res = 0;\n                            }\n                            return res;\n                        };\n                    };\n                    arr.sort(compareStr(field, order));\n                }\n                res = arr;\n            }\n            return res;\n        };\n        /**\n         * 判断是几维数组(返回数组中最大的维度)\n         */\n        this.arrDimension = function (arr, dimension) {\n            if (!dimension) {\n                dimension = 0;\n            }\n            var res;\n            if (arr instanceof Array) {\n                dimension++;\n                var maxDimension = 0,\n                    tempDimension = dimension,\n                    temp = 0;\n                for (var i = 0; i < arr.length; i++) {\n                    temp = this.arrDimension(arr[i], tempDimension);\n                    if (temp > maxDimension) {\n                        maxDimension = temp;\n                    }\n                }\n                res = maxDimension;\n            } else {\n                res = dimension;\n            }\n            return res;\n        };\n        /**\n         * 获取字节长度（英文数字占1个字符，中文汉字占2个字符）\n         * @param {string} str \n         */\n        this.getByteLen = function (str) {\n            var len = 0;\n            for (var i = 0; i < str.length; i++) {\n                var c = str.charCodeAt(i);\n                //单字节加1\n                if (c >= 0x0001 && c <= 0x007e || c >= 0xff60 && c <= 0xff9f) {\n                    len++;\n                } else {\n                    len += 2;\n                }\n            }\n            return len;\n        };\n        /**\n         * 按长度切割数组/字符串\n         * @param {array/string} param \n         * @param {int} len 中文字符长度，通过字节长度来切割的，则字节长度为len的两倍\n         * @param {bool} isByteLen 是否是字节长度 (目前仅字符串支持通过字节长度切割)\n         */\n        /*eslint complexity: [\"error\", 10]*/\n        this.sliceByLen = function (param, len, isByteLen) {\n            try {\n                var newArr = [],\n                    i;\n                if (isByteLen && xueUtilLang.isType(param || '', 'string')) {\n                    var byteLen = len * 2,\n                        tempStr = '',\n                        tempCount = 0;\n                    for (i = 0; i < param.length; i++) {\n                        tempCount += this.getByteLen(param.charAt(i));\n                        tempStr += param.charAt(i);\n                        if (tempCount >= byteLen) {\n                            newArr.push(tempStr);\n                            tempStr = '';\n                            tempCount = 0;\n                        }\n                    }\n                    if (tempCount) {\n                        newArr.push(tempStr);\n                    }\n                } else {\n                    var sliceTime = Math.ceil(param.length / len);\n                    for (i = 0; i < sliceTime; i++) {\n                        newArr.push(param.slice(i * len, i * len + len));\n                    }\n                }\n                return newArr;\n            } catch (e) {\n                return param || [];\n            }\n        };\n    }]);","src/util/date.js":"angular.module('xue.util.date', ['xue.util.lang', 'xue.util.string'])\n    .service('xueUtilDate', ['xueUtilLang', 'xueUtilString', function (xueUtilLang, xueUtilString) {\n        var self = this;\n        /**\n         * 将符合时间格式的字符串转化为Date对象\n         * 根据给定格式格式化时间 时间可以是标准时间或者符合时间格式的字符串\n         * @param {any} date /Mon Nov 20 2017 14:28:48 GMT+0800 (中国标准时间)/ 2020-2-20\n         * @param {string} fmt 可选 时间格式 默认YYYY-MM-DD hh:mm:ss\n         * @returns {String} /2016-01-01 23:59:59/\n         */\n        this.translateDate = function (date) {\n            var tmp = new Date(date);\n            if (xueUtilLang.isValidDate(tmp)) {\n                var tmp1 = new Date(date.replace(/-/g,\"/\"));\n                if (!xueUtilLang.isValidDate(tmp1)) {\n                    date = tmp1;\n                } else {\n                    return \"Invalid Date\";\n                }\n            } else {\n                date = tmp;\n            }\n            return date;\n        }\n        /**\n         * 格式化时间\n         * 根据给定格式格式化时间 时间可以是标准时间或者符合时间格式的字符串\n         * @param {any} date /Mon Nov 20 2017 14:28:48 GMT+0800 (中国标准时间)/ 2020-2-20\n         * @param {string} fmt 可选 时间格式 默认YYYY-MM-DD hh:mm:ss\n         * @returns {String} /2016-01-01 23:59:59/\n         */\n        this.formatDate = function (date, fmt) {\n            date = self.translateDate(date);\n            if (!xueUtilLang.isDate(date)) {\n                return date;\n            }\n            fmt = fmt ? fmt : \"YYYY-MM-DD hh:mm:ss\";\n            var opt = {\n                \"Y+\": date.getFullYear().toString(), // 年\n                \"M+\": (date.getMonth() + 1).toString(), // 月\n                \"D+\": date.getDate().toString(), // 日\n                \"h+\": date.getHours().toString(), // 时\n                \"m+\": date.getMinutes().toString(), // 分\n                \"s+\": date.getSeconds().toString() // 秒\n                // 有其他格式化字符需求可以继续添加，必须转化成字符串\n            };\n            for (var k in opt) {\n                var ret = new RegExp(\"(\" + k + \")\").exec(fmt);\n                if (ret) {\n                    fmt = fmt.replace(ret[1], (ret[1].length == 1) ? (opt[k]) : (xueUtilString.padChars(opt[k], ret[1].length, 'start', '0')))\n                }\n            }\n            return fmt;\n        }\n        /**\n         * 获取当前时间\n         * @param {string} fmt 可选 时间格式 默认YYYY-MM-DD hh:mm:ss\n         * 获取当前年月日 YYYY-MM-DD\n         * 获取当前时分秒 hh:mm:ss\n         * @returns {String} /2016-01-01 23:59:59/\n         */\n        this.getCurrentFmtDate = function (fmt) {\n            var date = new Date();\n            return self.formatDate(date, fmt);\n        }\n        /**\n         * 获取指日期增加(减少)年/月/日/时/分/秒 之后的时间\n         * @param {string} dateStr 指定时间\n         * @param {number} number 需要增加或减少的数值 正数指定时间增加 负数初始时间减少 \n         * @param {string} type 需要增加(减少)的时间类型 years/months/days/hours/minutes/seconds\n         * @param {string} fmt 可选 时间格式 默认YYYY-MM-DD hh:mm:ss\n         * @returns {string}\n         */\n        this.dateAddNum = function (dateStr, type, number, fmt) {\n            var tempDate = self.translateDate(dateStr); // 把日期字符串转换成日期格式\n            if (!xueUtilLang.isDate(tempDate)) {\n                return tempDate;\n            }\n            switch (type) {\n                case \"years\":\n                    tempDate.setFullYear(tempDate.getFullYear() + number);\n                    break;\n                case \"months\":\n                    tempDate.setMonth(tempDate.getMonth() + number);\n                    break;\n                case \"days\":\n                    tempDate.setDate(tempDate.getDate() + number);\n                    break;\n                case \"hours\":\n                    tempDate.setHours(tempDate.getHours() + number);\n                    break;\n                case \"minutes\":\n                    tempDate.setMinutes(tempDate.getMinutes() + number);\n                    break;\n                case \"seconds\":\n                    tempDate.setSeconds(tempDate.getSeconds() + number);\n                    break;\n            }\n            return self.formatDate(tempDate, fmt);\n        }\n        /**\n         * 获取日期最大值\n         * 根据距 1970年1月1日 的毫秒数来比较获取日期的最大值\n         * \n         * @param {arr} dateArr 需要比较的日期数组 数组项可以是标准时间或者符合时间格式的字符串\n         * @returns {string}\n         */\n        this.maxDate = function (dateArr) {\n            if (!Array.isArray(dateArr) || !dateArr.length) {\n                return undefined;\n            }\n            if (dateArr.length === 1) {\n                return dateArr[0];\n            }\n            var max = dateArr.reduce(function (date1, date2) {\n                var d1 = new Date(date1),\n                    d2 = new Date(date2);\n                if (!xueUtilLang.isDate(d1)) {\n                    return date2;\n                } else if (!xueUtilLang.isDate(d2)) {\n                    return date1;\n                }\n                if (Date.parse(d1) - Date.parse(d2) > 0) {\n                    return date1;\n                } else {\n                    return date2;\n                }\n            })\n            if (!xueUtilLang.isDate(new Date(max))) {\n                return undefined;\n            }\n            return max;\n        }\n        /**\n         * 获取日期最小值\n         * 根据距 1970年1月1日 的毫秒数来比较获取日期的最小值\n         * \n         * @param {arr} dateArr 需要比较的日期数组 数组项可以是标准时间或者符合时间格式的字符串\n         * @returns {string}\n         */\n        this.minDate = function (dateArr) {\n            if (!Array.isArray(dateArr) || !dateArr.length) {\n                return undefined;\n            }\n            if (dateArr.length === 1) {\n                return dateArr[0];\n            }\n            var min = dateArr.reduce(function (date1, date2) {\n                var d1 = new Date(date1),\n                    d2 = new Date(date2);\n                if (!xueUtilLang.isDate(d1)) {\n                    return date2;\n                } else if (!xueUtilLang.isDate(d2)) {\n                    return date1;\n                }\n                if (Date.parse(d1) - Date.parse(d2) > 0) {\n                    return date2;\n                } else {\n                    return date1;\n                }\n            })\n            if (!xueUtilLang.isDate(new Date(min))) {\n                return undefined;\n            }\n            return min;\n        }\n        /**\n         * 获取两个日期的间隔对象\n         * 返回一个包含两个日期的天、小时、分钟、秒、毫秒及大小的对象\n         * \n         * @param {date} start 比较初始时间\n         * @param {date} end 比较结束时间\n         * @returns {obj} \n         */\n        this.timeInterval = function (start, end) {\n            var startTime = Date.parse(start.replace(/-/g, '/')); //开始时间\n            var endTime = Date.parse(end.replace(/-/g, '/')); //结束时间\n            var usedTime = Math.abs(parseFloat(startTime) - parseFloat(endTime)); //两个时间戳相差的毫秒数\n            var flag = ((startTime - endTime) > 0) ? '-' : '+';\n            var days = Math.floor(usedTime / (24 * 3600 * 1000));\n            //计算出小时数\n            var leave1 = usedTime % (24 * 3600 * 1000); //计算天数后剩余的毫秒数\n            var hours = Math.floor(leave1 / (3600 * 1000));\n            //计算相差分钟数\n            var leave2 = leave1 % (3600 * 1000); //计算小时数后剩余的毫秒数\n            var minutes = Math.floor(leave2 / (60 * 1000));\n            var seconds = Math.floor((usedTime - days * 24 * 60 * 60 * 1000 - hours * 60 * 60 * 1000 - minutes * 60 * 1000) / 1000); //取得算出分后剩余的秒数\n\n            var timeIntervalObj = {\n                days: days,\n                hours: hours,\n                minutes: minutes,\n                seconds: seconds,\n                usedTime: usedTime,\n                flag: flag\n            };\n            return timeIntervalObj;\n        };\n        /**\n         * 校验日期格式\n         * @param {String} date 2016-01-01 / 2016/01/01\n         * @returns {boolean}\n         */\n        this.checkDateFormat = function(date){\n            try{\n                var result = date.match(/^(\\d{1,4})(-|\\/)(\\d{1,2})\\2(\\d{1,2})$/);\n                if (result === null)\n                    return false;\n                var d = new Date(result[1], result[3] - 1, result[4]);\n                return (d.getFullYear() == result[1] && (d.getMonth() + 1) == result[3] && d.getDate() == result[4]);\n            }catch(e){\n                return false;\n            }\n        }\n        /**\n         * 校验时间格式\n         * @param {String} Time 00:00:00\n         * @returns {boolean}\n         */\n        this.checkTimeFormat = function(time){\n            try{\n                var regex = /^(?:(?:[0-2][0-3])|(?:[0-1][0-9])):[0-5][0-9]:[0-5][0-9]$/;\n                if(!regex.test(time)){\n                    return false\n                }else{\n                    return true;\n                }\n            }catch(e){\n                return false;\n            }\n        }\n        /**\n         * 校验日期时间格式\n         * @param {String} dateTime  2016-01-01 00:00:00 / 2016/01/01 00:00:00\n         * @returns {boolean}\n         */\n        this.checkDateTimeFormat = function(dateTime){\n            try{\n                var dateTimeArray = dateTime.split(\" \");\n                if(this.checkDateFormat(dateTimeArray[0]) && this.checkTimeFormat(dateTimeArray[1])){\n                    return true;\n                }else{\n                    return false;\n                }\n            }catch(e){\n                return false;\n            }\n        }\n    }]);","src/util/function.js":"angular.module('xue.util.function', ['xue.util.lang'])\n    .service('xueUtilFunc', [\"xueUtilLang\", function (xueUtilLang) {\n        var self = this;\n        var FUNC_ERROR_TEXT = 'Expected a function';\n        var nativeMax = Math.max,\n            nativeMin = Math.min;\n        /**\n         * 创建一个调用func的函数，通过this绑定和创建函数的参数调用func，\n         * 调用次数不超过 n 次。 之后再调用这个函数，将返回一次最后调用func的结果。\n         *\n         * @param {number} n 超过多少次不再调用func（限制调用func 的次数）\n         * @param {Function} func 限制执行的函数.\n         * @returns {Function} 返回新的限定函数.\n         */\n        this.before = function (n, func) {\n            var result;\n            if (typeof func !== 'function') {\n                throw new TypeError(FUNC_ERROR_TEXT);\n            }\n            n = parseInt(n, 0);\n            return function () {\n                if (--n >= 0) {\n                    result = func.apply(this, arguments);\n                }\n                if (n < 1) {\n                    func = undefined;\n                }\n                return result;\n            };\n        };\n        /**\n         * before的反向函数;此方法创建一个函数，当他被调用n或更多次之后将马上触发func\n         * \n         * @param {number} n 方法应该在调用多少次后才执行.\n         * @param {Function} func 用来限定的函数.\n         * @returns {Function} 返回新的限定函数.\n         */\n        this.after = function (n, func) {\n            if (typeof func !== 'function') {\n                throw new TypeError(FUNC_ERROR_TEXT);\n            }\n            n = parseInt(n, 0);\n            return function () {\n                if (--n < 1) {\n                    return func.apply(this, arguments);\n                }\n            };\n        };\n        /**\n         * 创建一个 debounced（防抖动）函数，该函数会从上一次被调用后，延迟 wait 毫秒后调用 func 方法。\n         *  debounced（防抖动）函数提供一个 cancel 方法取消延迟的函数调用以及 flush 方法立即调用。\n         *  可以提供一个 options（选项） 对象决定如何调用 func 方法，options.leading 与|或 options.trailing \n         * 决定延迟前后如何触发（是 先调用后等待 还是 先等待后调用）。 \n         * func 调用时会传入最后一次提供给 debounced（防抖动）函数 的参数。 \n         * 后续调用的 debounced（防抖动）函数返回是最后一次 func 调用的结果\n         *\n         * 注意: 如果 leading 和 trailing 选项为 true, 则 func 允许 trailing 方式调用的条件为: \n         * 在 wait 期间多次调用防抖方法。如果 wait 为 0 并且 leading 为 false, func调用将被推迟到下一个点，\n         * 类似setTimeout为0的超时。\n         *\n         * @param {Function} func 要防抖动的函数.\n         * @param {number} [wait=0] 需要延迟的毫秒数.\n         * @param {Object} [options={}] 选项对象.\n         * @param {boolean} [options.leading=false] 指定在延迟开始前调用\n         * @param {number} [options.maxWait] 设置 func 允许被延迟的最大值\n         * @param {boolean} [options.trailing=true] 指定在延迟结束后调用\n         * @returns {Function} 返回新的 debounced（防抖动）函数.\n         */\n        /*eslint complexity: [\"error\", 7]*/\n        this.debounce = function (func, wait, options) {\n            var lastArgs,\n                lastThis,\n                maxWait,\n                result,\n                timerId,\n                lastCallTime,\n                lastInvokeTime = 0,\n                leading = false,\n                maxing = false,\n                trailing = true;\n\n            if (typeof func !== 'function') {\n                throw new TypeError(FUNC_ERROR_TEXT);\n            }\n            wait = Number(wait) || 0;\n            if (xueUtilLang.isObject(options)) {\n                leading = !!options.leading;\n                maxing = 'maxWait' in options;\n                maxWait = maxing ? nativeMax(Number(options.maxWait) || 0, wait) : maxWait;\n                trailing = 'trailing' in options ? !!options.trailing : trailing;\n            }\n\n            function invokeFunc(time) {\n                var args = lastArgs,\n                    thisArg = lastThis;\n\n                lastArgs = lastThis = undefined;\n                lastInvokeTime = time;\n                result = func.apply(thisArg, args);\n                return result;\n            }\n\n            function leadingEdge(time) {\n                // Reset any `maxWait` timer.\n                lastInvokeTime = time;\n                // Start the timer for the trailing edge.\n                timerId = setTimeout(timerExpired, wait);\n                // Invoke the leading edge.\n                return leading ? invokeFunc(time) : result;\n            }\n\n            function remainingWait(time) {\n                var timeSinceLastCall = time - lastCallTime,\n                    timeSinceLastInvoke = time - lastInvokeTime,\n                    timeWaiting = wait - timeSinceLastCall;\n\n                return maxing ?\n                    nativeMin(timeWaiting, maxWait - timeSinceLastInvoke) :\n                    timeWaiting;\n            }\n\n            function shouldInvoke(time) {\n                var timeSinceLastCall = time - lastCallTime,\n                    timeSinceLastInvoke = time - lastInvokeTime;\n\n                // Either this is the first call, activity has stopped and we're at the\n                // trailing edge, the system time has gone backwards and we're treating\n                // it as the trailing edge, or we've hit the `maxWait` limit.\n                return lastCallTime === undefined || timeSinceLastCall >= wait ||\n                    timeSinceLastCall < 0 || maxing && timeSinceLastInvoke >= maxWait;\n            }\n\n            function timerExpired() {\n                var time = Date.now();\n                if (shouldInvoke(time)) {\n                    return trailingEdge(time);\n                }\n                // Restart the timer.\n                timerId = setTimeout(timerExpired, remainingWait(time));\n            }\n\n            function trailingEdge(time) {\n                timerId = undefined;\n\n                // Only invoke if we have `lastArgs` which means `func` has been\n                // debounced at least once.\n                if (trailing && lastArgs) {\n                    return invokeFunc(time);\n                }\n                lastArgs = lastThis = undefined;\n                return result;\n            }\n\n            function cancel() {\n                if (timerId !== undefined) {\n                    clearTimeout(timerId);\n                }\n                lastInvokeTime = 0;\n                lastArgs = lastCallTime = lastThis = timerId = undefined;\n            }\n\n            function flush() {\n                return timerId === undefined ? result : trailingEdge(Date.now());\n            }\n\n            function debounced() {\n                var time = Date.now(),\n                    isInvoking = shouldInvoke(time);\n\n                lastArgs = arguments;\n                lastThis = this;\n                lastCallTime = time;\n\n                if (isInvoking) {\n                    if (timerId === undefined) {\n                        return leadingEdge(lastCallTime);\n                    }\n                    if (maxing) {\n                        // Handle invocations in a tight loop.\n                        clearTimeout(timerId);\n                        timerId = setTimeout(timerExpired, wait);\n                        return invokeFunc(lastCallTime);\n                    }\n                }\n                if (timerId === undefined) {\n                    timerId = setTimeout(timerExpired, wait);\n                }\n                return result;\n            }\n            debounced.cancel = cancel;\n            debounced.flush = flush;\n            return debounced;\n        };\n\n        /**\n         * “delay”和“defer”的基本实现，接受“args”\n         *\n         * @private\n         * @param {Function} func 延迟加载的函数.\n         * @param {number} wait 延迟秒数.\n         * @param {Array} args 提供给func的参数.\n         * @returns {number|Object} 返回计时器id或timeout对象 \n         */\n        this._baseDelay = function (func, wait, args) {\n            if (typeof func !== 'function') {\n                throw new TypeError(FUNC_ERROR_TEXT);\n            }\n            return setTimeout(function () {\n                func.apply(undefined, args);\n            }, wait);\n        };\n        /**\n         * 推迟调用func，直到当前堆栈清理完毕。 调用时，任何附加\n         * \n         * @param {Function} func 要延迟的函数.\n         * @param {...*} [args] 会在调用时传给 func 的参数.\n         * @returns {number} 返回计时器 id.\n         */\n        this.defer = function (func, args) {\n            return self._baseDelay(func, 1, args);\n        };\n        /**\n         * 延迟 wait 毫秒后调用 func。 调用时，任何附加的参数会传给func\n         *\n         * @param {Function} func 要延迟的函数.\n         * @param {number} wait 要延迟的毫秒数.\n         * @param {...*} [args] 会在调用时传入到func的参数.\n         * @returns {number} 返回计时器id.\n         */\n        this.delay = function (func, wait, args) {\n            return self._baseDelay(func, Number(wait) || 0, args);\n        };\n        /**\n         * 创建一个只能调用 func 一次的函数。 重复调用返回第一次调用的结果。 \n         * func 调用时， this 绑定到创建的函数，并传入对应参数。\n         *\n         * @param {Function} func 指定的触发的函数.\n         * @returns {Function} 返回新的受限函数.\n         */\n        this.once = function (func) {\n            return self.before(1, func);\n        };\n        /**\n         * 创建一个函数，调用func时，this绑定到创建的新函数，把参数作为数组传入，类似于 Function#apply\n         *\n         * @param {Function} func 要应用传播参数的函数.\n         * @param {number} [start=0] spread 参数的开始位置.\n         * @returns {Function} 返回新的函数.\n         */\n        this.spread = function (func, start) {\n            if (typeof func !== 'function') {\n                throw new TypeError(FUNC_ERROR_TEXT);\n            }\n            start = !start ? 0 : nativeMax(parseInt(start, 0), 0);\n            return function () {\n                var args = Array.prototype.slice.call(arguments);\n                var array = args[start],\n                    otherArgs = args.slice(0, start);\n\n                if (array) {\n                    otherArgs = otherArgs.concat(array);\n                }\n                return func.apply(this, otherArgs);\n            };\n        };\n        /**\n         * 创建一个调用func的函数，thisArg绑定func函数中的 this (this的上下文为thisArg) ，\n         * 并且func函数会接收partials附加参数。\n         * \n         * @param {Function} func 绑定的函数.\n         * @param {*} thisArg 绑定的this对象.\n         * @param {...*} [partials] 附加的部分参数.\n         * @returns {Function} 返回新的绑定函数.\n         */\n        this.bind = function (func, thisArg) {\n            if (typeof func !== 'function') {\n                throw new TypeError(FUNC_ERROR_TEXT);\n            }\n            var outerArgs = Array.prototype.slice.call(arguments, 2);\n            //此处的arguments为调用此函数时传进来的参数；2代表只需要保存第二个参数之后的其他的参数\n            return function () { //返回值应该是一个函数\n                var innerArgs = Array.prototype.slice.call(arguments);\n                //此处的arguments为内部函数的参数\n                var finalArgs = outerArgs.concat(innerArgs);\n                return func.apply(thisArg, finalArgs); //使用apply方法来改变this的指向\n            };\n        };\n    }]);","src/util/lang.js":"angular.module(\"xue.util.lang\", []).service(\"xueUtilLang\", [\n    function() {\n        var self = this;\n        /** 对象类型 */\n        var objType = [\"Null\", \"Undefined\", \"Number\", \"Boolean\", \"String\", \"Object\", \"Function\", \"Array\", \"RegExp\", \"Date\"];\n\n        /**\n         * 判断是否为对象\n         *\n         * @param {any} obj\n         * @returns {boolean}\n         */\n        this.isObject = function(obj) {\n            var type = typeof obj;\n            return obj !== null && (type === \"object\" || type === \"function\");\n        };\n        /**\n         * 判断是否为函数\n         *\n         * @param {any} fn\n         * @returns {boolean}\n         */\n        this.isFunction = function(fn) {\n            return Object.prototype.toString.call(fn) === \"[object Function]\";\n        };\n        /**\n         * 判断是否为Json\n         * @param {any} json\n         * @returns {boolean}\n         */\n        this.isJson = function (json) {\n            return Object.prototype.toString.call(json) === \"[object Object]\";\n        };\n        /**\n         * 检查是否是原始Number数值型或者Number对象。\n         *\n         * @param {any} number\n         * @returns {boolean}\n         */\n        this.isNumber = function(number) {\n            return typeof number === 'number' || Object.prototype.toString.call(number) === \"[object Number]\";\n        };\n        /**\n         * 判断是否为Date对象\n         * @param {any} date\n         * @returns {boolean}\n         */\n        this.isDate = function(date) {\n            return date instanceof Date || Object.prototype.toString.call(date) === \"[object Date]\";\n        };\n        /**\n         * 检查Date对象是否为Invalid Date\n         * @param {any} date\n         * @returns {boolean}\n         */\n        this.isValidDate = function(date) {\n            return self.isDate(date) && isNaN(date.getTime())\n        }\n        /**\n         * 判断是否为图片\n         * \n         * @param {any} path\n         * @returns {boolean}\n         */\n        this.isPicture = function (path) {\n            var fileReg = /(.*).(jpg|bmp|gif|ico|pcx|jpeg|tif|png|raw|tga)$/i;\n            try {\n                return fileReg.test(path);\n            } catch (e) {\n                return false;\n            }\n        };\n        /**\n         * 判断是否为空对象\n         *\n         * @param {any} obj\n         * @returns {boolean}\n         */\n        this.isObjectEmpty = function(obj) {\n            if (Object.getOwnPropertyNames) {\n                return (Object.getOwnPropertyNames(obj).length === 0);\n            } else {\n                var k;\n                for (k in obj) {\n                    if (Object.prototype.hasOwnProperty.call(k, obj)) {\n                        return false;\n                    }\n                }\n                return true;\n            }\n        };\n        /**\n         * 判断对象类型\n         *\n         * @param {any} obj 对象object\n         * @param {any} type 对象类型\n         * @returns {boolean}\n         */\n        this.isType = function(obj, type) {\n            return this.getType(obj) === type;\n        };\n        /**\n         * 获取对象类型\n         *\n         * @param {any} obj 对象object\n         * @returns {string}\n         */\n        this.getType = function(obj) {\n            var map = {};\n            angular.forEach(objType, function(item) {\n                map[\"[object \" + item + \"]\"] = item.toLowerCase();\n            });\n            return map[Object.prototype.toString.call(obj)] || \"object\";\n        };\n        /**\n         * 复制对象\n         *\n         * @param {any} obj\n         * @param {any} deep 是否深度复制\n         * @returns {object}\n         */\n        this.copyObj = function(obj, deep) {\n            if (!self.isObject(obj)) {\n                return obj;\n            }\n            var i, target = self.isType(obj, \"array\") ? [] : {}, value, valueType;\n            for (i in obj) {\n                if (hasOwnProperty.call(obj, i)) {\n                    value = obj[i];\n                    valueType = self.getType(value);\n                    if (deep && (valueType === \"array\" || valueType === \"object\")) {\n                        target[i] = self.copyObj(value, deep);\n                    } else {\n                        target[i] = value;\n                    }\n                }\n            }\n            return target;\n        };\n        /**\n         * 匹配对象\n         * 检查对象是否包含要匹配的对象\n         *\n         * @param {any} obj 要检查的对象\n         * @param {any} source 要匹配的对象\n         * @returns {boolean}\n         */\n        this.isMatch = function(obj, source) {\n            if (!self.isObject(obj) || !self.isObject(source)) {\n                return false;\n            }\n            if (obj === source) {\n                return true;\n            }\n            var matchKeyArr = [], matchLen;\n            for (var k in Object(source)) {\n                if (hasOwnProperty.call(source, k)) {\n                    matchKeyArr.push(k);\n                }\n            }\n            matchLen = matchKeyArr.length;\n\n            while (matchLen--) {\n                var key = matchKeyArr[matchLen],\n                    value = source[key],\n                    childObj = self.isObject(value);\n                if (!obj[key]) {\n                    return false;\n                } \n                if (!childObj) {\n                    if (value !== obj[key]) {\n                        return false;\n                    }\n                } else {\n                    if (!self.isMatch(obj[key], value)) {\n                        return false;\n                    }\n                }\n            }\n            return true;\n        };\n        /**\n         * 判断是否为IE\n         */\n        this.isIE = function () {\n            return !!window.ActiveXObject || \"ActiveXObject\" in window;\n        };\n        /**\n         * 判断是否为IE8\n         */\n        this.isIE8 = function () {\n            var a = navigator.appVersion.split(\";\"), b;\n            //系统是32位时谷歌浏览器版本号没有';',长度为1,a[1]为undefined,replace方法报错\n            if (a.length > 1) {\n                b = a[1].replace(/[ ]/g, \"\");\n            } else {\n                return false;\n            }\n            return navigator.appName === \"Microsoft Internet Explorer\" && b === \"MSIE8.0\";\n        };\n    }\n]);\n","src/util/math.js":"angular.module(\"xue.util.math\", ['xue.util.lang'])\n    .service(\"xueUtilMath\", [\"xueUtilLang\", function(xueUtilLang) {\n        var self = this;\n        /**\n         * 加法（解决浮点精度问题）\n         * @param {number} number1 数值1\n         * @param {number} number2 数值2\n         */\n        this.addition = function(number1, number2) {\n            var decimalLen1, decimalLen2, maxLenPower;\n            try {\n                decimalLen1 = number1.toString().split(\".\")[1].length;\n            } catch (e) {\n                decimalLen1 = 0;\n            }\n            try {\n                decimalLen2 = number2.toString().split(\".\")[1].length;\n            } catch (e) {\n                decimalLen2 = 0;\n            }\n            maxLenPower = Math.pow(10, Math.max(decimalLen1, decimalLen2));\n            return (number1 * maxLenPower + number2 * maxLenPower) / maxLenPower;\n        };\n        /**\n         * 减法（解决浮点精度问题）\n         * @param {number} subtrahend 减数\n         * @param {number} minuend 被减数\n         */\n        this.subtraction = function(subtrahend, minuend) {\n            var decimalLen1, decimalLen2, maxLenPower, maxLen;\n            try {\n                decimalLen1 = subtrahend.toString().split(\".\")[1].length;\n            } catch (e) {\n                decimalLen1 = 0;\n            }\n            try {\n                decimalLen2 = minuend.toString().split(\".\")[1].length;\n            } catch (e) {\n                decimalLen2 = 0;\n            }\n            maxLen = Math.max(decimalLen1, decimalLen2);\n            maxLenPower = Math.pow(10, maxLen);\n            return Number(\n                ((subtrahend * maxLenPower - minuend * maxLenPower) / maxLenPower).toFixed(maxLen)\n            );\n        };\n        /**\n         * 乘法（解决浮点精度问题）\n         * @param {number} multiplier1 乘数1\n         * @param {number} multiplier2 乘数2\n         */\n        this.multiplication = function(multiplier1, multiplier2) {\n            var decimalLen = 0;\n            multiplier1 = multiplier1.toString();\n            multiplier2 = multiplier2.toString();\n            try {\n                decimalLen += multiplier1.split(\".\")[1].length;\n            } catch (e) {\n                decimalLen += 0;\n            }\n            try {\n                decimalLen += multiplier2.split(\".\")[1].length;\n            } catch (e) {\n                decimalLen += 0;\n            }\n            return Number(multiplier1.replace(\".\", \"\")) * Number(multiplier2.replace(\".\", \"\") /\n                Math.pow(10, decimalLen)\n            );\n        };\n        /**\n         * 除法（解决浮点精度问题）\n         * @param {number} divisor 除数\n         * @param {number} dividend 被除数\n         */\n        this.division = function(divisor, dividend) {\n            var decimalLen1, decimalLen2, nDivisor, nDividend;\n            try {\n                decimalLen1 = divisor.toString().split(\".\")[1].length;\n            } catch (e) {\n                decimalLen1 = 0;\n            }\n            try {\n                decimalLen2 = dividend.toString().split(\".\")[1].length;\n            } catch (e) {\n                decimalLen2 = 0;\n            }\n            nDivisor = Number(divisor.toString().replace(\".\", \"\"));\n            nDividend = Number(dividend.toString().replace(\".\", \"\"));\n            return this.multiplication(\n                nDivisor / nDividend,\n                Math.pow(10, decimalLen2 - decimalLen1)\n            );\n        };\n        /**\n         * 平均值（解决浮点精度问题）\n         * @param {arr} arr 要迭代的数组\n         */\n        this.mean = function(arr) {\n            if (!Array.isArray(arr) || !arr.length) {\n                return NaN;\n            }\n            var result, index = -1, length = arr.length;\n            while (++index < length) {\n                var current = arr[index];\n                if (current !== undefined) {\n                    result = result === undefined ? current : self.addition(result, current);\n                }\n            }\n            return result / length;\n        };\n        /**\n         * 获取数组最大值（解决浮点精度问题）\n         * @param {arr} arr 要迭代的数组\n         */\n        this.max = function(arr) {\n            if (!Array.isArray(arr) || !arr.length) {\n                return undefined;\n            }\n            var max = arr.reduce(function(a, b) {\n                if (!xueUtilLang.isNumber(a)) {\n                    return b;\n                } else if (!xueUtilLang.isNumber(b)) {\n                    return a;\n                }\n                if (self.subtraction(a, b) > 0) {\n                    return a;\n                } else {\n                    return b;\n                }\n            })\n            if (!xueUtilLang.isNumber(max)) {\n                return undefined;\n            }\n            return max;\n        };\n         /**\n         * 获取数组最小值（解决浮点精度问题）\n         * @param {arr} arr 要迭代的数组\n         */\n        this.min = function(arr) {\n            if (!Array.isArray(arr) || !arr.length) {\n                return undefined;\n            }\n            var min = arr.reduce(function(a, b) {\n                if (!xueUtilLang.isNumber(a)) {\n                    return b;\n                } else if (!xueUtilLang.isNumber(b)) {\n                    return a;\n                }\n                if (self.subtraction(a, b) < 0) {\n                    return a;\n                } else {\n                    return b;\n                }\n            })\n            if (!xueUtilLang.isNumber(min)) {\n                return undefined;\n            }\n            return min;\n        };\n         /**\n         * 数字根据精度四舍五入\n         * @param {number} number 要四舍五入的数字(包含科学计数法)\n         * @param {arr} precision 四舍五入的精度(负数表示整数位四舍五入取整)\n         */\n        this.round = function(number, precision) {\n            if (!xueUtilLang.isNumber(number)) {\n                return NaN;\n            } else if (!precision) {\n                return Math.round(number)\n            } else {\n                var pair = (number.toString() + 'e').split('e'),\n                value = Math.round(pair[0] + 'e' + (+pair[1] + precision));\n                pair = (value.toString() + 'e').split('e');\n                return +(pair[0] + 'e' + (+pair[1] - precision));\n            }\n        };\n    }\n]);\n","src/util/methods.js":"angular.module('xue.util.methods', [])\n    .service('xueUtilMethods', [function () {\n        var self = this;\n        /**\n         * 校验正则\n         */\n        this.getPattern = function () {\n            return {\n                digits: /^\\d+$/, // 验证非负整数（正整数 + 0）\n                letters: /^[a-z]+$/i, //\"请填写字母\"\n                date: /^\\d{4}-\\d{2}-\\d{2}$/, //\"请填写有效的日期，格式:yyyy-mm-dd\"\n                time: /^([01]\\d|2[0-3])(:[0-5]\\d){1,2}$/, //\"请填写有效的时间，00:00到23:59之间\"\n                email: /^[\\w]+(\\.[\\w]+)*@[a-z\\d]+(\\.[a-z\\d]+)*\\.([a-z]{2,4})$/i,// \"请填写有效的邮箱\"\n                url: /^(https?|s?ftp):\\/\\/\\S+$/i, //\"请填写有效的网址\"\n                qq: /^[1-9]\\d{4,}$/, //\"请填写有效的QQ号\"\n                IDcard: /^\\d{6}(19|2\\d)?\\d{2}(0[1-9]|1[012])(0[1-9]|[12]\\d|3[01])\\d{3}(\\d|X)?$/, //\"请填写正确的身份证号码\"\n                tel: /^(\\(\\d{3,4}\\)|\\d{3,4}-|\\s)?\\d{7,14}$/,// \"请填写有效的电话号码\"\n                mobile: /^1[3-9]\\d{9}$/,// \"请填写有效的手机号\"\n                zipcode: /^\\d{6}$/,// \"请检查邮政编码格式\"\n                chinese: /^[\\u0391-\\uFFE5]+$/, //\"请填写中文字符\"\n                username: /^\\w{3,12}$/,// \"请填写3-12位数字、字母、下划线\"\n                password: /^[\\S]{6,16}$/, //请填写6-16位字符，不能包含空格\n                ip: /^(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]{0,1}|0)(\\.(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]{0,1}|0)){3}$/, //请填写有效的IP地址\n                mac: /^([A-Fa-f0-9]{2}[-,:]){5}[A-Fa-f0-9]{2}$/, // 请填写有效的mac地址\n                TaiWan: /^[0-9]{8}([0-9]{2})?$/, // 台湾通行证、台湾居民来往大陆通行证\n                HKMacao: /^[HMhm]{1}[0-9]{8}([0-9]{2})?$/, // 港澳通行证、港澳居民来往内地通行证\n                passport: /^[a-zA-Z0-9]{5,17}$/, // 护照\n                port: /^([0-9]|[1-9]\\d|[1-9]\\d{2}|[1-9]\\d{3}|[1-5]\\d{4}|6[0-4]\\d{3}|65[0-4]\\d{2}|655[0-2]\\d|6553[0-5])$/,//端口\n                phoneNum: /^1[0-9]\\d{9}$/, // 手机号\n                \"0~100\": /^(\\d|[1-9]\\d|100)$/,\n                \"1~100\": /^([1-9]|[1-9]\\d|100)$/,\n                \"1~10\": /^([1-9]|10)$/\n            }\n        };\n        /**\n         * 校验身份证格式\n         * \n         * @param {string | number} idCard 身份证号码\n         * @return {obj}\n         */\n        this.checkIdCard = function(idCard){\n            var _this = this;\n            var iSum = 0;\n            var reg = /(^\\d{15}$)|(^\\d{18}$)|(^\\d{17}(\\d|X|x)$)/;\n            if(!reg.test(idCard))\n                return {\n                    status:false,\n                    message:'你输入的身份证长度或格式错误!'\n                };\n            idCard = idCard.replace(/x$/i,\"a\");\n            if(_this.areaID[parseInt(idCard.substr(0,2), 10)] === null)\n                return {\n                    status:false,\n                    message:'你的身份证地区非法!'\n                };\n            if(idCard.length == 18){\n                var sBirthday = idCard.substr(6,4) + \"-\" + Number(idCard.substr(10,2)) + \"-\" + Number(idCard.substr(12,2));\n                var d = new Date(sBirthday.replace(/-/g,\"/\"));\n                if(sBirthday!=(d.getFullYear()+\"-\"+ (d.getMonth()+1) + \"-\" + d.getDate()))\n                    return {\n                        status:false,\n                        message:'身份证上的出生日期非法!'\n                    };\n                for(var i = 17;i>=0;i --) \n                    iSum += (Math.pow(2,i) % 11) * parseInt(idCard.charAt(17 - i),11);\n                if(iSum%11!=1) \n                    return {\n                        status:false,\n                        message:'你输入的身份证号非法!'\n                    };\n            }\n            if(idCard.length == 15){\n                var year = idCard.substring(6,8);     \n                var month = idCard.substring(8,10);     \n                var day = idCard.substring(10,12);     \n                var temp_date = new Date(year,parseInt(month, 10)-1,parseInt(day, 10));     \n                // 对于老身份证中的你年龄则不需考虑千年虫问题而使用getYear()方法     \n                if(temp_date.getYear()!=parseInt(year, 10)||temp_date.getMonth()!=parseInt(month, 10)-1||temp_date.getDate()!=parseInt(day, 10)){     \n                    return {\n                        status:false,\n                        message:'身份证上的出生日期非法!'\n                    };    \n                }\n            }\n            //aCity[parseInt(sId.substr(0,2))]+\",\"+sBirthday+\",\"+(sId.substr(16,1)%2?\"男\":\"女\");//此次还可以判断出输入的身份证号的人性别\n            return {\n                status:true,\n                message:'校验成功！'\n            };\n        };\n        /**\n         * 生成全局的唯一标识UUID\n         */\n        this.guid = function () {\n            return (self.S4() + self.S4() + self.S4() + self.S4() + self.S4() + self.S4() + self.S4() + self.S4());\n        }\n        this.S4 = function () {\n            return (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);\n        }\n    }]);","src/util/number.js":"angular.module('xue.util.number', [])\n    .service('xueUtilNumber', [function () {\n        /**\n         * 检查 n 是否在 start 与 end 之间，但不包括 end。\n         * 如果 end 没有指定，那么 start 设置为0。 \n         * 如果 start 大于 end，那么参数会交换以便支持负范围。\n         *\n         * @param {number} number  要检查的值\n         * @param {number} start   开始范围\n         * @param {number} end     结束范围\n         * @returns\n         */\n        this.inRange = function (number, start, end) {\n            if (end === undefined) {\n                end = start;\n                start = 0;\n            }\n            return number >= Math.min(start, end) && number < Math.max(start, end);\n        };\n        /**\n         * 产生一个包括 lower 与 upper 之间的数。\n         * 如果只提供一个参数返回一个0到提供数之间的数。 \n         * 如果 floating 设为 true，或者 lower 或 upper 是浮点数，结果返回浮点数。\n         *\n         * @param {number}  lower     要检查的值\n         * @param {number}  upper     开始范围\n         * @param {boolean} floating  结束范围\n         * @returns\n         */\n        /*eslint complexity: [\"error\", { \"max\": 12 }]*/\n        this.random = function (lower, upper, floating) {\n            var INFINITY = 1 / 0,\n                MAX_INTEGER = Number.MAX_VALUE || 1.7976931348623157e308;\n\n            if (floating === undefined) {\n                if (typeof upper === \"boolean\") {\n                    floating = upper;\n                    upper = undefined;\n                } else if (typeof lower === \"boolean\") {\n                    floating = lower;\n                    lower = undefined;\n                }\n            }\n            if (lower === undefined && upper === undefined) {\n                lower = 0;\n                upper = 1;\n            } else {\n                lower = toFinite(lower);\n                if (upper === undefined) {\n                    upper = lower;\n                    lower = 0;\n                } else {\n                    upper = toFinite(upper);\n                }\n            }\n            if (lower > upper) {\n                var temp = lower;\n                lower = upper;\n                upper = temp;\n            }\n            if (floating || lower % 1 || upper % 1) {\n                return Math.min(\n                    lower +\n                    Math.random() *\n                    (upper -\n                        lower +\n                        parseFloat(\"1e-\" + ((Math.random() + \"\").length - 1))),\n                    upper\n                );\n            }\n            return lower + Math.floor(Math.random() * (upper - lower + 1));\n\n            function toFinite(value) {\n                if (!value) {\n                    return value === 0 ? value : 0;\n                }\n                value = toNumber(value);\n                if (value === INFINITY || value === -INFINITY) {\n                    var sign = value < 0 ? -1 : 1;\n                    return sign * MAX_INTEGER;\n                }\n                return isNaN(value) ? 0 : value;\n            }\n\n            function isNaN(value) {\n                return isNumber(value) && value !== +value;\n            }\n\n            function isNumber(value) {\n                return typeof value === 'number' ||\n                    isObjectLike(value) && Object.prototype.toString.call(value) === '[object Number]';\n            }\n        };\n        /**\n         * 确认所给值只在min,max之间\n         * 如果所给值是在min,max之间，那么就直接返回该值\n         * 否则返回与所给值最接近的min值或max值\n         *\n         * @param {number}  number  被限制的值\n         * @param {number}  lower   下限\n         * @param {number}  upper   上限\n         * @returns\n         */\n        this.clamp = function (number, lower, upper) {\n            if (upper === undefined) {\n                upper = lower;\n                lower = undefined;\n            }\n            if (upper !== undefined) {\n                upper = toNumber(upper);\n                upper = isNaN(upper) ? 0 : upper;\n            }\n            if (lower !== undefined) {\n                lower = toNumber(lower);\n                lower = isNaN(lower) ? 0 : lower;\n            }\n            return baseClamp(toNumber(number), lower, upper);\n\n            function baseClamp(number, lower, upper) {\n                if (!isNaN(number)) {\n                    if (upper !== undefined) {\n                        number = number <= upper ? number : upper;\n                    }\n                    if (lower !== undefined) {\n                        number = number >= lower ? number : lower;\n                    }\n                }\n                return number;\n            }\n        };\n\n        function toNumber(value) {\n            if (typeof value === \"number\") {\n                return value;\n            }\n            if (isSymbol(value)) {\n                return 0 / 0;\n            }\n            return Number(value);\n        }\n\n        function isSymbol(value) {\n            return typeof value === \"symbol\" || isObjectLike(value) && Object.prototype.toString.call(value) === \"[object Symbol]\";\n        }\n\n        function isObjectLike(value) {\n            return typeof value === \"object\" && value !== null;\n        }\n\n    }]);","src/util/object.js":"angular.module('xue.util.object', [])\n    .service('xueUtilObject', [function () {\n        var self = this;\n        /**\n         * json中把空对象移除\n         *\n         * @param {any} json\n         * @returns\n         */\n        this.removeEmptyField = function (json) {\n            var newJson = {};\n            for (var key in json) {\n                if (json[key]) {\n                    newJson[key] = json[key];\n                }\n            }\n            return newJson;\n        };\n        /**\n         * json中把数组的对象中的空属性移除\n         *\n         * @param {any} json\n         * @returns\n         */\n        this.removeEmptyParams = function (array) {\n            var newArray = [];\n            for (var i = 0, len = array.length; i < len; i++) {\n                var newObj = {};\n                for (var j in array[i]) {\n                    if (array[i][j]) {\n                        newObj[j] = array[i][j];\n                    }\n                }\n                newArray.push(newObj);\n            }\n            return newArray;\n        };\n        /**\n         * 判断两个对象值是否相等(仅用于参数是对象的情况)\n         *\n         * @param {object} objA   \n         * @param {object} objB\n         * @returns 成功true，失败false\n         */\n        /*eslint complexity: [\"error\", { \"max\": 8 }]*/\n        this.isObjectValueEqual = function (objA, objB) {\n            if (typeof objA !== \"object\" || typeof objB !== \"object\") {\n                return false;\n            }\n            var aProps = Object.getOwnPropertyNames(objA);\n            var bProps = Object.getOwnPropertyNames(objB);\n            if (aProps.length !== bProps.length) {\n                return false;\n            }\n            for (var i = 0, len = aProps.length; i < len; i++) {\n                var propName = aProps[i];\n                var propA = objA[propName];\n                var propB = objB[propName];\n                if (typeof propA === 'object') {\n                    if (self.isObjectValueEqual(propA, propB)) {\n                        return true;\n                    }\n                    return false;\n                } else if (propA !== propB) {\n                    return false;\n                }\n            }\n            return true;\n        };\n        /**\n         * 根据value找到对象的key路径值\n         *\n         * @param {object} obj   \n         * @param {any}    value\n         * @returns 成功返回的是路径数组，失败则是undefined\n         */\n        this.searchKeys = function (obj, value) {\n            for (var key in obj) {\n                if (obj[key]) {\n                    if (obj[key] === value || self.isObjectValueEqual(obj[key], value)) {\n                        return key.split(\",\");\n                    }\n                    if (typeof obj[key] === 'object') {\n                        var temp = self.searchKeys(obj[key], value);\n                        if (temp) {\n                            return (key + \",\" + temp).split(\",\");\n                        }\n                    }\n                }\n            }\n        };\n        /**\n         * 根据key路径找到对象的value值\n         *\n         * @param {object} obj  \n         * @param {array}  pathArr \n         * @param {number} index   一般不用传（默认为0）\n         * @returns 成功返回的是value，失败则是undefined\n         */\n        this.findValByPath = function (obj, pathArr, index) {\n            if (typeof obj !== \"object\" || Object.prototype.toString.call(pathArr) !== '[object Array]') {\n                throw new Error(\"参数有误\");\n            }\n            if (!pathArr.length) {\n                return obj;\n            }\n            index = index || 0;\n            if (index >= pathArr.length - 1) {\n                return obj[pathArr[index]];\n            }\n            return self.findValByPath(obj[pathArr[index]], pathArr, ++index);\n        };\n        /**\n         * object键值对换(如果 object 有重复的值，后面的值会覆盖前面的值)\n         *\n         * @param {object} obj\n         * @returns newObj 返回新的键值对换后的对象\n         */\n        this.reverseObject = function (obj) {\n            var newObj = {};\n            for (var key in obj) {\n                newObj[obj[key]] = key;\n            }\n            return newObj;\n        }\n    }]);","src/util/properties.js":"angular.module('xue.util.properties', [])\n    .service('xueUtilProperty', [function () {\n\n    }]);","src/util/seq.js":"angular.module('xue.util.seq', [])\n    .service('xueUtilSeq', [function () {\n\n    }]);","src/util/string.js":"angular.module('xue.util.string', [])\n    .service('xueUtilString', [function () {\n        //var self = this;\n        var reg = /^[A-Za-z]+$/;\n        // 判断字符串是否为英文\n        function checkEng(num) {\n            return reg.test(num);\n        }\n        function replaceEndIndex(string) {\n            for (var i = string.length - 1; i >= 0; i--) {\n                if (/[A-Za-z0-9]+/.test(string[i])) {\n                    return i;\n                }\n            }\n            return -1;\n        }\n        function replaceStratIndex(string) {\n            for (var i = 0; i < string.length; i++) {\n                if (/[A-Za-z0-9]+/.test(string[i])) {\n                    return i;\n                }\n            }\n            return -1;\n        }\n        function lowerCaseHandle(string) {\n            var arr = [];\n            var index = 0;\n            for (var i = 1; i < string.length; i++) {\n                if (/[A-Z]+/.test(string[i]) && /[a-z]+/.test(string[i - 1])) {\n                    arr.push(string.slice(index, i));\n                    index = i;\n                }\n            }\n            arr.push(string.slice(index, string.length));\n            return arr;\n        }\n        /**\n         * 转换字符串string首字母为大写，剩下为小写\n         * \n         * @param {any} string\n         * @returns\n         */\n        this.capitalize = function (string) {\n            var str = string ? string.toString().toLowerCase() : '';\n            if (str.length < 2) {\n                return str.charAt(0).toUpperCase();\n            }\n            return str.charAt(0).toUpperCase() + str.slice(1).toLowerCase();\n        };\n        /**\n         * 检查字符串string是否包含target\n         * \n         * @param {any} String\n         * @param {any} target //目标字符串\n         * @param {any} position //检查的位置\n         * @returns\n         */\n        this.endsWith = function (string, target, position) {\n            if (!string || !target) {\n                return false;\n            }\n            var str = string.toString();\n            var tar = target.toString();\n            var pos = position ? parseInt(position, 0) : 0;\n            var index = str.indexOf(tar);\n            if (index !== -1 && (typeof position === 'undefined' || index === pos)) {\n                return true;\n            }\n            return false;\n        };\n        /**\n         * 转换字符串string以空格分开单词\n         * \n         * @param {any} String\n         * @returns\n         * 返回一个数组\n         */\n        this.lowerCase = function (string) {\n            string = string.toString().replace(/[^A-Za-z]/g, ' ');\n            var temp = string.split(' ');\n            var arr = [];\n            for (var i = 0; i < temp.length; i++) {\n                if (temp[i]) {\n                    if (/[A-Z]+/.test(temp[i].slice(1)) && /[a-z]+/.test(temp[i].slice(1))) {\n                        arr = arr.concat(lowerCaseHandle(temp[i]));\n                    } else if (temp[i].length === 2 && /[A-Z]+/.test(temp[i].slice(1))) {\n                        arr.push(temp[i][0]);\n                        arr.push(temp[i][1]);\n                    } else {\n                        arr.push(temp[i]);\n                    }\n                }\n            }\n            return arr;\n        };\n        /**\n         * 字符串头部/尾部补充\n         * @param {any} String\n         * @param {any} maxLength //填充的长度\n         * @param {any} type   // 填充类型 start/end\n         * @param {any} fillString  // 填充的字符串\n         * padStart('ab',4,'x');->xxab\n         * @returns\n         */\n        this.padChars = function (string, maxLength, type, fillString) {\n            if (fillString === undefined) {\n                fillString = ' ';\n            }\n            \n            if(Object.prototype.toString.call(fillString) !== \"[object String]\") throw new TypeError('fillString must be String')\n            if(string.length >= maxLength) return String(string)\n\n            var fillLength = maxLength - string.length, \n                times = Math.ceil(fillLength / fillString.length)\n        \n            while (times--) { \n                fillString += fillString\n                    if(times === 1) {\n                        fillString += fillString;\n                    }     \n            }\n            if (type == \"start\") {\n                return fillString.slice(0, fillLength) + string;\n            } else {\n                return string + fillString.slice(0, fillLength);\n            }\n            \n        };\n        /**\n         * 格式化文字\n         *\n         * @param {any} text\n         * @param {any} len\n         */\n        this.formatterText = function (text, len) {\n            var newText = text.trim();\n            var string = '';\n            if (newText.length) {\n                var length = len || 10;\n                if (newText.length > length) {\n                    string = newText.substring(0, length) + '...';\n                } else {\n                    string = newText;\n                }\n            }\n            return string;\n        };\n        /**\n         * 格式化长文字（中间省略）\n         * \n         * @param {any} text \n         * @param {any} len \n         */\n        this.formatLongText = function (text, len) {\n            var newText = text.trim();\n            var string = '';\n            if (newText.length) {\n                var length = len || (parseInt(len, 0) > 0 ? parseInt(len, 0) : 5);\n                if (newText.length > length * 2) {\n                    string = newText.substring(0, length) + '...' + newText.substring(newText.length - length, newText.length);\n                } else {\n                    string = newText;\n                }\n            }\n            return string;\n        };\n        /**\n         * 获取字节长度（英文数字占1个字符，中文汉字占2个字符）\n         * @param {string} str \n         */\n        this.getByteLen = function (str) {\n            var len = 0;\n            try {\n                for (var i = 0; i < str.length; i++) {\n                    var c = str.charCodeAt(i);\n                    //单字节加1\n                    if (c >= 0x0001 && c <= 0x007e || c >= 0xff60 && c <= 0xff9f) {\n                        len++;\n                    } else {\n                        len += 2;\n                    }\n                }\n            } catch (e) {\n                len = 0;\n            }\n            return len;\n        };\n        /**\n        * 过滤字符串中html标签（防止ssl攻击）\n        * @param {string} str \n        */\n        this.filterHtml = function (str) {\n            var string = '';\n            try {\n                string = str.replace(/&nbsp;/ig, '').replace(/<[^<>]+>/g, '');\n            } catch (e) {\n                string = '';\n            }\n            return string;\n        };\n        /**\n        * 重复 N 次给定字符串\n        * @param {string} string \n        * @param {string} len\n        */\n        this.repeat = function (string, len) {\n            var newString = '';\n            len = len ? len : 0;\n            for (var i = 0; i < len; i++) {\n                newString += string;\n            }\n            return newString;\n        };\n        /**\n        * 根据cahr 拆分字符串string\n        * @param {string} string \n        * @param {string} char\n        * @param {string} len\n        */\n        this.split = function (string, char, len) {\n            string = string.toString();\n            if (!char) {\n                return string;\n            }\n            var temp = string.split(char);\n            if (!len) {\n                return temp;\n            }\n            if (len < temp.length) {\n                temp = temp.splice(0, len);\n            }\n            return temp;\n        };\n        /**\n        * string字符串中移除前面和后面的 空格 或 指定的字符\n        * @param {string} string \n        * @param {string} chars\n        */\n        this.replace = function (string, chars) {\n            string = string.toString();\n            chars = chars ? '[' + chars + ']' : '';\n            string = string.replace(new RegExp(chars, 'g'), '');\n            return string.trim();\n        };\n        /**\n        * string字符串中移除后面的空格或指定的字符\n        * @param {string} string \n        * @param {string} chars\n        */\n        this.replaceEnd = function (string, chars) {\n            if (!string) {\n                return '';\n            }\n            chars = chars ? '[' + chars + ']' : '';\n            var index = replaceEndIndex(string);\n            var newString = '';\n            if (index !== -1) {\n                var start = string.slice(0, index);\n                var end = string.slice(index, string.length).replace(new RegExp(chars, 'g'), '').trim();\n                newString = start + end;\n            } else {\n                newString = string.replace(new RegExp(chars, 'g'), '').trim();\n            }\n            return newString;\n        };\n        /**\n        * string字符串中移除前面的空格或指定的字符\n        * @param {string} string \n        * @param {string} chars\n        */\n        this.replaceStrat = function (string, chars) {\n            if (!string) {\n                return '';\n            }\n            chars = chars ? '[' + chars + ']' : '';\n            var index = replaceStratIndex(string);\n            var newString = '';\n            if (index !== -1) {\n                var start = string.slice(0, index).replace(new RegExp(chars, 'g'), '').trim();\n                var end = string.slice(index, string.length);\n                newString = start + end;\n            } else {\n                newString = string.replace(new RegExp(chars, 'g'), '').trim();\n            }\n            return newString;\n        };\n    }]);","src/util/util.js":"angular.module('xue.util',[\n    'xue.util.array','xue.util.collection','xue.util.date','xue.util.lang',\n    'xue.util.math','xue.util.methods','xue.util.number','xue.util.object',\n    'xue.util.properties','xue.util.seq','xue.util.string','xue.util.function']);","src/validate/validate.js":"angular.module('xue.validate', ['xue.util.lang', 'xue.util.methods'])\r\n    .directive('xueValidate', ['xueUtilLang', 'xueUtilMethods', \"$timeout\", \"$interval\", function (xueUtilLang, xueUtilMethods, $timeout, $interval) {\r\n        return {\r\n            restrict: \"A\",\r\n            scope: {\r\n                validateConfig: \"=\"\r\n            },\r\n            link: function (scope, ele, attrs) {\r\n                var xueValidateCtrl = scope.xueValidateCtrl = {\r\n                    defaultConfig: {\r\n                        required: true, // 是否必填,true：是；false：否\r\n                        requiredTip: \"不能为空\", //必填的错误信息，默认为不能为空\r\n                        regex: \"\", //匹配的正则,默认为空\r\n                        errorTipPos: \"bottom\", //错误提示信息位置，bottom：下边；right：右边\r\n                        errorTip: \"\", //错误提示信息\r\n                        hasErrorTip: true, //是否显示错误信息\r\n                        validType: \"input\", //校验元素的类型，input：输入框；select：下拉框；datepicker：日历组件；radio：单选组件；sign：签名、捺印    \r\n                        hasModalTip: false, //是否弹窗展示错误信息\r\n                        iconStyle: {}, // 图标的样式\r\n                        msgStyle: {}, // 提示消息div样式\r\n                        lblStyle: {}, // 提示消息label样式\r\n                        parentStyle: {}, // 提示消息div父节点样式\r\n                        equalTo: \"\", // 输入值必须和 #field 相同\r\n                        equalToTip: \"\",// 不相等时的提示信息\r\n                        unequalTo: \"\", // 输入值必须和 #field 不相同\r\n                        unequalToTip: \"\", // 相等时的提示信息\r\n                        maxlen: null, // 字符串最大的长度\r\n                        maxlenTip: \"\", // 字符串超过最大的长度时的提示信息\r\n                        minlen: null, // 字符串最小的长度\r\n                        minlenTip: \"\", // 字符串超过最小的长度时的提示信息\r\n                        judge: \"\", // 特殊的判断要求，idCard：身份证号；caseCode：涉案编号；dutyRule：排班规则\r\n                        gxMsgId: \"\", // 消息提示元素唯一标识\r\n                        hasFirstValid: true, // 用于validType为sign时，是否首次校验\r\n                        execBlur: function (val) { // 元素执行失去焦点事件\r\n                            return xueValidateCtrl.triggerBlur(val);\r\n                        },\r\n                        execFocus: function () { // 元素执行获取焦点事件\r\n                            if (xueUtilLang.isFunction(ele.focus)) {\r\n                                ele.focus();\r\n                            }\r\n                        },\r\n                        execShowPanel: function () { // 主要是用于显示下拉组件还有日历组件的列表\r\n                            $timeout(function () {\r\n                                switch (scope.ValidateConfig.validType) {\r\n                                    case \"select\":\r\n                                        ele[0].previousElementSibling.children[0].children[1].style.display = \"block\";\r\n                                        break;\r\n                                    case \"datepicker\":\r\n                                        ele[0].previousElementSibling.children[0].children[1].click();\r\n                                        break;\r\n                                    default:\r\n                                        break;\r\n                                }\r\n                            });\r\n                        },\r\n                        execSuccess: function () {// 执行校验成功函数\r\n                            xueValidateCtrl.handleValidateSuccess();\r\n                        },\r\n                        execError: function (tip) {// 执行校验失败函数\r\n                            xueValidateCtrl.handleValidateError(tip);\r\n                        }\r\n                    },\r\n                        /**\r\n                     * 观察者\r\n                     */\r\n                    observe: {\r\n                        observer: null, // 观察者实例\r\n                        options: {\r\n                            attributes: true, // 配置监听属性的改变\r\n                            attributeFilter: ['style', 'class', 'src'] // 只监听style、class、src属性\r\n                        },\r\n                        /**\r\n                         * 构造观察者实例\r\n                         */\r\n                        creatObserver: function () {\r\n                            var self = this;\r\n                            //Firefox和Chrome早期版本中带有前缀\r\n                            var MutationObserver = window.MutationObserver || window.WebKitMutationObserver || window.MozMutationObserver;\r\n                            if (!MutationObserver) {\r\n                                throw new Error(\"浏览器不支持！\");\r\n                            }\r\n                            // 创建观察者对象\r\n                            self.observer = new MutationObserver(function(mutations) {\r\n                                for (var i = 0, len = mutations.length; i < len; i++) {\r\n                                    var mutation = mutations[i];\r\n                                    if (mutation.type == \"attributes\") {\r\n                                        var target = mutation.target;\r\n                                        // 单选组件\r\n                                        if (target.validType == \"radio\") {\r\n                                            if (target.className.indexOf(\"active\") != -1) {\r\n                                                scope.ValidateConfig.execSuccess();\r\n                                            }\r\n                                            continue;\r\n                                        }\r\n                                        // 签名和捺印\r\n                                        if (target.validType == \"sign\") {\r\n                                            if (target.isFirst) {\r\n                                                target.isFirst = false;\r\n                                                break;\r\n                                            }\r\n                                            if (target.src.indexOf(\"no_sign\") != -1 || target.src.indexOf(\"refuse_seal\") != -1) {\r\n                                                if (scope.ValidateConfig.required) {\r\n                                                    scope.ValidateConfig.execError(scope.ValidateConfig.requiredTip);\r\n                                                }\r\n                                            } else {\r\n                                                scope.ValidateConfig.execSuccess();\r\n                                            }\r\n                                            break;\r\n                                        }\r\n                                        // 下拉组件与日历组件\r\n                                        if (target.style.display == \"none\" && target.oldDisplay == \"block\") {\r\n                                            var ipt = null;\r\n                                            if (target.validType == \"select\") {\r\n                                                ipt = target.previousElementSibling;\r\n                                            } else if (target.validType == \"datepicker\") {\r\n                                                ipt = target.ipt;\r\n                                            }\r\n                                            scope.ValidateConfig.execBlur(ipt.value);\r\n                                        } else {\r\n                                            target.oldDisplay = target.style.display;\r\n                                        }\r\n                                    }\r\n                                }\r\n                            });\r\n                        },\r\n                        /**\r\n                         * 传入目标节点和观察选项之后开始观察\r\n                         * \r\n                         * @param {element} target 目标元素\r\n                         */\r\n                        execObserve: function (target) {\r\n                            var self = this;\r\n                            self.observer.observe(target, self.options);\r\n                        },\r\n                        /**\r\n                         * 停止观察\r\n                         */\r\n                        stopObserve: function () {\r\n                            var self = this;\r\n                            if (self.observer) {\r\n                                self.observer.disconnect();\r\n                            }\r\n                        }\r\n                    },\r\n                    /**\r\n                     * 将style对象转换成cssText字符串形式\r\n                     * \r\n                     * @param {Object} style 样式\r\n                     */\r\n                    getCssText: function (style) {\r\n                        var cssText = \"\";\r\n                        angular.forEach(style, function (value, key) {\r\n                            cssText += (key + \": \" + value + \"; \"); \r\n                        });\r\n                        return cssText;\r\n                    }, \r\n                    /**\r\n                     * 正则验证\r\n                     * \r\n                     * @param {Object} regex 正则表达式\r\n                     * @param {string} tip   提示信息\r\n                     * @param {string} str   校验的值\r\n                     */\r\n                    getBlur: function (regex, tip, str) {\r\n                        var self = this;\r\n                        var obj = ele[0];\r\n                        var className = obj.className;\r\n                        var strReg = !!str.match(regex);\r\n                        if (str && !strReg) {\r\n                            self.handleValidateError(tip);\r\n                            return false;\r\n                        } else if (str && strReg) {\r\n                            self.handleValidateSuccess(true);\r\n                        }\r\n                        if (className.indexOf('require') == -1) {\r\n                            if (!str) {\r\n                                self.handleValidateSuccess();\r\n                            }\r\n                        }\r\n                        return true;\r\n                    },\r\n                    /**\r\n                     * 校验成功时的页面样式处理\r\n                     * \r\n                     * @param {string} isAddSuccess 是否要添加校验成功的样式\r\n                     */\r\n                    handleValidateSuccess: function (isAddSuccess) {\r\n                        var self = this;\r\n                        if (scope.ValidateConfig.validType == \"select\" || \r\n                            scope.ValidateConfig.validType == \"datepicker\") {\r\n                            self.changeEleStyle(true);\r\n                        }\r\n                        isAddSuccess = isAddSuccess || false;\r\n                        var nextNode = $(\"#\" + scope.ValidateConfig.gxMsgId)[0];\r\n                        var nextNodeI = nextNode.children[0];\r\n                        nextNode.classList.add(\"hide\");\r\n                        ele[0].classList.remove('gx-error-tip');\r\n                        if (isAddSuccess && scope.ValidateConfig.errorTipPos != \"bottom\") {\r\n                            nextNodeI.classList.remove('xui-icon-ios-close-circle');\r\n                            nextNodeI.classList.add(\"xui-icon-ios-checkmark-circle\");\r\n                            return;\r\n                        }\r\n                        nextNodeI.classList.remove('xui-icon-ios-close-circle');\r\n                    },\r\n                    /**\r\n                     * 校验失败时的页面样式处理\r\n                     * \r\n                     * @param {string} tip 失败的提示\r\n                     */\r\n                    handleValidateError: function (tip) {\r\n                        var self = this;\r\n                        if (scope.ValidateConfig.validType == \"select\" || \r\n                            scope.ValidateConfig.validType == \"datepicker\") {\r\n                            self.changeEleStyle(false);\r\n                        }\r\n                        var nextNode = $(\"#\" + scope.ValidateConfig.gxMsgId)[0];\r\n                        var nextNodeI = nextNode.children[0];\r\n                        var nextNodeLabel = nextNode.children[1];\r\n                        nextNode.classList.remove(\"hide\");\r\n                        nextNodeLabel.innerHTML = tip;\r\n                        nextNodeLabel.title = tip;\r\n                        ele[0].classList.add('gx-error-tip');\r\n                        nextNodeI.classList.remove(\"xui-icon-ios-checkmark-circle\");\r\n                        nextNodeI.classList.add('xui-icon-ios-close-circle');\r\n                    },\r\n                    /**\r\n                     * 元素触发blur事件\r\n                     */\r\n                    triggerBlur: function (val) {\r\n                        // 如果没有传值进来，则val会是一个对象\r\n                        var newVal = (typeof val == \"string\" && val && val !== \"NaN\") ? $.trim(val) : $.trim(ele[0].value);\r\n                        if (scope.ValidateConfig.required) {\r\n                            if (!newVal) {\r\n                                xueValidateCtrl.handleValidateError(scope.ValidateConfig.requiredTip);\r\n                                return false;\r\n                            } else {\r\n                                xueValidateCtrl.handleValidateSuccess();\r\n                            }\r\n                        }\r\n                        if (scope.ValidateConfig.equalTo && newVal != $(scope.ValidateConfig.equalTo).val()){\r\n                            xueValidateCtrl.handleValidateError(scope.ValidateConfig.equalToTip);\r\n                            return false;\r\n                        } \r\n                        if (scope.ValidateConfig.unequalTo && newVal == $(scope.ValidateConfig.unequalTo).val()){\r\n                            xueValidateCtrl.handleValidateError(scope.ValidateConfig.unequalToTip);\r\n                            return false;\r\n                        } \r\n                        if (scope.ValidateConfig.maxlen && newVal.length > scope.ValidateConfig.maxlen){\r\n                            xueValidateCtrl.handleValidateError(scope.ValidateConfig.maxlenTip);\r\n                            return false;\r\n                        } \r\n                        if (scope.ValidateConfig.minlen && newVal.length < scope.ValidateConfig.minlen){\r\n                            xueValidateCtrl.handleValidateError(scope.ValidateConfig.minlenTip);\r\n                            return false;\r\n                        } \r\n                        var regex = scope.ValidateConfig.regex;\r\n                        var errorTip = scope.ValidateConfig.errorTip;\r\n                        var retFlag = false;\r\n                        //有特殊的判断要求\r\n                        if (scope.ValidateConfig.judge) {\r\n                            switch (scope.ValidateConfig.judge) {\r\n                                case 'idCard':\r\n                                    if (!newVal && !scope.ValidateConfig.required) {\r\n                                        xueValidateCtrl.handleValidateSuccess();\r\n                                        return true;\r\n                                    }\r\n                                    var ret = xueUtilMethods.checkIdCard(newVal);\r\n                                    if (ret.status) {\r\n                                        xueValidateCtrl.handleValidateSuccess();\r\n                                        retFlag = true;\r\n                                    } else {\r\n                                        xueValidateCtrl.handleValidateError(scope.ValidateConfig.errorTip || ret.message);\r\n                                    }\r\n                                    return retFlag;\r\n                                case 'dutyRule':\r\n                                    if (!newVal && !scope.ValidateConfig.required) {\r\n                                        xueValidateCtrl.handleValidateSuccess();\r\n                                        return true;\r\n                                    }\r\n                                    var groupCodesLen = newVal.split(\",\").length;\r\n                                    if (groupCodesLen <= 10) {\r\n                                        xueValidateCtrl.handleValidateSuccess();\r\n                                        retFlag = true;\r\n                                    } else {\r\n                                        xueValidateCtrl.handleValidateError(scope.ValidateConfig.errorTip);\r\n                                    }\r\n                                    return retFlag;\r\n                                default:\r\n                                    break;\r\n                            }\r\n                        }\r\n                        //不为空且为字符串类型\r\n                        if (regex && typeof regex == \"string\") {\r\n                            regex = xueUtilMethods.getPattern()[regex];\r\n                        }\r\n                        //regex与errorTip为空,则errorTip与requiredTip相等\r\n                        if (!regex && !scope.ValidateConfig.errorTip) {\r\n                            scope.ValidateConfig.errorTip = scope.ValidateConfig.requiredTip;\r\n                        }\r\n                        return xueValidateCtrl.getBlur(regex, errorTip, newVal);\r\n                    },\r\n                    /**\r\n                     * 找到后代节点中指定类名元素\r\n                     * \r\n                     * @param {Object}  parentNode 父元素节点\r\n                     * @param {String}  className  类名\r\n                     * @param {boolean} isAdd      是否为添加\r\n                     */\r\n                    findChildClassName: function (parentNode, className, isAdd) {\r\n                        var children = parentNode.children;\r\n                        for (var i = 0, len = children.length; i < len; i++) {           \r\n                            if (children[i].className.indexOf(className) != -1) {\r\n                                if (!isAdd) {\r\n                                    return children[i];\r\n                                }\r\n                                if (children[i].innerText == scope.ValidateConfig.requiredTip) {\r\n                                    return children[i];\r\n                                } \r\n                            }\r\n                        }\r\n                        return false;\r\n                    },\r\n                    /**\r\n                     * 增加错误提示信息div\r\n                     */\r\n                    addDivMsg: function () {\r\n                        var self = this;\r\n                        var parentNode = ele[0].parentNode;\r\n                        //如果已经有gx-msg元素了，就不用加了\r\n                        if (self.findChildClassName(parentNode, \"gx-msg\", true)) {\r\n                            return;\r\n                        }\r\n                        var oDiv = document.createElement(\"div\");\r\n                        oDiv.id = xueUtilMethods.guid();\r\n                        scope.ValidateConfig.gxMsgId = oDiv.id;\r\n                        oDiv.classList.add(\"gx-msg\");\r\n                        var msgCssText = self.getCssText(scope.ValidateConfig.msgStyle),\r\n                            iconCssText = self.getCssText(scope.ValidateConfig.iconStyle),\r\n                            lblCssText = self.getCssText(scope.ValidateConfig.lblStyle),\r\n                            parentCssText = self.getCssText(scope.ValidateConfig.parentStyle);\r\n                        if (msgCssText) {\r\n                            oDiv.style.cssText = msgCssText;\r\n                        }\r\n                        if (!scope.ValidateConfig.hasErrorTip) {\r\n                            oDiv.style.display = 'none';\r\n                        }\r\n                        var errorMsg = \"<i class='xui-icon' style='\" + iconCssText + \"'></i>\" +\r\n                                \"<label class='gx-error' title='\" + scope.ValidateConfig.requiredTip + \r\n                                \"' style='\" + lblCssText + \"'>\" + scope.ValidateConfig.requiredTip + \r\n                                \"</label>\";\r\n                        oDiv.innerHTML = errorMsg;\r\n                        if (parentCssText) {\r\n                            parentNode.style.cssText = parentCssText;\r\n                        }\r\n                        switch (scope.ValidateConfig.errorTipPos) {\r\n                            case \"right\":\r\n                                oDiv.classList.add(\"gx-show-tip\");\r\n                                break;\r\n                            case \"bottom\":\r\n                                break;\r\n                            default:\r\n                                break;\r\n                        }\r\n                        oDiv.classList.add(\"hide\");\r\n                        parentNode.appendChild(oDiv);\r\n                    },\r\n                    /**\r\n                     * 移除错误提示信息div\r\n                     */\r\n                    removeDivMsg: function () {\r\n                        var self = this;\r\n                        var parentNode = ele[0].parentNode;\r\n                        var gxMsgNode = self.findChildClassName(parentNode, \"gx-msg\", false);\r\n                        if (gxMsgNode) {\r\n                            parentNode.removeChild(gxMsgNode);\r\n                        }\r\n                    },\r\n                    /**\r\n                     * 改变元素的校验样式\r\n                     * \r\n                     * @param {boolean} validResult 校验结果\r\n                     */\r\n                    changeEleStyle: function (validResult) {\r\n                        var element = null;\r\n                        if (scope.ValidateConfig.validType == \"select\") {\r\n                            element = ele[0].previousElementSibling.children[0].children[0];\r\n                        } else if (scope.ValidateConfig.validType == \"datepicker\") {\r\n                            element = ele[0].previousElementSibling.children[0];\r\n                        }\r\n                        if (!validResult) {\r\n                            element.classList.add('directive-error');\r\n                        } else {\r\n                            element.classList.remove('directive-error');\r\n                        }\r\n                    },\r\n                    /**\r\n                     * 观察组件类的元素\r\n                     * \r\n                     * @param {element} target 目标元素\r\n                     */\r\n                    observeEle: function (target) {\r\n                        var self = this;\r\n                        // 样式备份\r\n                        target.oldDisplay = target.style.display;\r\n                        if (!self.observe.observer) {\r\n                            self.observe.creatObserver();\r\n                        }\r\n                        self.observe.execObserve(target);\r\n                    },\r\n                    /**\r\n                     * 获取校验select元素\r\n                     */\r\n                    getSelectEle: function () {\r\n                        var deferred = $.Deferred(); \r\n                        // 等待页面元素加载完成\r\n                        var tempTimer = $interval(function () {\r\n                            var preEle = ele[0].previousElementSibling;\r\n                            var target = null;\r\n                            if (preEle.children[0] && preEle.children[0].children[1]) {\r\n                                target = preEle.children[0].children[1];\r\n                            }\r\n                            if (target) {\r\n                                target.validType = \"select\";\r\n                                $interval.cancel(tempTimer);\r\n                                deferred.resolve(target);\r\n                            }\r\n                        }, 20);\r\n                        return deferred.promise();\r\n                    },\r\n                        /**\r\n                     * 获取校验datepicker元素\r\n                     */\r\n                    getDatepickerEle: function () {\r\n                        var deferred = $.Deferred(); \r\n                        var reg = /^\\{\\{.*?\\}\\}$/gi; // 匹配以'{{'开头且以'}}'结尾的字符 \r\n                        // 等待页面元素加载完成\r\n                        $timeout(function () {\r\n                            // 获取日历组件的panel元素ID\r\n                            var pickerId = ele[0].previousElementSibling.children[1].id;\r\n                            if (!reg.test(pickerId)) {\r\n                                    // 获取日历组件的panel元素\r\n                                var target = $('#' + pickerId)[0];\r\n                                // 获取日历组件的input元素\r\n                                target.ipt = ele[0].previousElementSibling.children[0].children[1];\r\n                                target.validType = \"datepicker\";\r\n                                // 清除按钮点击触发校验\r\n                                ele[0].previousElementSibling.children[0].children[2].onclick = function () {\r\n                                    scope.ValidateConfig.execBlur(target.ipt.value);\r\n                                }\r\n                                deferred.resolve(target);\r\n                            }\r\n                        });\r\n                        return deferred.promise();\r\n                    },\r\n                        /**\r\n                     * 获取校验radio元素\r\n                     */\r\n                    getRadioEle: function () {\r\n                        var deferred = $.Deferred(); \r\n                        var targets = [];\r\n                        // 等待页面元素加载完成\r\n                        $timeout(function () {\r\n                            var preEle = ele[0].previousElementSibling;\r\n                            if (preEle.children[0]) {\r\n                                targets.push(preEle.children[0]);\r\n                                targets.push(preEle.previousElementSibling.children[0]);\r\n                                angular.forEach(targets, function (target) {\r\n                                    target.validType = \"radio\";\r\n                                });\r\n                                deferred.resolve(targets);\r\n                            }\r\n                        });\r\n                        return deferred.promise();\r\n                    },\r\n                        /**\r\n                     * 获取校验sign元素\r\n                     */\r\n                    getSignEle: function () {\r\n                        var deferred = $.Deferred(); \r\n                        // 等待页面元素加载完成以及初始化代码执行完成\r\n                        $timeout(function () {\r\n                            var target = ele[0].previousElementSibling;\r\n                            target.validType = \"sign\";\r\n                            target.isFirst = scope.ValidateConfig.hasFirstValid;\r\n                            deferred.resolve(target);\r\n                        });\r\n                        return deferred.promise();\r\n                    },\r\n                    /**\r\n                     * 初始化\r\n                     */\r\n                    init: function () {\r\n                        var self = this;\r\n                        scope.ValidateConfig = angular.extend(self.defaultConfig, scope.ValidateConfig);\r\n                        self.addDivMsg();\r\n                        ele.bind('blur', self.triggerBlur);\r\n                        self.destroy();\r\n                        switch(scope.ValidateConfig.validType) {\r\n                            // 下拉组件的实时校验\r\n                            case \"select\":\r\n                                self.getSelectEle().then(function (target) {\r\n                                    self.observeEle(target);\r\n                                });\r\n                                break;\r\n                            // 日历组件的实时校验\r\n                            case \"datepicker\":\r\n                                self.getDatepickerEle().then(function (target) {\r\n                                    self.observeEle(target);\r\n                                });\r\n                                break;\r\n                            // 单选组件的实时校验\r\n                            case \"radio\":\r\n                                self.getRadioEle().then(function (targets) {\r\n                                    angular.forEach(targets, function (target) {\r\n                                        self.observeEle(target);\r\n                                    });\r\n                                });\r\n                                break;\r\n                            // 签名、捺印的实时校验\r\n                            case \"sign\":\r\n                                self.getSignEle().then(function (target) {\r\n                                    self.observeEle(target);\r\n                                });\r\n                                break;\r\n                        }\r\n                    },\r\n                    /**\r\n                     * 销毁\r\n                     */\r\n                    destroy: function () {\r\n                        var self = this;\r\n                        scope.$on('$destroy', function () {\r\n                            self.removeDivMsg();\r\n                            scope.ValidateConfig = null;\r\n                            ele.unbind(\"blur\");\r\n                            self.observe.stopObserve();\r\n                        });\r\n                    }\r\n                }\r\n\r\n                xueValidateCtrl.init();\r\n\r\n            }\r\n        };\r\n    }])","template/autoselect/autoselect.html.js":"angular.module(\"xue/template/autoselect/autoselect.html\", []).run([\"$templateCache\", function($templateCache) {\n  $templateCache.put(\"xue/template/autoselect/autoselect.html\",\n    \"<div class=\\\"xui-autoselect-wrap\\\">\\n\" +\n    \"    <input ng-focus=\\\"selectCtrl.watch.focus($event)\\\" type=\\\"text\\\" class=\\\"xui-input select-show\\\" ng-model=\\\"ngVal\\\"\\n\" +\n    \"        title=\\\"{{ngVal}}\\\" ng-class=\\\"selectCtrl.selectClass\\\" ng-style=\\\"selectCtrl.iptStyle\\\"\\n\" +\n    \"        ng-disabled=\\\"ngDisabled\\\" />\\n\" +\n    \"    <div class=\\\"auto-select-content\\\" ng-style=\\\"selectCtrl.contentStyle\\\" id=\\\"{{selectConfig.id}}\\\">\\n\" +\n    \"        <ul>\\n\" +\n    \"            <li ng-repeat=\\\"item in selectConfig.data | filter:ngVal  | limitTo:selectConfig.showLimit\\\"\\n\" +\n    \"                ng-click=\\\"selectCtrl.selectItem(item)\\\">\\n\" +\n    \"                <span>{{item}}</span>\\n\" +\n    \"            </li>\\n\" +\n    \"            <li ng-if=\\\"!!!selectConfig.data || !selectConfig.data.length\\\" class=\\\"empty-data\\\">\\n\" +\n    \"                <span>暂无数据</span>\\n\" +\n    \"            </li>\\n\" +\n    \"        </ul>\\n\" +\n    \"    </div>\\n\" +\n    \"</div>\");\n}]);\n","template/cascader/cascader.html.js":"angular.module(\"xue/template/cascader/cascader.html\", []).run([\"$templateCache\", function($templateCache) {\n  $templateCache.put(\"xue/template/cascader/cascader.html\",\n    \"<div class=\\\"xui-cascader-container\\\">\\n\" +\n    \"    <div class=\\\"cascader-input-wrapper\\\" \\n\" +\n    \"        ng-click=\\\"cascaderCtrl.toggleSelect($event)\\\" \\n\" +\n    \"        ng-mouseover=\\\"cascaderCtrl.showDelete = true\\\" \\n\" +\n    \"        ng-mouseleave=\\\"cascaderCtrl.showDelete = false\\\">\\n\" +\n    \"            <input ng-model=\\\"ngVal\\\" type=\\\"text\\\" class=\\\"cascader-input\\\" \\n\" +\n    \"                ng-style=\\\"cascaderConfig.css.inputStyle\\\" \\n\" +\n    \"                ng-class=\\\"cascaderConfig.css.inputClassName\\\"\\n\" +\n    \"                placeholder=\\\"请选择\\\" title=\\\"{{ ngVal }}\\\" readonly>\\n\" +\n    \"            <i class=\\\"cascader-icon fa fa-close\\\" ng-if=\\\"cascaderCtrl.showDelete && !!ngVal\\\" title=\\\"清空\\\" ng-click=\\\"cascaderCtrl.clear($event)\\\"></i>\\n\" +\n    \"            <i class=\\\"cascader-icon fa fa-caret-down\\\" ng-if=\\\"!(cascaderCtrl.showDelete && !!ngVal)\\\" ng-class=\\\"{'expanded': cascaderCtrl.showSelect}\\\"></i>\\n\" +\n    \"    </div>\\n\" +\n    \"    <div class=\\\"cascader-select-wrapper\\\" \\n\" +\n    \"        ng-show=\\\"cascaderCtrl.showSelect\\\"\\n\" +\n    \"        ng-mouseover=\\\"cascaderCtrl.onSelectDiv = true\\\" \\n\" +\n    \"        ng-mouseleave=\\\"cascaderCtrl.onSelectDiv = false\\\">\\n\" +\n    \"            <ul class=\\\"select-list\\\" ng-class=\\\"cascaderConfig.css.panelClassName\\\"\\n\" +\n    \"                ng-style=\\\"cascaderConfig.css.panelStyle\\\" ng-if=\\\"list.length\\\" \\n\" +\n    \"                ng-repeat=\\\"list in cascaderCtrl.selectList\\\">\\n\" +\n    \"                    <li class=\\\"select-item\\\" \\n\" +\n    \"                        title=\\\"{{ item[cascaderConfig.textField] }}\\\"\\n\" +\n    \"                        ng-class=\\\"{'active': item[cascaderConfig.valueField] == cascaderCtrl.selectValue[item.depth]}\\\"\\n\" +\n    \"                        ng-repeat=\\\"item in list\\\" ng-click=\\\"cascaderCtrl.clickItem(item)\\\">\\n\" +\n    \"                            {{ item[cascaderConfig.textField] }}\\n\" +\n    \"                            <i class=\\\"cascader-icon fa fa-angle-right\\\" ng-if=\\\"!item.isLeaf\\\"></i>\\n\" +\n    \"                    </li>\\n\" +\n    \"            </ul>\\n\" +\n    \"    </div>\\n\" +\n    \"</div>\");\n}]);\n","template/counter/counter.html.js":"angular.module(\"xue/template/counter/counter.html\", []).run([\"$templateCache\", function($templateCache) {\n  $templateCache.put(\"xue/template/counter/counter.html\",\n    \"<div class=\\\"xui-counter-wrap {{counterConfig.size}}\\\" ng-class=\\\"{'disabled':counterConfig.disabled}\\\">\\n\" +\n    \"    <span ng-click=\\\"gxCounterCtrl.changeByBtn('reduce',params)\\\" class=\\\"reduce\\\"\\n\" +\n    \"        ng-class=\\\"{'disabled':counterConfig.disabled||gxCounterCtrl.number==counterConfig.min}\\\">-</span>\\n\" +\n    \"    <span ng-show=\\\"counterConfig.type==1\\\" class=\\\"text\\\" ng-model=\\\"gxCounterCtrl.number\\\">\\n\" +\n    \"        {{gxCounterCtrl.number}} {{counterConfig.suffix}}</span>\\n\" +\n    \"    <span ng-show=\\\"counterConfig.type==2\\\" class=\\\"input\\\" ng-class=\\\"{'hasSuffix':counterConfig.suffix}\\\">\\n\" +\n    \"        <input ng-disabled=\\\"counterConfig.disabled\\\" ng-blur=\\\"gxCounterCtrl.inputBlur()\\\"\\n\" +\n    \"            ng-focus=\\\"gxCounterCtrl.inputFocus()\\\" ng-change=\\\"gxCounterCtrl.inputChange($event)\\\"\\n\" +\n    \"            ng-model=\\\"gxCounterCtrl.number\\\" />\\n\" +\n    \"        <span ng-if=\\\"counterConfig.suffix\\\">{{counterConfig.suffix}}</span></span>\\n\" +\n    \"    <span ng-click=\\\"gxCounterCtrl.changeByBtn('add',params)\\\" class=\\\"add\\\"\\n\" +\n    \"        ng-class=\\\"{'disabled':counterConfig.disabled||gxCounterCtrl.number==counterConfig.max}\\\">+</span>\\n\" +\n    \"</div>\");\n}]);\n","template/datepicker/datepicker.html.js":"angular.module(\"xue/template/datepicker/datepicker.html\", []).run([\"$templateCache\", function($templateCache) {\n  $templateCache.put(\"xue/template/datepicker/datepicker.html\",\n    \"<div class=\\\"xui-datepicker-wrap\\\">\\n\" +\n    \"    <div class=\\\"input-wrap\\\" ng-class=\\\"dateConfig.element.targetWrapClassName\\\" ng-style=\\\"dateConfig.element.targetWrapStyle\\\">\\n\" +\n    \"        <span class=\\\"prefix-input xui-icon\\\" ng-class=\\\"{true: 'xui-icon-md-time', false: 'xui-icon-md-calendar'}[xlDatepickerCtrl.type == 2 || xlDatepickerCtrl.type == 3]\\\"></span>\\n\" +\n    \"        <input class=\\\"type-ipt\\\" ng-click=\\\"xlDatepickerCtrl.optPanel($event)\\\" ng-model=\\\"$parent.ngVal\\\" ng-disabled=\\\"$parent.ngDisabled\\\"\\n\" +\n    \"        ng-if=\\\"dateConfig.element.type == 'input' && !dateConfig.fixed\\\" type=\\\"text\\\" ng-blur=\\\"xlDatepickerCtrl.ngValBlur()\\\">\\n\" +\n    \"        <span class=\\\"sufix-input xui-icon xui-icon-ios-close-circle-outline\\\" ng-if=\\\"!!ngVal && !ngDisabled\\\" title=\\\"清空\\\" ng-click=\\\"xlDatepickerCtrl.clear()\\\"></span>\\n\" +\n    \"    </div>\\n\" +\n    \"    \\n\" +\n    \"    <img class=\\\"type-img\\\" ng-click=\\\"xlDatepickerCtrl.optPanel($event)\\\" \\n\" +\n    \"        ng-if=\\\"dateConfig.element.type == 'img' && !dateConfig.fixed\\\" src=\\\"\\\" alt=\\\"\\\">\\n\" +\n    \"\\n\" +\n    \"    <span class=\\\"type-span\\\" ng-click=\\\"xlDatepickerCtrl.optPanel($event)\\\" \\n\" +\n    \"        ng-if=\\\"dateConfig.element.type == 'span' && !dateConfig.fixed\\\" ></span>\\n\" +\n    \"\\n\" +\n    \"    <div id=\\\"{{'xlDatePicker_'+dateConfig.id}}\\\" class=\\\"xl-datepicker-content\\\" ng-class=\\\"dateConfig.element.contentWrapClassName\\\" ng-style=\\\"dateConfig.element.contentWrapStyle\\\">\\n\" +\n    \"        <div class=\\\"show-date-wrap\\\" ng-show=\\\"xlDatepickerCtrl.type == 1\\\">\\n\" +\n    \"            <span class=\\\"show-ipt-wrap\\\">\\n\" +\n    \"                <input type=\\\"text\\\" class=\\\"show-ipt\\\" placeholder=\\\"选择日期\\\" ng-model=\\\"xlDatepickerCtrl.showDate\\\" ng-blur=\\\"xlDatepickerCtrl.changeNgVal()\\\">\\n\" +\n    \"            </span>\\n\" +\n    \"            <span class=\\\"show-ipt-wrap\\\">\\n\" +\n    \"                <input type=\\\"text\\\" class=\\\"show-ipt\\\" placeholder=\\\"选择时间\\\" ng-click=\\\"xlDatepickerCtrl.timeOpt.optTimePanel()\\\" ng-model=\\\"xlDatepickerCtrl.showTime\\\" ng-blur=\\\"xlDatepickerCtrl.changeNgVal()\\\">\\n\" +\n    \"                <div class=\\\"select-time-wrap\\\" ng-show=\\\"xlDatepickerCtrl.timeOpt.showPanel\\\">\\n\" +\n    \"                    <div class=\\\"select-time-content\\\">\\n\" +\n    \"                        <div class=\\\"time-scrollbar\\\">\\n\" +\n    \"                            <ul ng-style=\\\"{'top':-1*(xlDatepickerCtrl.timeOpt.hourObj.index*30)+'px'}\\\" id=\\\"hourObj\\\">\\n\" +\n    \"                                <li ng-repeat=\\\"item in xlDatepickerCtrl.timeOpt.hourObj.items\\\" ng-class=\\\"{true:'active'}[xlDatepickerCtrl.timeOpt.hourObj.index == $index]\\\"\\n\" +\n    \"                                ng-click=\\\"xlDatepickerCtrl.timeOpt.clickNumber(xlDatepickerCtrl.timeOpt.hourObj,$index)\\\">{{item}}</li>\\n\" +\n    \"                            </ul>\\n\" +\n    \"                        </div>\\n\" +\n    \"                        <div class=\\\"time-scrollbar\\\">\\n\" +\n    \"                            <ul ng-style=\\\"{'top':-1*(xlDatepickerCtrl.timeOpt.minuteObj.index*30)+'px'}\\\" id=\\\"minuteObj\\\">\\n\" +\n    \"                                <li ng-repeat=\\\"item in xlDatepickerCtrl.timeOpt.minuteObj.items\\\" ng-class=\\\"{true:'active'}[xlDatepickerCtrl.timeOpt.minuteObj.index == $index]\\\"\\n\" +\n    \"                                ng-click=\\\"xlDatepickerCtrl.timeOpt.clickNumber(xlDatepickerCtrl.timeOpt.minuteObj,$index)\\\">{{item}}</li>\\n\" +\n    \"                            </ul>\\n\" +\n    \"                        </div>\\n\" +\n    \"                        <div class=\\\"time-scrollbar\\\">\\n\" +\n    \"                            <ul ng-style=\\\"{'top':-1*(xlDatepickerCtrl.timeOpt.secondObj.index*30)+'px'}\\\" id=\\\"secondObj\\\">\\n\" +\n    \"                                <li ng-repeat=\\\"item in xlDatepickerCtrl.timeOpt.secondObj.items\\\" ng-class=\\\"{true:'active'}[xlDatepickerCtrl.timeOpt.secondObj.index == $index]\\\"\\n\" +\n    \"                                ng-click=\\\"xlDatepickerCtrl.timeOpt.clickNumber(xlDatepickerCtrl.timeOpt.secondObj,$index)\\\">{{item}}</li>\\n\" +\n    \"                            </ul>\\n\" +\n    \"                        </div>\\n\" +\n    \"                    </div>\\n\" +\n    \"                    <div class=\\\"select-time-footer\\\">\\n\" +\n    \"                        <span class=\\\"confirm\\\" ng-click=\\\"xlDatepickerCtrl.timeOpt.confirm()\\\">确定</span>\\n\" +\n    \"                    </div>\\n\" +\n    \"                </div>\\n\" +\n    \"            </span>\\n\" +\n    \"        </div>\\n\" +\n    \"        <div class=\\\"xl-content-header\\\">\\n\" +\n    \"            <i class=\\\"last-year xui-extra-icon xui-icon-angle-double-left\\\" ng-click=\\\"xlDatepickerCtrl.changeYearMonth(-1,0)\\\" title=\\\"上一年\\\"></i>\\n\" +\n    \"            <i class=\\\"last-month xui-extra-icon xui-icon-angle-left\\\" ng-click=\\\"xlDatepickerCtrl.changeYearMonth(0,-1)\\\" title=\\\"上一月\\\"></i>\\n\" +\n    \"            <span class=\\\"current-year\\\" ng-show=\\\"!xlDatepickerCtrl.showSelectYear\\\" ng-click=\\\"xlDatepickerCtrl.selectYearMonth($event,'year')\\\">{{xlDatepickerCtrl.currentYear}}年</span>\\n\" +\n    \"            <span class=\\\"current-year\\\" ng-show=\\\"xlDatepickerCtrl.showSelectYear\\\"><input type=\\\"text\\\" ng-blur=\\\"xlDatepickerCtrl.selectYearMonthBlur($event,'year')\\\" ng-model=\\\"xlDatepickerCtrl.currentYear\\\" >年</span>\\n\" +\n    \"            <span class=\\\"current-month\\\" ng-show=\\\"!xlDatepickerCtrl.showSelectMonth\\\" ng-click=\\\"xlDatepickerCtrl.selectYearMonth($event,'month')\\\">{{xlDatepickerCtrl.currentMonth}}月</span>\\n\" +\n    \"            <span class=\\\"current-month\\\" ng-show=\\\"xlDatepickerCtrl.showSelectMonth\\\"><input type=\\\"text\\\"ng-blur=\\\"xlDatepickerCtrl.selectYearMonthBlur($event,'month')\\\" ng-model=\\\"xlDatepickerCtrl.currentMonth\\\">月</span>\\n\" +\n    \"            <i class=\\\"next-year xui-extra-icon xui-icon-angle-double-right\\\" ng-click=\\\"xlDatepickerCtrl.changeYearMonth(1,0)\\\" title=\\\"下一年\\\"></i>\\n\" +\n    \"            <i class=\\\"next-month xui-extra-icon xui-icon-angle-right\\\" ng-click=\\\"xlDatepickerCtrl.changeYearMonth(0,1)\\\" title=\\\"下一月\\\"></i>\\n\" +\n    \"        </div>\\n\" +\n    \"        <div class=\\\"xl-content-body\\\">\\n\" +\n    \"            <table class=\\\"xl-datepicker-table\\\">\\n\" +\n    \"                <tr>\\n\" +\n    \"                    <th ng-repeat=\\\"week in dateConfig.language.weeks\\\">\\n\" +\n    \"                        <span class=\\\"\\\">{{week}}</span>\\n\" +\n    \"                    </th>\\n\" +\n    \"                </tr>\\n\" +\n    \"                <tr ng-repeat=\\\"item in xlDatepickerCtrl.currentTable\\\">\\n\" +\n    \"                    <td ng-repeat=\\\"list in item\\\" ng-click=\\\"xlDatepickerCtrl.selectDate(list,$event)\\\" ng-dblclick=\\\"xlDatepickerCtrl.hidePanel()\\\"\\n\" +\n    \"                        ng-class=\\\"{true: 'disabled-select'}[xlDatepickerCtrl.notInRange(list)]\\\">\\n\" +\n    \"                        <span ng-class=\\\"{\\n\" +\n    \"                            'not-current': list.type != 0,\\n\" +\n    \"                            'active': list.year == xlDatepickerCtrl.selectedDate.year && list.month == xlDatepickerCtrl.selectedDate.month && list.day == xlDatepickerCtrl.selectedDate.day,\\n\" +\n    \"                            'current': list.year == xlDatepickerCtrl.currentDate.year && list.month == xlDatepickerCtrl.currentDate.month && list.day == xlDatepickerCtrl.currentDate.day\\n\" +\n    \"                        }\\\">{{list.day}}</span>\\n\" +\n    \"                    </td>\\n\" +\n    \"                </tr>\\n\" +\n    \"            </table>\\n\" +\n    \"        </div>\\n\" +\n    \"        <div class=\\\"xl-content-footer\\\">\\n\" +\n    \"            <button class=\\\"select-now\\\" ng-click=\\\"xlDatepickerCtrl.getNow()\\\">现在</button>\\n\" +\n    \"            <button class=\\\"confirm-date\\\" ng-click=\\\"xlDatepickerCtrl.confirm()\\\">确定</button>\\n\" +\n    \"        </div>\\n\" +\n    \"        <div class=\\\"xl-popper-arrow\\\"></div>\\n\" +\n    \"    </div>\\n\" +\n    \"\\n\" +\n    \"    <div id=\\\"{{'xlTimePicker_'+dateConfig.id}}\\\" class=\\\"xl-timepicker-content\\\" ng-class=\\\"dateConfig.element.contentWrapClassName\\\" ng-style=\\\"dateConfig.element.contentWrapStyle\\\">\\n\" +\n    \"        <div class=\\\"xl-content-body\\\" ng-if=\\\"dateConfig.timeSelectMode == 0\\\">\\n\" +\n    \"            <div class=\\\"select-time-content\\\">\\n\" +\n    \"                <div class=\\\"time-scrollbar\\\">\\n\" +\n    \"                    <ul ng-style=\\\"{'top':-1*(xlDatepickerCtrl.timeOpt.hourObj.index*30)+'px'}\\\" id=\\\"hourObj\\\">\\n\" +\n    \"                        <li ng-repeat=\\\"item in xlDatepickerCtrl.timeOpt.hourObj.items\\\" ng-class=\\\"{true:'active'}[xlDatepickerCtrl.timeOpt.hourObj.index == $index]\\\"\\n\" +\n    \"                        ng-click=\\\"xlDatepickerCtrl.timeOpt.clickNumber(xlDatepickerCtrl.timeOpt.hourObj,$index)\\\">{{item}}</li>\\n\" +\n    \"                    </ul>\\n\" +\n    \"                </div>\\n\" +\n    \"                <div class=\\\"time-scrollbar\\\">\\n\" +\n    \"                    <ul ng-style=\\\"{'top':-1*(xlDatepickerCtrl.timeOpt.minuteObj.index*30)+'px'}\\\" id=\\\"minuteObj\\\">\\n\" +\n    \"                        <li ng-repeat=\\\"item in xlDatepickerCtrl.timeOpt.minuteObj.items\\\" ng-class=\\\"{true:'active'}[xlDatepickerCtrl.timeOpt.minuteObj.index == $index]\\\"\\n\" +\n    \"                        ng-click=\\\"xlDatepickerCtrl.timeOpt.clickNumber(xlDatepickerCtrl.timeOpt.minuteObj,$index)\\\">{{item}}</li>\\n\" +\n    \"                    </ul>\\n\" +\n    \"                </div>\\n\" +\n    \"                <div class=\\\"time-scrollbar\\\" ng-class=\\\"{true:'disabled-select'}[xlDatepickerCtrl.type == 3]\\\">\\n\" +\n    \"                    <ul ng-style=\\\"{'top':-1*(xlDatepickerCtrl.timeOpt.secondObj.index*30)+'px'}\\\" id=\\\"secondObj\\\">\\n\" +\n    \"                        <li ng-repeat=\\\"item in xlDatepickerCtrl.timeOpt.secondObj.items\\\" ng-class=\\\"{true:'active'}[xlDatepickerCtrl.timeOpt.secondObj.index == $index]\\\"\\n\" +\n    \"                        ng-click=\\\"xlDatepickerCtrl.timeOpt.clickNumber(xlDatepickerCtrl.timeOpt.secondObj,$index,'secondObj')\\\">{{item}}</li>\\n\" +\n    \"                    </ul>\\n\" +\n    \"                </div>\\n\" +\n    \"            </div>\\n\" +\n    \"        </div>\\n\" +\n    \"        <div class=\\\"xl-popper-arrow\\\"></div>\\n\" +\n    \"    </div>\\n\" +\n    \"</div>\");\n}]);\n","template/menu/menu.html.js":"angular.module(\"xue/template/menu/menu.html\", []).run([\"$templateCache\", function($templateCache) {\n  $templateCache.put(\"xue/template/menu/menu.html\",\n    \"<div class=\\\"xui-menu-wrap\\\" ng-class=\\\"{true:'support-search'}[menuConfig.search]\\\">\\n\" +\n    \"    <div class=\\\"menu-search\\\" ng-if=\\\"menuConfig.search\\\">\\n\" +\n    \"        <i class=\\\"menu-search-icon xui-icon xui-icon-md-search\\\"></i>\\n\" +\n    \"        <input type=\\\"text\\\" class=\\\"menu-ipt\\\" ng-model=\\\"vm.searchValue\\\" ng-blur=\\\"vm.hideSearchBox()\\\">\\n\" +\n    \"        <div class=\\\"menu-list\\\" ng-show=\\\"!!vm.searchValue\\\"\\n\" +\n    \"            ng-mouseover=\\\"vm.onSearchListDiv = true\\\"\\n\" +\n    \"            ng-mouseleave=\\\"vm.onSearchListDiv = false\\\">\\n\" +\n    \"            <ul>\\n\" +\n    \"                <li ng-click=\\\"vm.select(item)\\\" ng-repeat=\\\"item in vm.menuList | filter : {menuName:vm.searchValue}\\\">{{item[menuConfig.oneDimenName]}}</li>\\n\" +\n    \"            </ul>\\n\" +\n    \"        </div>\\n\" +\n    \"    </div>\\n\" +\n    \"    <div class=\\\"menu-item-wrap\\\">\\n\" +\n    \"        <div class=\\\"menu-item\\\" ng-repeat=\\\"item in menuConfig.data\\\">\\n\" +\n    \"            <div class=\\\"item-title\\\" ng-click=\\\"clickRouter(item)\\\" ng-class=\\\"{true:'active'}[item[menuConfig.routerId] == menuConfig.selectId]\\\">\\n\" +\n    \"                <div class=\\\"title-icon\\\" ng-if=\\\"menuConfig.showOneDimenIcon\\\">\\n\" +\n    \"                    <img alt=\\\"\\\" ng-if=\\\"!!item[menuConfig.oneDimenIcon]\\\" \\n\" +\n    \"                        ng-src=\\\"{{menuConfig.imagePrefix+item[menuConfig.oneDimenIcon]+menuConfig.imageSuffix}}\\\">\\n\" +\n    \"                    <i ng-if=\\\"!item[menuConfig.oneDimenIcon]\\\" class=\\\"fa fa-star\\\"></i>\\n\" +\n    \"                </div>\\n\" +\n    \"                <div class=\\\"title-content\\\" title=\\\"{{item[menuConfig.oneDimenName]}}\\\">\\n\" +\n    \"                    {{item[menuConfig.oneDimenName]}}\\n\" +\n    \"                </div>\\n\" +\n    \"                <div class=\\\"title-arrow\\\" ng-if=\\\"!!item[menuConfig.childrenName]\\\">\\n\" +\n    \"                    <i ng-if=\\\"!item.open\\\" class=\\\"xui-icon xui-icon-ios-arrow-forward\\\"></i>\\n\" +\n    \"                    <i ng-if=\\\"!!item.open\\\" class=\\\"xui-icon xui-icon-ios-arrow-down\\\"></i>\\n\" +\n    \"                </div>\\n\" +\n    \"            </div>\\n\" +\n    \"            <div class=\\\"item-content\\\" ng-show=\\\"!!item.open && !!item[menuConfig.childrenName]\\\">\\n\" +\n    \"                <ul>\\n\" +\n    \"                    <li ng-repeat=\\\"children in item[menuConfig.childrenName]\\\" title=\\\"{{children[menuConfig.twoDimenName]}}\\\" \\n\" +\n    \"                    ng-click=\\\"clickRouter(children)\\\" ng-class=\\\"{true:'active'}[children[menuConfig.routerId] == menuConfig.selectId]\\\">\\n\" +\n    \"                        <span>{{children[menuConfig.twoDimenName]}}</span>\\n\" +\n    \"                    </li>\\n\" +\n    \"                </ul>\\n\" +\n    \"            </div>\\n\" +\n    \"        </div>\\n\" +\n    \"    </div>\\n\" +\n    \"</div>\");\n}]);\n","template/modal/modal.html.js":"angular.module(\"xue/template/modal/modal.html\", []).run([\"$templateCache\", function($templateCache) {\n  $templateCache.put(\"xue/template/modal/modal.html\",\n    \"<div class=\\\"xui-modal-dialog {{size ? 'modal-' + size : ''}}\\\" xue-modal-transclude>\\n\" +\n    \"</div>\");\n}]);\n","template/notice/notice.html.js":"angular.module(\"xue/template/notice/notice.html\", []).run([\"$templateCache\", function($templateCache) {\n  $templateCache.put(\"xue/template/notice/notice.html\",\n    \"<div class=\\\"xui-notice-container\\\" ng-mouseenter=\\\"gxNoticeCtrl.mouseenter()\\\" ng-mouseleave=\\\"gxNoticeCtrl.mouseleave()\\\"> \\n\" +\n    \"    <div class=\\\"xui-notice-icon\\\" title=\\\"{{noticeConfig.title || '消息提醒'}}\\\">\\n\" +\n    \"        <!-- <i class=\\\"xui-icon xui-icon-md-notifications-outline notice-icon\\\"></i> -->\\n\" +\n    \"        <i class=\\\"xui-icon notice-icon\\\" ng-class=\\\"noticeConfig.iconClassName\\\"></i>\\n\" +\n    \"        <span class=\\\"notice-count\\\" title=\\\"{{noticeConfig.count}}\\\" ng-show=\\\"noticeConfig.count>0\\\">{{noticeConfig.count>99?'99+':noticeConfig.count}}</span>\\n\" +\n    \"    </div>\\n\" +\n    \"    <div class=\\\"xui-notice-content-wrap\\\" id=\\\"{{noticeConfig.modalId}}\\\" ng-mouseenter=\\\"gxNoticeCtrl.mouseenter()\\\" ng-mouseleave=\\\"gxNoticeCtrl.mouseleave()\\\">\\n\" +\n    \"        <div class=\\\"xui-notice-content\\\" >\\n\" +\n    \"            <div class=\\\"notice-tab\\\">\\n\" +\n    \"                <div class=\\\"tab-item\\\" ng-repeat=\\\"item in noticeConfig.tabItem\\\" ng-class=\\\"{true:'active'}[noticeConfig.selectTabId == item.id]\\\" \\n\" +\n    \"                ng-click=\\\"gxNoticeCtrl.tabItemClick(item)\\\">\\n\" +\n    \"                    <span class=\\\"item-name\\\">{{item.name}}\\n\" +\n    \"                        <span class=\\\"item-count\\\" ng-class=\\\"{'circle':'circle','number':''}[noticeConfig.tabMark]\\\" ng-show=\\\"item.count>0\\\" title=\\\"{{item.count}}\\\">\\n\" +\n    \"                            {{noticeConfig.tabMark == 'number' ? (item.count>99?'99+':item.count) : ''}}\\n\" +\n    \"                        </span>\\n\" +\n    \"                    </span>\\n\" +\n    \"                </div>\\n\" +\n    \"            </div>\\n\" +\n    \"            <div class=\\\"notice-content\\\" scroll-bottom=\\\"noticeConfig.loadNextPage()\\\">\\n\" +\n    \"                <ul>\\n\" +\n    \"                    <li class=\\\"content-wrap\\\" ng-if=\\\"!noticeConfig.showNoticeType\\\" ng-click=\\\"noticeConfig.itemClick(item)\\\"\\n\" +\n    \"                        ng-repeat=\\\"item in noticeConfig.noticeList | limitTo : noticeConfig.listMaxLen\\\">\\n\" +\n    \"                        <span class=\\\"content\\\" title=\\\"{{item[noticeConfig.formatField.completeContent] || item.completeContent || item[noticeConfig.formatField.content] || item.content}}\\\">\\n\" +\n    \"                            【<b ng-if=\\\"noticeConfig.formatField.contentTitle\\\" class=\\\"content-title\\\" title=\\\"{{item[noticeConfig.formatField.contentTitle] || item.formatField.contentTitle}}\\\">\\n\" +\n    \"                                {{item[noticeConfig.formatField.contentTitle] || item.formatField.contentTitle}}</b>】\\n\" +\n    \"                            {{item[noticeConfig.formatField.content] || item.content}}\\n\" +\n    \"                        </span>\\n\" +\n    \"                        <span class=\\\"time\\\">{{item[noticeConfig.formatField.time] || item.time}}</span>\\n\" +\n    \"                    </li>\\n\" +\n    \"                    <li class=\\\" content-type-wrap\\\" ng-if=\\\"noticeConfig.showNoticeType\\\" ng-click=\\\"noticeConfig.itemClick(item)\\\"\\n\" +\n    \"                        ng-repeat=\\\"item in noticeConfig.noticeTypeList | limitTo : noticeConfig.listMaxLen\\\">\\n\" +\n    \"                        <span class=\\\"content-type\\\" title=\\\"{{item[noticeConfig.formatField.contentType] || item.contentType}}\\\">\\n\" +\n    \"                            <!-- <b ng-if=\\\"noticeConfig.formatField.contentTitle\\\">【{{item[noticeConfig.formatField.contentTitle] || item.formatField.contentTitle}}】</b> -->\\n\" +\n    \"                            {{item[noticeConfig.formatField.contentType] || item.contentType}}\\n\" +\n    \"                        </span>\\n\" +\n    \"                        <span class=\\\"count\\\">\\n\" +\n    \"                            <i>{{(item[noticeConfig.formatField.count] || item.count)>99?'99+':(item[noticeConfig.formatField.count] || item.count)}}</i>\\n\" +\n    \"                        </span>\\n\" +\n    \"                    </li>\\n\" +\n    \"                    <li ng-if=\\\"!noticeConfig.noticeList.length && !noticeConfig.noticeTypeList.length\\\" class=\\\"no-data-tip\\\">\\n\" +\n    \"                        {{noticeConfig.emptyNoticeTip}}\\n\" +\n    \"                    </li>\\n\" +\n    \"                    <li ng-if=\\\"noticeConfig.noticeList.length\\\">\\n\" +\n    \"                        <p class=\\\"baseline\\\" ng-if=\\\"noticeConfig.tabItem[noticeConfig.selectTabId].count <= 99\\\">没有更多数据了</p>   \\n\" +\n    \"                        <P class=\\\"baseline\\\" ng-if=\\\"noticeConfig.tabItem[noticeConfig.selectTabId].count > 99\\\">更多数据请点击右下角查看全部</P> \\n\" +\n    \"                    </li>\\n\" +\n    \"                </ul>\\n\" +\n    \"            </div>\\n\" +\n    \"            <div class=\\\"notice-footer\\\" ng-if=\\\"noticeConfig.showFooter\\\">\\n\" +\n    \"                <div class=\\\"footer-item\\\" ng-repeat=\\\"item in noticeConfig.footerContent\\\" ng-show=\\\"!!item.show\\\" ng-click=\\\"item.click()\\\">{{item.name}}</div>\\n\" +\n    \"            </div>\\n\" +\n    \"        </div>\\n\" +\n    \"        <div class=\\\"triangle\\\"></div>\\n\" +\n    \"    </div>\\n\" +\n    \"</div>\");\n}]);\n","template/pagination/pager.html.js":"angular.module(\"xue/template/pagination/pager.html\", []).run([\"$templateCache\", function($templateCache) {\n  $templateCache.put(\"xue/template/pagination/pager.html\",\n    \"<ul class=\\\"pager\\\">\\n\" +\n    \"    <li ng-class=\\\"{disabled: noPrevious(), previous: align}\\\"><a href ng-click=\\\"selectPage(page - 1)\\\">{{getText('previous')}}</a></li>\\n\" +\n    \"    <li ng-class=\\\"{disabled: noNext(), next: align}\\\"><a href ng-click=\\\"selectPage(page + 1)\\\">{{getText('next')}}</a></li>\\n\" +\n    \"</ul>\");\n}]);\n","template/pagination/pagination.html.js":"angular.module(\"xue/template/pagination/pagination.html\", []).run([\"$templateCache\", function($templateCache) {\n  $templateCache.put(\"xue/template/pagination/pagination.html\",\n    \"<ul class=\\\"xui-pagination-wrap\\\">\\n\" +\n    \"    <li ng-if=\\\"boundaryLinks\\\" class=\\\"page-item\\\" ng-class=\\\"{disabled: noPrevious()}\\\">\\n\" +\n    \"        <a href class=\\\"page-link\\\" ng-click=\\\"selectPage(1)\\\">{{getText('first')}}</a>\\n\" +\n    \"    </li>\\n\" +\n    \"    <li ng-if=\\\"directionLinks\\\" class=\\\"page-item\\\" ng-class=\\\"{disabled: noPrevious()}\\\">\\n\" +\n    \"        <a href class=\\\"page-link\\\" ng-click=\\\"selectPage(page - 1)\\\">{{getText('previous')}}</a>\\n\" +\n    \"    </li>\\n\" +\n    \"    <li ng-repeat=\\\"page in pages track by $index\\\" class=\\\"page-item\\\" ng-class=\\\"{active: page.active}\\\">\\n\" +\n    \"        <a href class=\\\"page-link\\\" ng-click=\\\"selectPage(page.number)\\\">{{page.text}}</a>\\n\" +\n    \"    </li>\\n\" +\n    \"    <li ng-if=\\\"directionLinks\\\" class=\\\"page-item\\\" ng-class=\\\"{disabled: noNext()}\\\">\\n\" +\n    \"        <a href class=\\\"page-link\\\" ng-click=\\\"selectPage(page + 1)\\\">{{getText('next')}}</a>\\n\" +\n    \"    </li>\\n\" +\n    \"    <li ng-if=\\\"boundaryLinks\\\" class=\\\"page-item\\\" ng-class=\\\"{disabled: noNext()}\\\">\\n\" +\n    \"        <a href class=\\\"page-link\\\" ng-click=\\\"selectPage(totalPages)\\\">{{getText('last')}}</a>\\n\" +\n    \"    </li>\\n\" +\n    \"</ul>\");\n}]);\n","template/scroller/scroller.html.js":"angular.module(\"xue/template/scroller/scroller.html\", []).run([\"$templateCache\", function($templateCache) {\n  $templateCache.put(\"xue/template/scroller/scroller.html\",\n    \"<div class=\\\"xui-scroller-container\\\" ng-style=\\\"scrollConfig.backgroundStyle\\\">\\n\" +\n    \"    <div class=\\\"scroller-content\\\">\\n\" +\n    \"        <div class=\\\"dynamic-container\\\" ng-style=\\\"{'top':-scrollConfig.goIndex*scrollConfig.itemHeight+'px' || 0}\\\">\\n\" +\n    \"            <ul ng-repeat=\\\"item in scrollConfig.data track by $index\\\" ng-style=\\\"scrollConfig.goIndex == $index ? scrollConfig.highlightStyle : {}\\\">\\n\" +\n    \"                <li ng-if=\\\"scrollConfig.dataType == 1\\\" ng-style=\\\"scrollConfig.itemStyle\\\">\\n\" +\n    \"                    {{item}}\\n\" +\n    \"                </li>\\n\" +\n    \"                <li ng-if=\\\"scrollConfig.dataType == 2\\\" ng-repeat=\\\"list in item\\\" ng-style=\\\"scrollConfig.itemStyle[$index]\\\">\\n\" +\n    \"                    {{list}}\\n\" +\n    \"                </li>\\n\" +\n    \"                <li ng-if=\\\"scrollConfig.dataType == 3\\\" ng-style=\\\"scrollConfig.itemStyle\\\" ng-class=\\\"item.class\\\">\\n\" +\n    \"                    {{item.text}}\\n\" +\n    \"                </li>\\n\" +\n    \"            </ul>\\n\" +\n    \"        </div>\\n\" +\n    \"    </div>\\n\" +\n    \"</div>\");\n}]);\n","template/select/select.html.js":"angular.module(\"xue/template/select/select.html\", []).run([\"$templateCache\", function($templateCache) {\n  $templateCache.put(\"xue/template/select/select.html\",\n    \"<div class=\\\"xui-select-warp\\\">\\n\" +\n    \"    <!-- 单选可过滤不分离 -->\\n\" +\n    \"    <div ng-if=\\\"!selectConfig.checkbox && selectConfig.filter && !selectConfig.separate\\\">\\n\" +\n    \"        <input ng-focus=\\\"focus()\\\" type=\\\"text\\\" class=\\\"xui-input select-show\\\" title=\\\"{{selectConfig.inputLabel}}\\\"\\n\" +\n    \"            ng-model=\\\"selectConfig.inputLabel\\\" ng-class=\\\"selectClass\\\" ng-style=\\\"showStyle\\\" ng-change=\\\"changeIpt()\\\"\\n\" +\n    \"            ng-disabled=\\\"selectConfig.disabled\\\" />\\n\" +\n    \"        <i class=\\\"select-arrow\\\"></i>\\n\" +\n    \"        <div class=\\\"select-content\\\" ng-style=\\\"contentStyle\\\">\\n\" +\n    \"            <ul class=\\\"select-list\\\">\\n\" +\n    \"                <li ng-click=\\\"onBeforeSelect(item,$event)\\\"\\n\" +\n    \"                    ng-class=\\\"{true:'active'}[item[selectConfig.valueField] == selectConfig.value]\\\"\\n\" +\n    \"                    ng-repeat=\\\"item in selectConfig.data | filter:selectConfig.inputLabel  | limitTo:selectConfig.showLimit\\\">\\n\" +\n    \"                    <span ng-bind=\\\"item[selectConfig.textField] || textFieldFormat(item)\\\"></span>\\n\" +\n    \"                </li>\\n\" +\n    \"                <li ng-if=\\\"!!!selectConfig.data || !selectConfig.data.length\\\" class=\\\"empty-data\\\">\\n\" +\n    \"                    <span>暂无数据</span>\\n\" +\n    \"                </li>\\n\" +\n    \"            </ul>\\n\" +\n    \"            <iframe title=\\\"\\\"></iframe>\\n\" +\n    \"        </div>\\n\" +\n    \"    </div>\\n\" +\n    \"    <!-- 单选可过滤且分离 -->\\n\" +\n    \"    <div ng-if=\\\"!selectConfig.checkbox && selectConfig.filter && selectConfig.separate\\\">\\n\" +\n    \"        <input ng-click=\\\"focus()\\\" type=\\\"button\\\" class=\\\"xui-input select-show\\\" ng-disabled=\\\"selectConfig.disabled\\\"\\n\" +\n    \"            title=\\\"{{selectConfig.inputLabel}}\\\" ng-class=\\\"selectClass\\\" ng-style=\\\"showStyle\\\" />\\n\" +\n    \"        <i class=\\\"select-arrow\\\"></i>\\n\" +\n    \"        <div class=\\\"select-content select-content-checkbox select-separate\\\" ng-style=\\\"contentStyle\\\">\\n\" +\n    \"            <div class=\\\"separate-wrap\\\" ng-class=\\\"{'hidden-filter':!selectConfig.enableEmpty}\\\">\\n\" +\n    \"                <div class=\\\"select-filter-wrap\\\">\\n\" +\n    \"                    <input type=\\\"text\\\" ng-model=\\\"selectConfig.myLabel\\\" class=\\\"xui-input select-filter\\\" />\\n\" +\n    \"                </div>\\n\" +\n    \"                <i ng-click=\\\"clear()\\\" ng-if=\\\"selectConfig.enableEmpty\\\" title=\\\"清空\\\" class=\\\"xui-icon xui-icon-ios-trash\\\"></i>\\n\" +\n    \"            </div>\\n\" +\n    \"            <ul class=\\\"select-list\\\">\\n\" +\n    \"                <li ng-click=\\\"onBeforeSelect(item,$event)\\\"\\n\" +\n    \"                    ng-class=\\\"{true:'active'}[item[selectConfig.valueField] == selectConfig.value]\\\"\\n\" +\n    \"                    ng-repeat=\\\"item in selectConfig.data | filter:selectConfig.myLabel  | limitTo:selectConfig.showLimit\\\">\\n\" +\n    \"                    <span ng-bind=\\\"item[selectConfig.textField] || textFieldFormat(item)\\\"></span>\\n\" +\n    \"                </li>\\n\" +\n    \"                <li ng-if=\\\"!!!selectConfig.data || !selectConfig.data.length\\\" class=\\\"empty-data\\\">\\n\" +\n    \"                    <span>暂无数据</span>\\n\" +\n    \"                </li>\\n\" +\n    \"            </ul>\\n\" +\n    \"            <iframe title=\\\"\\\"></iframe>\\n\" +\n    \"        </div>\\n\" +\n    \"    </div>\\n\" +\n    \"    <!-- 单选不可过滤且分离 -->\\n\" +\n    \"    <div ng-if=\\\"!selectConfig.checkbox && !selectConfig.filter\\\">\\n\" +\n    \"        <input ng-focus=\\\"focus()\\\" type=\\\"button\\\" class=\\\"xui-input select-show\\\" title=\\\"{{selectConfig.inputLabel}}\\\"\\n\" +\n    \"            ng-class=\\\"selectClass\\\" ng-style=\\\"showStyle\\\" ng-disabled=\\\"selectConfig.disabled\\\" />\\n\" +\n    \"        <i class=\\\"select-arrow\\\"></i>\\n\" +\n    \"        <div class=\\\"select-content\\\" ng-style=\\\"contentStyle\\\">\\n\" +\n    \"            <ul class=\\\"select-list\\\">\\n\" +\n    \"                <li ng-click=\\\"onBeforeSelect(item,$event)\\\"\\n\" +\n    \"                    ng-class=\\\"{true:'active'}[item[selectConfig.valueField] == selectConfig.value]\\\"\\n\" +\n    \"                    ng-repeat=\\\"item in selectConfig.data | limitTo:selectConfig.showLimit\\\">\\n\" +\n    \"                    <span ng-bind=\\\"item[selectConfig.textField] || textFieldFormat(item)\\\"></span>\\n\" +\n    \"                </li>\\n\" +\n    \"                <li ng-if=\\\"!!!selectConfig.data || !selectConfig.data.length\\\" class=\\\"empty-data\\\">\\n\" +\n    \"                    <span>暂无数据</span>\\n\" +\n    \"                </li>\\n\" +\n    \"            </ul>\\n\" +\n    \"            <iframe title=\\\"\\\"></iframe>\\n\" +\n    \"        </div>\\n\" +\n    \"    </div>\\n\" +\n    \"    <!-- 多选-->\\n\" +\n    \"    <div ng-if=\\\"selectConfig.checkbox && selectConfig.filter\\\">\\n\" +\n    \"        <input ng-click=\\\"focus()\\\" type=\\\"button\\\" class=\\\"xui-input select-show\\\" ng-disabled=\\\"selectConfig.disabled\\\" \\n\" +\n    \"            title=\\\"{{selectConfig.inputLabel}}\\\" ng-class=\\\"selectClass\\\" ng-style=\\\"showStyle\\\" />\\n\" +\n    \"        <i class=\\\"select-arrow\\\"></i>\\n\" +\n    \"        <div class=\\\"select-content select-content-checkbox  select-separate\\\" ng-style=\\\"contentStyle\\\">\\n\" +\n    \"            <div class=\\\"separate-wrap\\\">\\n\" +\n    \"                <div class=\\\"select-filter-wrap\\\">\\n\" +\n    \"                    <input type=\\\"text\\\" ng-model=\\\"selectConfig.myLabel\\\" class=\\\"xui-input select-filter\\\" />\\n\" +\n    \"                </div>\\n\" +\n    \"                <i ng-click=\\\"clear()\\\" ng-if=\\\"selectConfig.enableEmpty\\\" title=\\\"清空\\\" class=\\\"xui-icon xui-icon-ios-trash\\\"></i>\\n\" +\n    \"            </div>\\n\" +\n    \"            <ul ng-style=\\\"showContent\\\" class=\\\"select-list\\\">\\n\" +\n    \"                <li ng-click=\\\"selectLi(item,$event)\\\"\\n\" +\n    \"                    ng-class=\\\"{true:'active'}[!!selectConfig.checkRowsMap[item[selectConfig.valueField]]]\\\"\\n\" +\n    \"                    ng-repeat=\\\"item in selectConfig.data | filter:selectConfig.myLabel | limitTo:selectConfig.showLimit\\\">\\n\" +\n    \"                    <xue-checkbox ng-checked=\\\"selectConfig.checkRowsMap[item[selectConfig.valueField]]\\\"></xue-checkbox>\\n\" +\n    \"                    <span ng-bind=\\\"item[selectConfig.textField] || textFieldFormat(item)\\\"></span>\\n\" +\n    \"                </li>\\n\" +\n    \"                <li ng-if=\\\"!!!selectConfig.data || !selectConfig.data.length\\\" class=\\\"empty-data\\\">\\n\" +\n    \"                    <span>暂无数据</span>\\n\" +\n    \"                </li>\\n\" +\n    \"            </ul>\\n\" +\n    \"            <iframe title=\\\"\\\"></iframe>\\n\" +\n    \"        </div>\\n\" +\n    \"    </div>\\n\" +\n    \"    <!-- 多选不可过滤-->\\n\" +\n    \"    <div ng-if=\\\"selectConfig.checkbox && !selectConfig.filter\\\">\\n\" +\n    \"        <input ng-click=\\\"focus()\\\" type=\\\"button\\\" class=\\\"xui-input select-show\\\" ng-disabled=\\\"selectConfig.disabled\\\" title=\\\"{{selectConfig.inputLabel}}\\\"\\n\" +\n    \"            ng-class=\\\"selectClass\\\" ng-style=\\\"showStyle\\\" />\\n\" +\n    \"        <i class=\\\"select-arrow\\\"></i>\\n\" +\n    \"        <div class=\\\"select-content  select-separate\\\" ng-style=\\\"contentStyle\\\">\\n\" +\n    \"            <ul ng-style=\\\"showContent\\\" class=\\\"select-list\\\">\\n\" +\n    \"                <li ng-click=\\\"selectLi(item,$event)\\\"\\n\" +\n    \"                    ng-class=\\\"{true:'active'}[!!selectConfig.checkRowsMap[item[selectConfig.valueField]]]\\\"\\n\" +\n    \"                    ng-repeat=\\\"item in selectConfig.data | filter:selectConfig.myLabel | limitTo:selectConfig.showLimit\\\">\\n\" +\n    \"                    <xue-checkbox ng-checked=\\\"selectConfig.checkRowsMap[item[selectConfig.valueField]]\\\"></xue-checkbox>\\n\" +\n    \"                    <span ng-bind=\\\"item[selectConfig.textField] || textFieldFormat(item)\\\"></span>\\n\" +\n    \"                </li>\\n\" +\n    \"                <li ng-if=\\\"!!!selectConfig.data || !selectConfig.data.length\\\" class=\\\"empty-data\\\">\\n\" +\n    \"                    <span>暂无数据</span>\\n\" +\n    \"                </li>\\n\" +\n    \"            </ul>\\n\" +\n    \"            <iframe title=\\\"\\\"></iframe>\\n\" +\n    \"        </div>\\n\" +\n    \"    </div>\\n\" +\n    \"</div>\");\n}]);\n","template/steps/steps.html.js":"angular.module(\"xue/template/steps/steps.html\", []).run([\"$templateCache\", function($templateCache) {\n  $templateCache.put(\"xue/template/steps/steps.html\",\n    \"<div class=\\\"xui-steps-wrap {{stepsConfig.direction}} {{stepsConfig.theme}} {{stepsConfig.alignCenter?'is-center':''}} {{stepsConfig.size}}\\\">\\n\" +\n    \"    <div class=\\\"step-item\\\" ng-repeat=\\\"option in stepsConfig.options\\\"\\n\" +\n    \"        ng-class=\\\"{'active':option[stepsConfig.idField]==ngValue,'passed':option.passed,'future':option[stepsConfig.idField]!=ngValue && !option.passed,'last':$last}\\\">\\n\" +\n    \"        <div class=\\\"step-bar\\\">\\n\" +\n    \"            <div class=\\\"bar-icon {{stepsConfig.iconStyle}}\\\" ng-click=\\\"stepsCtrl.stepClick(option)\\\">\\n\" +\n    \"                <img class=\\\"bar-icon-inner\\\" ng-if=\\\"stepsConfig.iconStyle=='img'\\\" ng-src=\\\"{{option.imgUrl}}\\\" alt=\\\"\\\">\\n\" +\n    \"                <i class=\\\"bar-icon-inner {{option.iconfont}}\\\" ng-if=\\\"stepsConfig.iconStyle=='iconfont'\\\"></i>\\n\" +\n    \"                <span class=\\\"bar-icon-inner\\\" ng-if=\\\"stepsConfig.iconStyle=='num'\\\">{{$index+1}}</span>\\n\" +\n    \"                <span class=\\\"bar-icon-inner\\\"\\n\" +\n    \"                    ng-if=\\\"stepsConfig.iconStyle=='statusNum' && !option.passed\\\">{{$index+1}}</span>\\n\" +\n    \"                <i class=\\\"bar-icon-inner xui-icon xui-icon-md-checkmark\\\"\\n\" +\n    \"                    ng-if=\\\"(stepsConfig.iconStyle=='statusNum'||stepsConfig.iconStyle=='strokeStatus'||stepsConfig.iconStyle=='fillStatus') && option.passed && option[stepsConfig.idField]!=ngValue\\\"></i>\\n\" +\n    \"            </div>\\n\" +\n    \"            <div class=\\\"bar-line\\\"></div>\\n\" +\n    \"        </div>\\n\" +\n    \"        <div class=\\\"step-main\\\">\\n\" +\n    \"            <div class=\\\"step-title\\\" ng-click=\\\"stepsCtrl.stepClick(option)\\\">{{option[stepsConfig.nameField]}}</div>\\n\" +\n    \"            <div class=\\\"step-description\\\">{{option[stepsConfig.descField]}}</div>\\n\" +\n    \"        </div>\\n\" +\n    \"    </div>\\n\" +\n    \"</div>\");\n}]);\n","template/table/table.html.js":"angular.module(\"xue/template/table/table.html\", []).run([\"$templateCache\", function($templateCache) {\n  $templateCache.put(\"xue/template/table/table.html\",\n    \"<div class=\\\"xui-table-wrap\\\" ng-class=\\\"{0:'',1:'show-pagination',2:'show-toolbar',3:'show-toolbar-pagination'}[layout]\\\">\\n\" +\n    \"    <div class=\\\"xui-table-header\\\" ng-if=\\\"tableConfig.toolbar.show\\\">\\n\" +\n    \"        <span class=\\\"table-title\\\">\\n\" +\n    \"            {{tableConfig.toolbar.title}}\\n\" +\n    \"        </span>\\n\" +\n    \"        <div class=\\\"btn-group toolbar-btn\\\">\\n\" +\n    \"            <button class=\\\"btn\\\" type=\\\"button\\\" has-permission=\\\"tool.permissionCode\\\" ng-click=\\\"tool.callback()\\\"\\n\" +\n    \"                ng-repeat=\\\"tool in tableConfig.toolbar.tools\\\">\\n\" +\n    \"                <i class=\\\"{{tool.icon}}\\\"></i>{{tool.text}}\\n\" +\n    \"            </button>\\n\" +\n    \"            <button class=\\\"btn\\\" type=\\\"button\\\" ng-if=\\\"tool.noPermission\\\" ng-click=\\\"tool.callback()\\\"\\n\" +\n    \"                ng-repeat=\\\"tool in tableConfig.toolbar.tools\\\">\\n\" +\n    \"                <i class=\\\"{{tool.icon}}\\\"></i>{{tool.text}}\\n\" +\n    \"            </button>\\n\" +\n    \"            <div class=\\\"tooltip-container\\\">\\n\" +\n    \"                <button class=\\\"btn\\\" type=\\\"button\\\" ng-if=\\\"tableConfig.showTableCol\\\" id=\\\"showTableCol1\\\"\\n\" +\n    \"                    ng-class=\\\"{'tooltip-btn':tableConfig.toolbar.tools.length}\\\">\\n\" +\n    \"                    <i class=\\\"xui-icon xui-icon-ios-eye-outline\\\"></i>显示选项\\n\" +\n    \"                </button>\\n\" +\n    \"                <div class=\\\"option-dialog\\\" ng-if=\\\"tableConfig.toolbar.show\\\" id=\\\"showTableCol2\\\">\\n\" +\n    \"                    <i class=\\\"arrow\\\"></i>\\n\" +\n    \"                    <div class=\\\"option-top\\\">\\n\" +\n    \"                        <span class=\\\"select-all\\\" ng-click=\\\"popup.selectAll()\\\">\\n\" +\n    \"                            <xue-checkbox ng-checked=\\\"tableConfig.selectAllColumn\\\"></xue-checkbox>\\n\" +\n    \"                            <label>全选</label>\\n\" +\n    \"                        </span>\\n\" +\n    \"                    </div>\\n\" +\n    \"                    <div class=\\\"option-content\\\">\\n\" +\n    \"                        <ul>\\n\" +\n    \"                            <li ng-repeat=\\\"colunm in tableConfig.colunms\\\" ng-click=\\\"popup.singleSelect(colunm)\\\">\\n\" +\n    \"                                <xue-checkbox ng-checked=\\\"colunm.show\\\"></xue-checkbox>\\n\" +\n    \"                                <label>{{colunm.label}}</label>\\n\" +\n    \"                            </li>\\n\" +\n    \"                        </ul>\\n\" +\n    \"                    </div>\\n\" +\n    \"                </div>\\n\" +\n    \"            </div>\\n\" +\n    \"        </div>\\n\" +\n    \"    </div>\\n\" +\n    \"    <div class=\\\"xui-table-content\\\" ng-class=\\\"{'th-border':tableConfig.drag}\\\">\\n\" +\n    \"        <table class=\\\"xui-table\\\" ng-class=\\\"{'xui-table-hover':tableConfig.tableHover}\\\">\\n\" +\n    \"            <tr>\\n\" +\n    \"                <th ng-if=\\\"tableConfig.checkbox\\\" class=\\\"table-checkbox\\\">\\n\" +\n    \"                    <xue-checkbox ng-checked=\\\"tableConfig.selectAll\\\" ng-click=\\\"selectAll()\\\"></xue-checkbox>\\n\" +\n    \"                </th>\\n\" +\n    \"                <th ng-if=\\\"!tableConfig.checkbox && tableConfig.radio\\\" class=\\\"table-checkbox\\\">\\n\" +\n    \"\\n\" +\n    \"                </th>\\n\" +\n    \"                <th ng-if=\\\"tableConfig.showIndex\\\" style=\\\"min-width:30px\\\">{{tableConfig.indexTitle}}</th>\\n\" +\n    \"                <th ng-repeat=\\\"item in tableConfig.colunms\\\" ng-style=\\\"item.style\\\" ng-if=\\\"item.show\\\"\\n\" +\n    \"                    data-ng-bind-html=\\\"item.label | trusthtml:tableConfig.defaultNull\\\" ng-click=\\\"order(item)\\\"\\n\" +\n    \"                    ng-class=\\\"{isActive : item.name == tableConfig.orderColumn, down : tableConfig.desc}\\\">\\n\" +\n    \"                </th>\\n\" +\n    \"                <th ng-repeat=\\\"optConfig in tableConfig.optConfig\\\" ng-style=\\\"optConfig.optStyle\\\">{{optConfig.optName}}\\n\" +\n    \"                </th>\\n\" +\n    \"                <th ng-repeat=\\\"optConfig in tableConfig.optConfigExt\\\" ng-style=\\\"optConfig.optStyle\\\">\\n\" +\n    \"                    {{optConfig.optName}}</th>\\n\" +\n    \"            </tr>\\n\" +\n    \"            <tr ng-repeat=\\\"row in tableConfig.rows | orderBy:tableConfig.orderColumn:tableConfig.desc track by $index\\\"\\n\" +\n    \"                ng-class-even=\\\"'even'\\\" ng-class-odd=\\\"'odd'\\\" ng-click=\\\"rowClick(row,$event)\\\"\\n\" +\n    \"                ng-dblclick=\\\"rowDbclick(row,$event)\\\" ng-class=\\\"{true:'selected'}[!!row.$checked]\\\">\\n\" +\n    \"                <td ng-if=\\\"tableConfig.checkbox\\\" class=\\\"table-checkbox\\\">\\n\" +\n    \"                    <xue-checkbox ng-checked=\\\"row.$checked\\\"></xue-checkbox>\\n\" +\n    \"                </td>\\n\" +\n    \"                <td ng-if=\\\"!tableConfig.checkbox && tableConfig.radio\\\" class=\\\"table-checkbox\\\">\\n\" +\n    \"                    <xue-radio ng-checked=\\\"row.$checked\\\"></xue-radio>\\n\" +\n    \"                </td>\\n\" +\n    \"                <td ng-if=\\\"tableConfig.showIndex\\\">{{(tableConfig.page-1)*tableConfig.size+$index+1}}</td>\\n\" +\n    \"                <td ng-repeat=\\\"colunm in tableConfig.colunms\\\" ng-if=\\\"colunm.show\\\"\\n\" +\n    \"                    data-ng-bind-html=\\\"row[colunm.name] | trusthtml:tableConfig.defaultNull\\\"\\n\" +\n    \"                    ng-click=\\\"colClick(row,$event,colunm.click)\\\" title=\\\"{{row[colunm.name]}}\\\">\\n\" +\n    \"                </td>\\n\" +\n    \"                <td ng-repeat=\\\"optConfig in tableConfig.optConfig\\\" class=\\\"table-checkbox\\\" data-event=\\\"notChecked\\\">\\n\" +\n    \"                    <a has-permission=\\\"item.permissionCode\\\" ng-repeat=\\\"item in optConfig.optContent\\\"\\n\" +\n    \"                        ng-click=\\\"item.callback(row)\\\" class=\\\"{{item.className}}\\\" title=\\\"{{item.name}}\\\"><span\\n\" +\n    \"                            ng-if=\\\"item.showText\\\">{{item.name}}</span></a>\\n\" +\n    \"                    <a ng-if=\\\"!!item.noPermission\\\" ng-repeat=\\\"item in optConfig.optContent\\\"\\n\" +\n    \"                        ng-click=\\\"item.callback(row)\\\" class=\\\"{{item.className}}\\\" title=\\\"{{item.name}}\\\"><span\\n\" +\n    \"                            ng-if=\\\"item.showText\\\">{{item.name}}</span></a>\\n\" +\n    \"                </td>\\n\" +\n    \"                <td ng-repeat=\\\"optConfig in tableConfig.optConfigExt\\\" class=\\\"table-checkbox\\\" data-event=\\\"notChecked\\\">\\n\" +\n    \"                    <a ng-class=\\\"{false:'ope-hidden'}[!!row[item.id]]\\\" ng-repeat=\\\"item in optConfig.optContent\\\"\\n\" +\n    \"                        ng-click=\\\"!!row[item.id] ? item.callback(row):noPermission()\\\"\\n\" +\n    \"                        class=\\\"{{item.className ? item.className : row[item.id]}}\\\" title=\\\"{{item.name}}\\\"><span\\n\" +\n    \"                            ng-if=\\\"item.showText\\\">{{item.name}}</span></a>\\n\" +\n    \"                </td>\\n\" +\n    \"            </tr>\\n\" +\n    \"            <tr ng-if=\\\"!tableConfig.rows || tableConfig.rows.length == 0\\\">\\n\" +\n    \"                <td colspan=\\\"{{tableConfig.nodataColspan\\n\" +\n    \"                    + (tableConfig.optConfig.length || 0) \\n\" +\n    \"                    + (tableConfig.checkbox ? 1 : 0) \\n\" +\n    \"                    + (tableConfig.radio ? 1 : 0) \\n\" +\n    \"                    + (tableConfig.showIndex ? 1 : 0) \\n\" +\n    \"                    + (tableConfig.optConfigExt.length || 0) }}\\\">\\n\" +\n    \"                    {{tableConfig.noDataText}}</td>\\n\" +\n    \"            </tr>\\n\" +\n    \"        </table>\\n\" +\n    \"    </div>\\n\" +\n    \"    <div class=\\\"xui-table-footer\\\" ng-if=\\\"tableConfig.pagination\\\">\\n\" +\n    \"        <div class=\\\"total-size\\\" ng-if=\\\"tableConfig.pagesize\\\">\\n\" +\n    \"            <div class=\\\"total\\\">总共<span>{{tableConfig.total}}</span>条记录</div>\\n\" +\n    \"            <div class=\\\"size\\\">每页显示\\n\" +\n    \"                <select ng-model=\\\"tableConfig.size\\\"\\n\" +\n    \"                    ng-options=\\\"pageSize for pageSize in tableConfig.pageList\\\"></select>条\\n\" +\n    \"            </div>\\n\" +\n    \"        </div>\\n\" +\n    \"        <xue-pagination class=\\\"xui-pagination-sm\\\" total-items=\\\"tableConfig.total\\\" max-size=\\\"mv.maxSize\\\" ng-model=\\\"tableConfig.page\\\"\\n\" +\n    \"            items-per-page=\\\"tableConfig.size\\\" boundary-links=\\\"true\\\">\\n\" +\n    \"        </xue-pagination>\\n\" +\n    \"    </div>\\n\" +\n    \"</div>\");\n}]);\n","template/tabs/tab.html.js":"angular.module(\"xue/template/tabs/tab.html\", []).run([\"$templateCache\", function($templateCache) {\n  $templateCache.put(\"xue/template/tabs/tab.html\",\n    \"<li ng-class=\\\"{'active':active,'disabled':disabled}\\\" class=\\\"nav-item\\\">\\n\" +\n    \"    <a class=\\\"nav-link\\\" ng-click=\\\"select($event)\\\" xue-tab-head>{{label}}</a>\\n\" +\n    \"</li>\");\n}]);\n","template/tabs/tabs_wrap.html.js":"angular.module(\"xue/template/tabs/tabs_wrap.html\", []).run([\"$templateCache\", function($templateCache) {\n  $templateCache.put(\"xue/template/tabs/tabs_wrap.html\",\n    \"<div class=\\\"xui-tabs-wrap\\\" ng-class=\\\"type\\\">\\n\" +\n    \"    <ul class=\\\"xui-nav-wrap\\\" ng-transclude></ul>\\n\" +\n    \"    <div class=\\\"xui-tabs-content\\\">\\n\" +\n    \"        <div class=\\\"tab-pane\\\" ng-repeat=\\\"tab in twCtrl.tabs\\\" \\n\" +\n    \"            ng-show=\\\"$index == index\\\" \\n\" +\n    \"            xue-tab-content=\\\"tab\\\">\\n\" +\n    \"        </div>\\n\" +\n    \"    </div>\\n\" +\n    \"</div>\");\n}]);\n","template/tree/tree.html.js":"angular.module(\"xue/template/tree/tree.html\", []).run([\"$templateCache\", function($templateCache) {\n  $templateCache.put(\"xue/template/tree/tree.html\",\n    \"<div class=\\\"xui-tree-wrap\\\" ng-class=\\\"{'support-search':treeConfig.search}\\\">\\n\" +\n    \"    <div class=\\\"tree-search\\\" ng-if=\\\"treeConfig.search\\\">\\n\" +\n    \"        <input class=\\\"tree-ipt\\\"\\n\" +\n    \"            type=\\\"text\\\"\\n\" +\n    \"            ng-model=\\\"treeCtrl.searchText\\\"\\n\" +\n    \"            ng-change=\\\"treeCtrl.filterNode(treeConfig.data)\\\" />\\n\" +\n    \"    </div>\\n\" +\n    \"\\n\" +\n    \"    <ul class=\\\"tree-list\\\">\\n\" +\n    \"        <li id=\\\"{{ 'node_' + item[treeConfig.uniqueId] }}\\\"\\n\" +\n    \"            class=\\\"tree-item {{ 'level' + item.depth }}\\\"\\n\" +\n    \"            ng-include=\\\"'treeTemp'\\\"\\n\" +\n    \"            ng-if=\\\"!item.hideNode\\\"\\n\" +\n    \"            ng-class=\\\"{'leaf': item.isLeaf, 'show-line': treeConfig.showLine}\\\"\\n\" +\n    \"            ng-repeat=\\\"item in treeConfig.data\\\">\\n\" +\n    \"        </li>\\n\" +\n    \"    </ul>\\n\" +\n    \"\\n\" +\n    \"    <script id=\\\"treeTemp\\\" type=\\\"text/ng-template\\\">\\n\" +\n    \"        <div class=\\\"tree-row\\\"\\n\" +\n    \"            ng-click=\\\"treeCtrl.clickNode(item, $event)\\\"\\n\" +\n    \"            ng-dblclick=\\\"treeCtrl.dblClickNode(item, $event)\\\">\\n\" +\n    \"                <span class=\\\"expand-icon node-align xui-icon\\\"\\n\" +\n    \"                    ng-click=\\\"treeCtrl.expandNode(item, $event)\\\"\\n\" +\n    \"                    ng-class=\\\"{'expanded': item.expanded, 'xui-icon-md-arrow-dropright': !item.isLeaf}\\\">\\n\" +\n    \"                </span>\\n\" +\n    \"                <span class=\\\"check-icon node-align\\\"\\n\" +\n    \"                    ng-if=\\\"treeConfig.showCheckbox && !item.chkDisabled\\\"\\n\" +\n    \"                    ng-click=\\\"treeCtrl.changeNode(item, $event)\\\">\\n\" +\n    \"                        <xue-multi-checkbox multi-type=\\\"item.checked\\\" ng-disabled=\\\"item.disabled\\\"></xue-multi-checkbox>\\n\" +\n    \"                </span>\\n\" +\n    \"                <span class=\\\"node-icon node-align\\\" ng-show=\\\"treeConfig.showIcon\\\">\\n\" +\n    \"                    <i ng-if=\\\"item.iconClass\\\" class=\\\"{{ item.iconClass }}\\\"></i>\\n\" +\n    \"                    <i ng-if=\\\"!item.iconClass && treeConfig.icon.commonIconClass\\\" class=\\\"{{ treeConfig.icon.commonIconClass }}\\\"></i>\\n\" +\n    \"                    <i ng-if=\\\"!item.iconClass && !treeConfig.icon.commonIconClass\\\" ng-class=\\\"{true: treeConfig.icon.parentIconClass, false: treeConfig.icon.leafIconClass}[!item.isLeaf]\\\"></i>\\n\" +\n    \"                </span>\\n\" +\n    \"                <span class=\\\"node-title node-align\\\"\\n\" +\n    \"                    title=\\\"{{ item[treeConfig.nodeName] }}\\\"\\n\" +\n    \"                    ng-class=\\\"{'active': treeCtrl.currentSelectedNode === item[treeConfig.uniqueId]}\\\">\\n\" +\n    \"                        {{ item[treeConfig.nodeName] }}\\n\" +\n    \"                </span>\\n\" +\n    \"                <span class=\\\"loading-icon node-align xui-icon xui-icon-ios-loading\\\" ng-show=\\\"item.loading\\\"></span>\\n\" +\n    \"        </div>\\n\" +\n    \"        <ul class=\\\"tree-list\\\" ng-if=\\\"item.expanded\\\" ng-if=\\\"!item.isLeaf\\\">\\n\" +\n    \"            <li id=\\\"{{ 'node_' + item[treeConfig.uniqueId] }}\\\"\\n\" +\n    \"                class=\\\"tree-item {{ 'level' + item.depth }}\\\" \\n\" +\n    \"                ng-include=\\\"'treeTemp'\\\"\\n\" +\n    \"                ng-if=\\\"!item.hideNode\\\"\\n\" +\n    \"                ng-class=\\\"{'leaf': item.isLeaf, 'show-line': treeConfig.showLine}\\\"\\n\" +\n    \"                ng-repeat=\\\"item in item[treeConfig.childName]\\\">\\n\" +\n    \"            </li>\\n\" +\n    \"        </ul>\\n\" +\n    \"    </script>\\n\" +\n    \"</div>\");\n}]);\n"}}